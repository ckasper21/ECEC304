ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Stop,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_Stop
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Stop, %function
  23              	PWM_Stop:
  24              	.LFB3:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** 
  21:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  22:.\Generated_Source\PSoC4/PWM.c **** 
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  25:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  26:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  27:.\Generated_Source\PSoC4/PWM.c **** *
  28:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  29:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  30:.\Generated_Source\PSoC4/PWM.c **** *
  31:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  32:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** *
  34:.\Generated_Source\PSoC4/PWM.c **** * Return:
  35:.\Generated_Source\PSoC4/PWM.c **** *  None
  36:.\Generated_Source\PSoC4/PWM.c **** *
  37:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  38:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  39:.\Generated_Source\PSoC4/PWM.c **** {
  40:.\Generated_Source\PSoC4/PWM.c **** 
  41:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  42:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  43:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_QUAD_BASE_CONFIG;
  44:.\Generated_Source\PSoC4/PWM.c ****         
  45:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  46:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_QUAD_SIGNALS_MODES;
  47:.\Generated_Source\PSoC4/PWM.c **** 
  48:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  49:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
  50:.\Generated_Source\PSoC4/PWM.c ****         
  51:.\Generated_Source\PSoC4/PWM.c ****          /* Set other values */
  52:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetCounterMode(PWM_COUNT_DOWN);
  53:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_QUAD_PERIOD_INIT_VALUE);
  54:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_QUAD_PERIOD_INIT_VALUE);
  55:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  56:.\Generated_Source\PSoC4/PWM.c **** 
  57:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  58:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_TIMER_BASE_CONFIG;
  59:.\Generated_Source\PSoC4/PWM.c ****         
  60:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_TIMER_SIGNALS_MODES;
  62:.\Generated_Source\PSoC4/PWM.c ****     
  63:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
  64:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
  65:.\Generated_Source\PSoC4/PWM.c ****         
  66:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
  67:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
  68:.\Generated_Source\PSoC4/PWM.c **** 
  69:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
  70:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
  73:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
  74:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
  75:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
  76:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****         /* Initialize counter value */
  79:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  80:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(1u);
  81:.\Generated_Source\PSoC4/PWM.c ****         #elif(PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
  82:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE);
  83:.\Generated_Source\PSoC4/PWM.c ****         #else
  84:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(0u);
  85:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_CY_TCPWM_V2 && PWM_TIMER_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
  86:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  87:.\Generated_Source\PSoC4/PWM.c **** 
  88:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  89:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG = PWM_CTRL_PWM_BASE_CONFIG;
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 3


  90:.\Generated_Source\PSoC4/PWM.c **** 
  91:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  92:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_RUN_MODE;
  93:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  94:.\Generated_Source\PSoC4/PWM.c ****         #else
  95:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_ALIGN | PWM_CTRL_PWM_KILL_EVENT;
  96:.\Generated_Source\PSoC4/PWM.c ****             
  97:.\Generated_Source\PSoC4/PWM.c ****             /* Initialize counter value */
  98:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000)
  99:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(1u);
 100:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM__RIGHT == PWM_PWM_ALIGN)
 101:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
 102:.\Generated_Source\PSoC4/PWM.c ****             #else 
 103:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(0u);
 104:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 105:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
 108:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_DEAD_TIME_CYCLE;
 109:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
 112:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |= PWM_CTRL_PWM_PRESCALER;
 113:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 114:.\Generated_Source\PSoC4/PWM.c **** 
 115:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL1 */
 116:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  = PWM_PWM_SIGNALS_MODES;
 117:.\Generated_Source\PSoC4/PWM.c ****     
 118:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to INTR */
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
 120:.\Generated_Source\PSoC4/PWM.c **** 
 121:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 122:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 123:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 124:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 125:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 126:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else
 128:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 129:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 130:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 134:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 137:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 138:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 139:.\Generated_Source\PSoC4/PWM.c **** 
 140:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 141:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 142:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         /* Set other values from customizer */
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 4


 147:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 148:.\Generated_Source\PSoC4/PWM.c **** 
 149:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 151:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 152:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 153:.\Generated_Source\PSoC4/PWM.c **** 
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 156:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 157:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 158:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 159:.\Generated_Source\PSoC4/PWM.c ****     
 160:.\Generated_Source\PSoC4/PWM.c **** }
 161:.\Generated_Source\PSoC4/PWM.c **** 
 162:.\Generated_Source\PSoC4/PWM.c **** 
 163:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 165:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 166:.\Generated_Source\PSoC4/PWM.c **** *
 167:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 168:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 169:.\Generated_Source\PSoC4/PWM.c **** *
 170:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 171:.\Generated_Source\PSoC4/PWM.c **** *  None
 172:.\Generated_Source\PSoC4/PWM.c **** *
 173:.\Generated_Source\PSoC4/PWM.c **** * Return:
 174:.\Generated_Source\PSoC4/PWM.c **** *  None
 175:.\Generated_Source\PSoC4/PWM.c **** *
 176:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 177:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 178:.\Generated_Source\PSoC4/PWM.c **** {
 179:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 182:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 183:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 186:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 187:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 188:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 189:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 190:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 191:.\Generated_Source\PSoC4/PWM.c **** 
 192:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 193:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 194:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 195:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 196:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 197:.\Generated_Source\PSoC4/PWM.c ****     
 198:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 199:.\Generated_Source\PSoC4/PWM.c ****         #if (0u != PWM_QUAD_AUTO_START)
 200:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_RELOAD);
 201:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u != PWM_QUAD_AUTO_START) */
 202:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 203:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 5


 204:.\Generated_Source\PSoC4/PWM.c **** 
 205:.\Generated_Source\PSoC4/PWM.c **** 
 206:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 207:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 208:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 209:.\Generated_Source\PSoC4/PWM.c **** *
 210:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 211:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 212:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 213:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 215:.\Generated_Source\PSoC4/PWM.c **** *
 216:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 217:.\Generated_Source\PSoC4/PWM.c **** *  None
 218:.\Generated_Source\PSoC4/PWM.c **** *
 219:.\Generated_Source\PSoC4/PWM.c **** * Return:
 220:.\Generated_Source\PSoC4/PWM.c **** *  None
 221:.\Generated_Source\PSoC4/PWM.c **** *
 222:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 223:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 224:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 226:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 228:.\Generated_Source\PSoC4/PWM.c **** *
 229:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 230:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 231:.\Generated_Source\PSoC4/PWM.c **** {
 232:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 233:.\Generated_Source\PSoC4/PWM.c ****     {
 234:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 235:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 236:.\Generated_Source\PSoC4/PWM.c ****     }
 237:.\Generated_Source\PSoC4/PWM.c **** 
 238:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 239:.\Generated_Source\PSoC4/PWM.c **** }
 240:.\Generated_Source\PSoC4/PWM.c **** 
 241:.\Generated_Source\PSoC4/PWM.c **** 
 242:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 243:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 244:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 247:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 248:.\Generated_Source\PSoC4/PWM.c **** *
 249:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 250:.\Generated_Source\PSoC4/PWM.c **** *  None
 251:.\Generated_Source\PSoC4/PWM.c **** *
 252:.\Generated_Source\PSoC4/PWM.c **** * Return:
 253:.\Generated_Source\PSoC4/PWM.c **** *  None
 254:.\Generated_Source\PSoC4/PWM.c **** *
 255:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 256:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 257:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 257 0
  27              		.cfi_startproc
  28 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 6


  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 3, -8
  31              		.cfi_offset 14, -4
 258:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 259:.\Generated_Source\PSoC4/PWM.c **** 
 260:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
  32              		.loc 1 260 0
  33 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  34              	.LVL0:
 261:.\Generated_Source\PSoC4/PWM.c **** 
 262:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
  35              		.loc 1 262 0
  36 0006 044A     		ldr	r2, .L2
  37 0008 1368     		ldr	r3, [r2]
  38 000a 0121     		mov	r1, #1
  39 000c 8B43     		bic	r3, r1
  40 000e 1360     		str	r3, [r2]
 263:.\Generated_Source\PSoC4/PWM.c **** 
 264:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  41              		.loc 1 264 0
  42 0010 FFF7FEFF 		bl	CyExitCriticalSection
  43              	.LVL1:
 265:.\Generated_Source\PSoC4/PWM.c **** }
  44              		.loc 1 265 0
  45              		@ sp needed
  46 0014 08BD     		pop	{r3, pc}
  47              	.L3:
  48 0016 C046     		.align	2
  49              	.L2:
  50 0018 00000540 		.word	1074069504
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	PWM_Stop, .-PWM_Stop
  54              		.section	.text.PWM_SetMode,"ax",%progbits
  55              		.align	2
  56              		.global	PWM_SetMode
  57              		.code	16
  58              		.thumb_func
  59              		.type	PWM_SetMode, %function
  60              	PWM_SetMode:
  61              	.LFB4:
 266:.\Generated_Source\PSoC4/PWM.c **** 
 267:.\Generated_Source\PSoC4/PWM.c **** 
 268:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 269:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 270:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 271:.\Generated_Source\PSoC4/PWM.c **** *
 272:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 273:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 274:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 275:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:.\Generated_Source\PSoC4/PWM.c **** *
 277:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 278:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 279:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 280:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 281:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 7


 282:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 283:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 284:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 285:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 286:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 287:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 288:.\Generated_Source\PSoC4/PWM.c **** *
 289:.\Generated_Source\PSoC4/PWM.c **** * Return:
 290:.\Generated_Source\PSoC4/PWM.c **** *  None
 291:.\Generated_Source\PSoC4/PWM.c **** *
 292:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 293:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 294:.\Generated_Source\PSoC4/PWM.c **** {
  62              		.loc 1 294 0
  63              		.cfi_startproc
  64              	.LVL2:
  65 0000 10B5     		push	{r4, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 4, -8
  68              		.cfi_offset 14, -4
  69 0002 041C     		mov	r4, r0
 295:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 296:.\Generated_Source\PSoC4/PWM.c **** 
 297:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
  70              		.loc 1 297 0
  71 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  72              	.LVL3:
 298:.\Generated_Source\PSoC4/PWM.c **** 
 299:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
  73              		.loc 1 299 0
  74 0008 054B     		ldr	r3, .L5
  75 000a 1968     		ldr	r1, [r3]
  76 000c 054A     		ldr	r2, .L5+4
  77 000e 0A40     		and	r2, r1
  78 0010 1A60     		str	r2, [r3]
 300:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
  79              		.loc 1 300 0
  80 0012 1A68     		ldr	r2, [r3]
  81 0014 1443     		orr	r4, r2
  82              	.LVL4:
  83 0016 1C60     		str	r4, [r3]
 301:.\Generated_Source\PSoC4/PWM.c **** 
 302:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
  84              		.loc 1 302 0
  85 0018 FFF7FEFF 		bl	CyExitCriticalSection
  86              	.LVL5:
 303:.\Generated_Source\PSoC4/PWM.c **** }
  87              		.loc 1 303 0
  88              		@ sp needed
  89 001c 10BD     		pop	{r4, pc}
  90              	.L6:
  91 001e C046     		.align	2
  92              	.L5:
  93 0020 00010540 		.word	1074069760
  94 0024 FFFFFFF8 		.word	-117440513
  95              		.cfi_endproc
  96              	.LFE4:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 8


  97              		.size	PWM_SetMode, .-PWM_SetMode
  98              		.section	.text.PWM_SetQDMode,"ax",%progbits
  99              		.align	2
 100              		.global	PWM_SetQDMode
 101              		.code	16
 102              		.thumb_func
 103              		.type	PWM_SetQDMode, %function
 104              	PWM_SetQDMode:
 105              	.LFB5:
 304:.\Generated_Source\PSoC4/PWM.c **** 
 305:.\Generated_Source\PSoC4/PWM.c **** 
 306:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 308:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/PWM.c **** *
 310:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 311:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:.\Generated_Source\PSoC4/PWM.c **** *
 314:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 315:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 316:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 317:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 318:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 320:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 321:.\Generated_Source\PSoC4/PWM.c **** *
 322:.\Generated_Source\PSoC4/PWM.c **** * Return:
 323:.\Generated_Source\PSoC4/PWM.c **** *  None
 324:.\Generated_Source\PSoC4/PWM.c **** *
 325:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 327:.\Generated_Source\PSoC4/PWM.c **** {
 106              		.loc 1 327 0
 107              		.cfi_startproc
 108              	.LVL6:
 109 0000 10B5     		push	{r4, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 4, -8
 112              		.cfi_offset 14, -4
 113 0002 041C     		mov	r4, r0
 328:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 329:.\Generated_Source\PSoC4/PWM.c **** 
 330:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 114              		.loc 1 330 0
 115 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 116              	.LVL7:
 331:.\Generated_Source\PSoC4/PWM.c **** 
 332:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 117              		.loc 1 332 0
 118 0008 054B     		ldr	r3, .L8
 119 000a 1968     		ldr	r1, [r3]
 120 000c 054A     		ldr	r2, .L8+4
 121 000e 0A40     		and	r2, r1
 122 0010 1A60     		str	r2, [r3]
 333:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 123              		.loc 1 333 0
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 9


 124 0012 1A68     		ldr	r2, [r3]
 125 0014 1443     		orr	r4, r2
 126              	.LVL8:
 127 0016 1C60     		str	r4, [r3]
 334:.\Generated_Source\PSoC4/PWM.c **** 
 335:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 128              		.loc 1 335 0
 129 0018 FFF7FEFF 		bl	CyExitCriticalSection
 130              	.LVL9:
 336:.\Generated_Source\PSoC4/PWM.c **** }
 131              		.loc 1 336 0
 132              		@ sp needed
 133 001c 10BD     		pop	{r4, pc}
 134              	.L9:
 135 001e C046     		.align	2
 136              	.L8:
 137 0020 00010540 		.word	1074069760
 138 0024 FFFF8FFF 		.word	-7340033
 139              		.cfi_endproc
 140              	.LFE5:
 141              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 142              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 143              		.align	2
 144              		.global	PWM_SetPrescaler
 145              		.code	16
 146              		.thumb_func
 147              		.type	PWM_SetPrescaler, %function
 148              	PWM_SetPrescaler:
 149              	.LFB6:
 337:.\Generated_Source\PSoC4/PWM.c **** 
 338:.\Generated_Source\PSoC4/PWM.c **** 
 339:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 340:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 341:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 342:.\Generated_Source\PSoC4/PWM.c **** *
 343:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 344:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:.\Generated_Source\PSoC4/PWM.c **** *
 347:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 348:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 349:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 350:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 352:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 353:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 354:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 355:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 356:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 357:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 358:.\Generated_Source\PSoC4/PWM.c **** *
 359:.\Generated_Source\PSoC4/PWM.c **** * Return:
 360:.\Generated_Source\PSoC4/PWM.c **** *  None
 361:.\Generated_Source\PSoC4/PWM.c **** *
 362:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 363:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 364:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 10


 150              		.loc 1 364 0
 151              		.cfi_startproc
 152              	.LVL10:
 153 0000 10B5     		push	{r4, lr}
 154              		.cfi_def_cfa_offset 8
 155              		.cfi_offset 4, -8
 156              		.cfi_offset 14, -4
 157 0002 041C     		mov	r4, r0
 365:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 366:.\Generated_Source\PSoC4/PWM.c **** 
 367:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 158              		.loc 1 367 0
 159 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 160              	.LVL11:
 368:.\Generated_Source\PSoC4/PWM.c **** 
 369:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 161              		.loc 1 369 0
 162 0008 054B     		ldr	r3, .L11
 163 000a 1968     		ldr	r1, [r3]
 164 000c 054A     		ldr	r2, .L11+4
 165 000e 0A40     		and	r2, r1
 166 0010 1A60     		str	r2, [r3]
 370:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 167              		.loc 1 370 0
 168 0012 1A68     		ldr	r2, [r3]
 169 0014 1443     		orr	r4, r2
 170              	.LVL12:
 171 0016 1C60     		str	r4, [r3]
 371:.\Generated_Source\PSoC4/PWM.c **** 
 372:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 172              		.loc 1 372 0
 173 0018 FFF7FEFF 		bl	CyExitCriticalSection
 174              	.LVL13:
 373:.\Generated_Source\PSoC4/PWM.c **** }
 175              		.loc 1 373 0
 176              		@ sp needed
 177 001c 10BD     		pop	{r4, pc}
 178              	.L12:
 179 001e C046     		.align	2
 180              	.L11:
 181 0020 00010540 		.word	1074069760
 182 0024 FF00FFFF 		.word	-65281
 183              		.cfi_endproc
 184              	.LFE6:
 185              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 186              		.section	.text.PWM_SetOneShot,"ax",%progbits
 187              		.align	2
 188              		.global	PWM_SetOneShot
 189              		.code	16
 190              		.thumb_func
 191              		.type	PWM_SetOneShot, %function
 192              	PWM_SetOneShot:
 193              	.LFB7:
 374:.\Generated_Source\PSoC4/PWM.c **** 
 375:.\Generated_Source\PSoC4/PWM.c **** 
 376:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 377:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 11


 378:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 379:.\Generated_Source\PSoC4/PWM.c **** *
 380:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 381:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 382:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 383:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 384:.\Generated_Source\PSoC4/PWM.c **** *
 385:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 386:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 387:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 388:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 389:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 390:.\Generated_Source\PSoC4/PWM.c **** *
 391:.\Generated_Source\PSoC4/PWM.c **** * Return:
 392:.\Generated_Source\PSoC4/PWM.c **** *  None
 393:.\Generated_Source\PSoC4/PWM.c **** *
 394:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 395:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 396:.\Generated_Source\PSoC4/PWM.c **** {
 194              		.loc 1 396 0
 195              		.cfi_startproc
 196              	.LVL14:
 197 0000 10B5     		push	{r4, lr}
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0002 041C     		mov	r4, r0
 397:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 398:.\Generated_Source\PSoC4/PWM.c **** 
 399:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 202              		.loc 1 399 0
 203 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 204              	.LVL15:
 400:.\Generated_Source\PSoC4/PWM.c **** 
 401:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 205              		.loc 1 401 0
 206 0008 064B     		ldr	r3, .L14
 207 000a 1968     		ldr	r1, [r3]
 208 000c 064A     		ldr	r2, .L14+4
 209 000e 0A40     		and	r2, r1
 210 0010 1A60     		str	r2, [r3]
 402:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 211              		.loc 1 402 0
 212 0012 1A68     		ldr	r2, [r3]
 213 0014 0121     		mov	r1, #1
 214 0016 0C40     		and	r4, r1
 215              	.LVL16:
 216 0018 A404     		lsl	r4, r4, #18
 217 001a 1443     		orr	r4, r2
 218 001c 1C60     		str	r4, [r3]
 403:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 404:.\Generated_Source\PSoC4/PWM.c **** 
 405:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 219              		.loc 1 405 0
 220 001e FFF7FEFF 		bl	CyExitCriticalSection
 221              	.LVL17:
 406:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 12


 222              		.loc 1 406 0
 223              		@ sp needed
 224 0022 10BD     		pop	{r4, pc}
 225              	.L15:
 226              		.align	2
 227              	.L14:
 228 0024 00010540 		.word	1074069760
 229 0028 FFFFFBFF 		.word	-262145
 230              		.cfi_endproc
 231              	.LFE7:
 232              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 233              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_SetPWMMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_SetPWMMode, %function
 239              	PWM_SetPWMMode:
 240              	.LFB8:
 407:.\Generated_Source\PSoC4/PWM.c **** 
 408:.\Generated_Source\PSoC4/PWM.c **** 
 409:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 411:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 412:.\Generated_Source\PSoC4/PWM.c **** *
 413:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 414:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 415:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 419:.\Generated_Source\PSoC4/PWM.c **** *
 420:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 421:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 424:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 429:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 438:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 440:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 442:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 444:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 13


 445:.\Generated_Source\PSoC4/PWM.c **** * Return:
 446:.\Generated_Source\PSoC4/PWM.c **** *  None
 447:.\Generated_Source\PSoC4/PWM.c **** *
 448:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 449:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 450:.\Generated_Source\PSoC4/PWM.c **** {
 241              		.loc 1 450 0
 242              		.cfi_startproc
 243              	.LVL18:
 451:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 244              		.loc 1 451 0
 245 0000 3F23     		mov	r3, #63
 246 0002 1840     		and	r0, r3
 247              	.LVL19:
 248 0004 014B     		ldr	r3, .L17
 249 0006 1860     		str	r0, [r3]
 452:.\Generated_Source\PSoC4/PWM.c **** }
 250              		.loc 1 452 0
 251              		@ sp needed
 252 0008 7047     		bx	lr
 253              	.L18:
 254 000a C046     		.align	2
 255              	.L17:
 256 000c 28010540 		.word	1074069800
 257              		.cfi_endproc
 258              	.LFE8:
 259              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 260              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 261              		.align	2
 262              		.global	PWM_SetPWMSyncKill
 263              		.code	16
 264              		.thumb_func
 265              		.type	PWM_SetPWMSyncKill, %function
 266              	PWM_SetPWMSyncKill:
 267              	.LFB9:
 453:.\Generated_Source\PSoC4/PWM.c **** 
 454:.\Generated_Source\PSoC4/PWM.c **** 
 455:.\Generated_Source\PSoC4/PWM.c **** 
 456:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 457:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 458:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 459:.\Generated_Source\PSoC4/PWM.c **** *
 460:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 461:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 465:.\Generated_Source\PSoC4/PWM.c **** *
 466:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 468:.\Generated_Source\PSoC4/PWM.c **** *
 469:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 471:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 473:.\Generated_Source\PSoC4/PWM.c **** 
 474:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 14


 475:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 476:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 477:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 478:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 479:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 480:.\Generated_Source\PSoC4/PWM.c **** *
 481:.\Generated_Source\PSoC4/PWM.c **** * Return:
 482:.\Generated_Source\PSoC4/PWM.c **** *  None
 483:.\Generated_Source\PSoC4/PWM.c **** *
 484:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 485:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 486:.\Generated_Source\PSoC4/PWM.c **** {
 268              		.loc 1 486 0
 269              		.cfi_startproc
 270              	.LVL20:
 271 0000 10B5     		push	{r4, lr}
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 4, -8
 274              		.cfi_offset 14, -4
 275 0002 041C     		mov	r4, r0
 487:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 488:.\Generated_Source\PSoC4/PWM.c **** 
 489:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 276              		.loc 1 489 0
 277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 278              	.LVL21:
 490:.\Generated_Source\PSoC4/PWM.c **** 
 491:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 279              		.loc 1 491 0
 280 0008 064B     		ldr	r3, .L20
 281 000a 1A68     		ldr	r2, [r3]
 282 000c 0421     		mov	r1, #4
 283 000e 8A43     		bic	r2, r1
 284 0010 1A60     		str	r2, [r3]
 492:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 285              		.loc 1 492 0
 286 0012 1A68     		ldr	r2, [r3]
 287 0014 0339     		sub	r1, r1, #3
 288 0016 0C40     		and	r4, r1
 289              	.LVL22:
 290 0018 A400     		lsl	r4, r4, #2
 291 001a 1443     		orr	r4, r2
 292 001c 1C60     		str	r4, [r3]
 493:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 494:.\Generated_Source\PSoC4/PWM.c **** 
 495:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 293              		.loc 1 495 0
 294 001e FFF7FEFF 		bl	CyExitCriticalSection
 295              	.LVL23:
 496:.\Generated_Source\PSoC4/PWM.c **** }
 296              		.loc 1 496 0
 297              		@ sp needed
 298 0022 10BD     		pop	{r4, pc}
 299              	.L21:
 300              		.align	2
 301              	.L20:
 302 0024 00010540 		.word	1074069760
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 15


 303              		.cfi_endproc
 304              	.LFE9:
 305              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 306              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 307              		.align	2
 308              		.global	PWM_SetPWMStopOnKill
 309              		.code	16
 310              		.thumb_func
 311              		.type	PWM_SetPWMStopOnKill, %function
 312              	PWM_SetPWMStopOnKill:
 313              	.LFB10:
 497:.\Generated_Source\PSoC4/PWM.c **** 
 498:.\Generated_Source\PSoC4/PWM.c **** 
 499:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 500:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 501:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 502:.\Generated_Source\PSoC4/PWM.c **** *
 503:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 504:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:.\Generated_Source\PSoC4/PWM.c **** *
 508:.\Generated_Source\PSoC4/PWM.c **** *
 509:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 510:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 511:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 512:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 513:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 514:.\Generated_Source\PSoC4/PWM.c **** *
 515:.\Generated_Source\PSoC4/PWM.c **** * Return:
 516:.\Generated_Source\PSoC4/PWM.c **** *  None
 517:.\Generated_Source\PSoC4/PWM.c **** *
 518:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 519:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:.\Generated_Source\PSoC4/PWM.c **** {
 314              		.loc 1 520 0
 315              		.cfi_startproc
 316              	.LVL24:
 317 0000 10B5     		push	{r4, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 4, -8
 320              		.cfi_offset 14, -4
 321 0002 041C     		mov	r4, r0
 521:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 522:.\Generated_Source\PSoC4/PWM.c **** 
 523:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 523 0
 323 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 324              	.LVL25:
 524:.\Generated_Source\PSoC4/PWM.c **** 
 525:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 325              		.loc 1 525 0
 326 0008 064B     		ldr	r3, .L23
 327 000a 1A68     		ldr	r2, [r3]
 328 000c 0821     		mov	r1, #8
 329 000e 8A43     		bic	r2, r1
 330 0010 1A60     		str	r2, [r3]
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 16


 526:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 331              		.loc 1 526 0
 332 0012 1A68     		ldr	r2, [r3]
 333 0014 0739     		sub	r1, r1, #7
 334 0016 0C40     		and	r4, r1
 335              	.LVL26:
 336 0018 E400     		lsl	r4, r4, #3
 337 001a 1443     		orr	r4, r2
 338 001c 1C60     		str	r4, [r3]
 527:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 528:.\Generated_Source\PSoC4/PWM.c **** 
 529:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 339              		.loc 1 529 0
 340 001e FFF7FEFF 		bl	CyExitCriticalSection
 341              	.LVL27:
 530:.\Generated_Source\PSoC4/PWM.c **** }
 342              		.loc 1 530 0
 343              		@ sp needed
 344 0022 10BD     		pop	{r4, pc}
 345              	.L24:
 346              		.align	2
 347              	.L23:
 348 0024 00010540 		.word	1074069760
 349              		.cfi_endproc
 350              	.LFE10:
 351              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 352              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 353              		.align	2
 354              		.global	PWM_SetPWMDeadTime
 355              		.code	16
 356              		.thumb_func
 357              		.type	PWM_SetPWMDeadTime, %function
 358              	PWM_SetPWMDeadTime:
 359              	.LFB11:
 531:.\Generated_Source\PSoC4/PWM.c **** 
 532:.\Generated_Source\PSoC4/PWM.c **** 
 533:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 535:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 536:.\Generated_Source\PSoC4/PWM.c **** *
 537:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 538:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 542:.\Generated_Source\PSoC4/PWM.c **** 
 543:.\Generated_Source\PSoC4/PWM.c **** *
 544:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 545:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 546:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 547:.\Generated_Source\PSoC4/PWM.c **** *
 548:.\Generated_Source\PSoC4/PWM.c **** * Return:
 549:.\Generated_Source\PSoC4/PWM.c **** *  None
 550:.\Generated_Source\PSoC4/PWM.c **** *
 551:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 552:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 553:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 17


 360              		.loc 1 553 0
 361              		.cfi_startproc
 362              	.LVL28:
 363 0000 10B5     		push	{r4, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 4, -8
 366              		.cfi_offset 14, -4
 367 0002 041C     		mov	r4, r0
 554:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 555:.\Generated_Source\PSoC4/PWM.c **** 
 556:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 368              		.loc 1 556 0
 369 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 370              	.LVL29:
 557:.\Generated_Source\PSoC4/PWM.c **** 
 558:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 371              		.loc 1 558 0
 372 0008 064B     		ldr	r3, .L26
 373 000a 1968     		ldr	r1, [r3]
 374 000c 064A     		ldr	r2, .L26+4
 375 000e 0A40     		and	r2, r1
 376 0010 1A60     		str	r2, [r3]
 559:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 377              		.loc 1 559 0
 378 0012 1A68     		ldr	r2, [r3]
 379 0014 2406     		lsl	r4, r4, #24
 380              	.LVL30:
 381 0016 240C     		lsr	r4, r4, #16
 382 0018 1443     		orr	r4, r2
 383 001a 1C60     		str	r4, [r3]
 560:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 561:.\Generated_Source\PSoC4/PWM.c **** 
 562:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 384              		.loc 1 562 0
 385 001c FFF7FEFF 		bl	CyExitCriticalSection
 386              	.LVL31:
 563:.\Generated_Source\PSoC4/PWM.c **** }
 387              		.loc 1 563 0
 388              		@ sp needed
 389 0020 10BD     		pop	{r4, pc}
 390              	.L27:
 391 0022 C046     		.align	2
 392              	.L26:
 393 0024 00010540 		.word	1074069760
 394 0028 FF00FFFF 		.word	-65281
 395              		.cfi_endproc
 396              	.LFE11:
 397              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 398              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 399              		.align	2
 400              		.global	PWM_SetPWMInvert
 401              		.code	16
 402              		.thumb_func
 403              		.type	PWM_SetPWMInvert, %function
 404              	PWM_SetPWMInvert:
 405              	.LFB12:
 564:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 18


 565:.\Generated_Source\PSoC4/PWM.c **** 
 566:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 568:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM.c **** *
 570:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 571:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 573:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 574:.\Generated_Source\PSoC4/PWM.c **** *
 575:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 576:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 577:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 578:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 579:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 580:.\Generated_Source\PSoC4/PWM.c **** *
 581:.\Generated_Source\PSoC4/PWM.c **** * Return:
 582:.\Generated_Source\PSoC4/PWM.c **** *  None
 583:.\Generated_Source\PSoC4/PWM.c **** *
 584:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 585:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 586:.\Generated_Source\PSoC4/PWM.c **** {
 406              		.loc 1 586 0
 407              		.cfi_startproc
 408              	.LVL32:
 409 0000 10B5     		push	{r4, lr}
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 4, -8
 412              		.cfi_offset 14, -4
 413 0002 041C     		mov	r4, r0
 587:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 588:.\Generated_Source\PSoC4/PWM.c **** 
 589:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 414              		.loc 1 589 0
 415 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 416              	.LVL33:
 590:.\Generated_Source\PSoC4/PWM.c **** 
 591:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 417              		.loc 1 591 0
 418 0008 054B     		ldr	r3, .L29
 419 000a 1968     		ldr	r1, [r3]
 420 000c 054A     		ldr	r2, .L29+4
 421 000e 0A40     		and	r2, r1
 422 0010 1A60     		str	r2, [r3]
 592:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 423              		.loc 1 592 0
 424 0012 1A68     		ldr	r2, [r3]
 425 0014 1443     		orr	r4, r2
 426              	.LVL34:
 427 0016 1C60     		str	r4, [r3]
 593:.\Generated_Source\PSoC4/PWM.c **** 
 594:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 428              		.loc 1 594 0
 429 0018 FFF7FEFF 		bl	CyExitCriticalSection
 430              	.LVL35:
 595:.\Generated_Source\PSoC4/PWM.c **** }
 431              		.loc 1 595 0
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 19


 432              		@ sp needed
 433 001c 10BD     		pop	{r4, pc}
 434              	.L30:
 435 001e C046     		.align	2
 436              	.L29:
 437 0020 00010540 		.word	1074069760
 438 0024 FFFFCFFF 		.word	-3145729
 439              		.cfi_endproc
 440              	.LFE12:
 441              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 442              		.section	.text.PWM_WriteCounter,"ax",%progbits
 443              		.align	2
 444              		.global	PWM_WriteCounter
 445              		.code	16
 446              		.thumb_func
 447              		.type	PWM_WriteCounter, %function
 448              	PWM_WriteCounter:
 449              	.LFB13:
 596:.\Generated_Source\PSoC4/PWM.c **** 
 597:.\Generated_Source\PSoC4/PWM.c **** 
 598:.\Generated_Source\PSoC4/PWM.c **** 
 599:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 600:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 601:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 602:.\Generated_Source\PSoC4/PWM.c **** *
 603:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 604:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 606:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 607:.\Generated_Source\PSoC4/PWM.c **** *
 608:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 609:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 610:.\Generated_Source\PSoC4/PWM.c **** *
 611:.\Generated_Source\PSoC4/PWM.c **** * Return:
 612:.\Generated_Source\PSoC4/PWM.c **** *  None
 613:.\Generated_Source\PSoC4/PWM.c **** *
 614:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 616:.\Generated_Source\PSoC4/PWM.c **** {
 450              		.loc 1 616 0
 451              		.cfi_startproc
 452              	.LVL36:
 617:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 453              		.loc 1 617 0
 454 0000 0004     		lsl	r0, r0, #16
 455              	.LVL37:
 456 0002 000C     		lsr	r0, r0, #16
 457 0004 014B     		ldr	r3, .L32
 458 0006 1860     		str	r0, [r3]
 618:.\Generated_Source\PSoC4/PWM.c **** }
 459              		.loc 1 618 0
 460              		@ sp needed
 461 0008 7047     		bx	lr
 462              	.L33:
 463 000a C046     		.align	2
 464              	.L32:
 465 000c 08010540 		.word	1074069768
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 20


 466              		.cfi_endproc
 467              	.LFE13:
 468              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 469              		.section	.text.PWM_ReadCounter,"ax",%progbits
 470              		.align	2
 471              		.global	PWM_ReadCounter
 472              		.code	16
 473              		.thumb_func
 474              		.type	PWM_ReadCounter, %function
 475              	PWM_ReadCounter:
 476              	.LFB14:
 619:.\Generated_Source\PSoC4/PWM.c **** 
 620:.\Generated_Source\PSoC4/PWM.c **** 
 621:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 622:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 623:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 626:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 627:.\Generated_Source\PSoC4/PWM.c **** *
 628:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 629:.\Generated_Source\PSoC4/PWM.c **** *  None
 630:.\Generated_Source\PSoC4/PWM.c **** *
 631:.\Generated_Source\PSoC4/PWM.c **** * Return:
 632:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 633:.\Generated_Source\PSoC4/PWM.c **** *
 634:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 636:.\Generated_Source\PSoC4/PWM.c **** {
 477              		.loc 1 636 0
 478              		.cfi_startproc
 637:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 479              		.loc 1 637 0
 480 0000 024B     		ldr	r3, .L35
 481 0002 1868     		ldr	r0, [r3]
 482 0004 0004     		lsl	r0, r0, #16
 483 0006 000C     		lsr	r0, r0, #16
 638:.\Generated_Source\PSoC4/PWM.c **** }
 484              		.loc 1 638 0
 485              		@ sp needed
 486 0008 7047     		bx	lr
 487              	.L36:
 488 000a C046     		.align	2
 489              	.L35:
 490 000c 08010540 		.word	1074069768
 491              		.cfi_endproc
 492              	.LFE14:
 493              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 494              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 495              		.align	2
 496              		.global	PWM_SetCounterMode
 497              		.code	16
 498              		.thumb_func
 499              		.type	PWM_SetCounterMode, %function
 500              	PWM_SetCounterMode:
 501              	.LFB15:
 639:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 21


 640:.\Generated_Source\PSoC4/PWM.c **** 
 641:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 643:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 644:.\Generated_Source\PSoC4/PWM.c **** *
 645:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 646:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 648:.\Generated_Source\PSoC4/PWM.c **** *
 649:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 650:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 651:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 652:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 653:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 654:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 656:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 658:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 659:.\Generated_Source\PSoC4/PWM.c **** *
 660:.\Generated_Source\PSoC4/PWM.c **** * Return:
 661:.\Generated_Source\PSoC4/PWM.c **** *  None
 662:.\Generated_Source\PSoC4/PWM.c **** *
 663:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 664:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 665:.\Generated_Source\PSoC4/PWM.c **** {
 502              		.loc 1 665 0
 503              		.cfi_startproc
 504              	.LVL38:
 505 0000 10B5     		push	{r4, lr}
 506              		.cfi_def_cfa_offset 8
 507              		.cfi_offset 4, -8
 508              		.cfi_offset 14, -4
 509 0002 041C     		mov	r4, r0
 666:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 667:.\Generated_Source\PSoC4/PWM.c **** 
 668:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 510              		.loc 1 668 0
 511 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 512              	.LVL39:
 669:.\Generated_Source\PSoC4/PWM.c **** 
 670:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 513              		.loc 1 670 0
 514 0008 054B     		ldr	r3, .L38
 515 000a 1968     		ldr	r1, [r3]
 516 000c 054A     		ldr	r2, .L38+4
 517 000e 0A40     		and	r2, r1
 518 0010 1A60     		str	r2, [r3]
 671:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 519              		.loc 1 671 0
 520 0012 1A68     		ldr	r2, [r3]
 521 0014 1443     		orr	r4, r2
 522              	.LVL40:
 523 0016 1C60     		str	r4, [r3]
 672:.\Generated_Source\PSoC4/PWM.c **** 
 673:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 524              		.loc 1 673 0
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 22


 525 0018 FFF7FEFF 		bl	CyExitCriticalSection
 526              	.LVL41:
 674:.\Generated_Source\PSoC4/PWM.c **** }
 527              		.loc 1 674 0
 528              		@ sp needed
 529 001c 10BD     		pop	{r4, pc}
 530              	.L39:
 531 001e C046     		.align	2
 532              	.L38:
 533 0020 00010540 		.word	1074069760
 534 0024 FFFFFCFF 		.word	-196609
 535              		.cfi_endproc
 536              	.LFE15:
 537              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 538              		.section	.text.PWM_WritePeriod,"ax",%progbits
 539              		.align	2
 540              		.global	PWM_WritePeriod
 541              		.code	16
 542              		.thumb_func
 543              		.type	PWM_WritePeriod, %function
 544              	PWM_WritePeriod:
 545              	.LFB16:
 675:.\Generated_Source\PSoC4/PWM.c **** 
 676:.\Generated_Source\PSoC4/PWM.c **** 
 677:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 678:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 679:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 680:.\Generated_Source\PSoC4/PWM.c **** *
 681:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 682:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 683:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 684:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 685:.\Generated_Source\PSoC4/PWM.c **** *
 686:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 687:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 688:.\Generated_Source\PSoC4/PWM.c **** *
 689:.\Generated_Source\PSoC4/PWM.c **** * Return:
 690:.\Generated_Source\PSoC4/PWM.c **** *  None
 691:.\Generated_Source\PSoC4/PWM.c **** *
 692:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 693:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 694:.\Generated_Source\PSoC4/PWM.c **** {
 546              		.loc 1 694 0
 547              		.cfi_startproc
 548              	.LVL42:
 695:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 549              		.loc 1 695 0
 550 0000 0004     		lsl	r0, r0, #16
 551              	.LVL43:
 552 0002 000C     		lsr	r0, r0, #16
 553 0004 014B     		ldr	r3, .L41
 554 0006 1860     		str	r0, [r3]
 696:.\Generated_Source\PSoC4/PWM.c **** }
 555              		.loc 1 696 0
 556              		@ sp needed
 557 0008 7047     		bx	lr
 558              	.L42:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 23


 559 000a C046     		.align	2
 560              	.L41:
 561 000c 14010540 		.word	1074069780
 562              		.cfi_endproc
 563              	.LFE16:
 564              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 565              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 566              		.align	2
 567              		.global	PWM_ReadPeriod
 568              		.code	16
 569              		.thumb_func
 570              		.type	PWM_ReadPeriod, %function
 571              	PWM_ReadPeriod:
 572              	.LFB17:
 697:.\Generated_Source\PSoC4/PWM.c **** 
 698:.\Generated_Source\PSoC4/PWM.c **** 
 699:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 700:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 701:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 704:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 707:.\Generated_Source\PSoC4/PWM.c **** *  None
 708:.\Generated_Source\PSoC4/PWM.c **** *
 709:.\Generated_Source\PSoC4/PWM.c **** * Return:
 710:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 711:.\Generated_Source\PSoC4/PWM.c **** *
 712:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 713:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 714:.\Generated_Source\PSoC4/PWM.c **** {
 573              		.loc 1 714 0
 574              		.cfi_startproc
 715:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 575              		.loc 1 715 0
 576 0000 024B     		ldr	r3, .L44
 577 0002 1868     		ldr	r0, [r3]
 578 0004 0004     		lsl	r0, r0, #16
 579 0006 000C     		lsr	r0, r0, #16
 716:.\Generated_Source\PSoC4/PWM.c **** }
 580              		.loc 1 716 0
 581              		@ sp needed
 582 0008 7047     		bx	lr
 583              	.L45:
 584 000a C046     		.align	2
 585              	.L44:
 586 000c 14010540 		.word	1074069780
 587              		.cfi_endproc
 588              	.LFE17:
 589              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 590              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 591              		.align	2
 592              		.global	PWM_SetCompareSwap
 593              		.code	16
 594              		.thumb_func
 595              		.type	PWM_SetCompareSwap, %function
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 24


 596              	PWM_SetCompareSwap:
 597              	.LFB18:
 717:.\Generated_Source\PSoC4/PWM.c **** 
 718:.\Generated_Source\PSoC4/PWM.c **** 
 719:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 720:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 721:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 724:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 725:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 730:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 731:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 732:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 733:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 734:.\Generated_Source\PSoC4/PWM.c **** *
 735:.\Generated_Source\PSoC4/PWM.c **** * Return:
 736:.\Generated_Source\PSoC4/PWM.c **** *  None
 737:.\Generated_Source\PSoC4/PWM.c **** *
 738:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 739:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 740:.\Generated_Source\PSoC4/PWM.c **** {
 598              		.loc 1 740 0
 599              		.cfi_startproc
 600              	.LVL44:
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 605 0002 041C     		mov	r4, r0
 741:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 742:.\Generated_Source\PSoC4/PWM.c **** 
 743:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 606              		.loc 1 743 0
 607 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 608              	.LVL45:
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 609              		.loc 1 745 0
 610 0008 054B     		ldr	r3, .L47
 611 000a 1A68     		ldr	r2, [r3]
 612 000c 0121     		mov	r1, #1
 613 000e 8A43     		bic	r2, r1
 614 0010 1A60     		str	r2, [r3]
 746:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 615              		.loc 1 746 0
 616 0012 1A68     		ldr	r2, [r3]
 617 0014 0C40     		and	r4, r1
 618              	.LVL46:
 619 0016 1443     		orr	r4, r2
 620 0018 1C60     		str	r4, [r3]
 747:.\Generated_Source\PSoC4/PWM.c **** 
 748:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 25


 621              		.loc 1 748 0
 622 001a FFF7FEFF 		bl	CyExitCriticalSection
 623              	.LVL47:
 749:.\Generated_Source\PSoC4/PWM.c **** }
 624              		.loc 1 749 0
 625              		@ sp needed
 626 001e 10BD     		pop	{r4, pc}
 627              	.L48:
 628              		.align	2
 629              	.L47:
 630 0020 00010540 		.word	1074069760
 631              		.cfi_endproc
 632              	.LFE18:
 633              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 634              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_WritePeriodBuf
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_WritePeriodBuf, %function
 640              	PWM_WritePeriodBuf:
 641              	.LFB19:
 750:.\Generated_Source\PSoC4/PWM.c **** 
 751:.\Generated_Source\PSoC4/PWM.c **** 
 752:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 753:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 754:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 755:.\Generated_Source\PSoC4/PWM.c **** *
 756:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 757:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 758:.\Generated_Source\PSoC4/PWM.c **** *
 759:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 760:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 761:.\Generated_Source\PSoC4/PWM.c **** *
 762:.\Generated_Source\PSoC4/PWM.c **** * Return:
 763:.\Generated_Source\PSoC4/PWM.c **** *  None
 764:.\Generated_Source\PSoC4/PWM.c **** *
 765:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 766:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 767:.\Generated_Source\PSoC4/PWM.c **** {
 642              		.loc 1 767 0
 643              		.cfi_startproc
 644              	.LVL48:
 768:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 645              		.loc 1 768 0
 646 0000 0004     		lsl	r0, r0, #16
 647              	.LVL49:
 648 0002 000C     		lsr	r0, r0, #16
 649 0004 014B     		ldr	r3, .L50
 650 0006 1860     		str	r0, [r3]
 769:.\Generated_Source\PSoC4/PWM.c **** }
 651              		.loc 1 769 0
 652              		@ sp needed
 653 0008 7047     		bx	lr
 654              	.L51:
 655 000a C046     		.align	2
 656              	.L50:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 26


 657 000c 18010540 		.word	1074069784
 658              		.cfi_endproc
 659              	.LFE19:
 660              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 661              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 662              		.align	2
 663              		.global	PWM_ReadPeriodBuf
 664              		.code	16
 665              		.thumb_func
 666              		.type	PWM_ReadPeriodBuf, %function
 667              	PWM_ReadPeriodBuf:
 668              	.LFB20:
 770:.\Generated_Source\PSoC4/PWM.c **** 
 771:.\Generated_Source\PSoC4/PWM.c **** 
 772:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 773:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 774:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 777:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 780:.\Generated_Source\PSoC4/PWM.c **** *  None
 781:.\Generated_Source\PSoC4/PWM.c **** *
 782:.\Generated_Source\PSoC4/PWM.c **** * Return:
 783:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 784:.\Generated_Source\PSoC4/PWM.c **** *
 785:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 786:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 787:.\Generated_Source\PSoC4/PWM.c **** {
 669              		.loc 1 787 0
 670              		.cfi_startproc
 788:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 671              		.loc 1 788 0
 672 0000 024B     		ldr	r3, .L53
 673 0002 1868     		ldr	r0, [r3]
 674 0004 0004     		lsl	r0, r0, #16
 675 0006 000C     		lsr	r0, r0, #16
 789:.\Generated_Source\PSoC4/PWM.c **** }
 676              		.loc 1 789 0
 677              		@ sp needed
 678 0008 7047     		bx	lr
 679              	.L54:
 680 000a C046     		.align	2
 681              	.L53:
 682 000c 18010540 		.word	1074069784
 683              		.cfi_endproc
 684              	.LFE20:
 685              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 686              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 687              		.align	2
 688              		.global	PWM_SetPeriodSwap
 689              		.code	16
 690              		.thumb_func
 691              		.type	PWM_SetPeriodSwap, %function
 692              	PWM_SetPeriodSwap:
 693              	.LFB21:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 27


 790:.\Generated_Source\PSoC4/PWM.c **** 
 791:.\Generated_Source\PSoC4/PWM.c **** 
 792:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 793:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 794:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 797:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 798:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 803:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 804:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 805:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 806:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 807:.\Generated_Source\PSoC4/PWM.c **** *
 808:.\Generated_Source\PSoC4/PWM.c **** * Return:
 809:.\Generated_Source\PSoC4/PWM.c **** *  None
 810:.\Generated_Source\PSoC4/PWM.c **** *
 811:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 813:.\Generated_Source\PSoC4/PWM.c **** {
 694              		.loc 1 813 0
 695              		.cfi_startproc
 696              	.LVL50:
 697 0000 10B5     		push	{r4, lr}
 698              		.cfi_def_cfa_offset 8
 699              		.cfi_offset 4, -8
 700              		.cfi_offset 14, -4
 701 0002 041C     		mov	r4, r0
 814:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 815:.\Generated_Source\PSoC4/PWM.c **** 
 816:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 702              		.loc 1 816 0
 703 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 704              	.LVL51:
 817:.\Generated_Source\PSoC4/PWM.c **** 
 818:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 705              		.loc 1 818 0
 706 0008 064B     		ldr	r3, .L56
 707 000a 1A68     		ldr	r2, [r3]
 708 000c 0221     		mov	r1, #2
 709 000e 8A43     		bic	r2, r1
 710 0010 1A60     		str	r2, [r3]
 819:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 711              		.loc 1 819 0
 712 0012 1A68     		ldr	r2, [r3]
 713 0014 0139     		sub	r1, r1, #1
 714 0016 0C40     		and	r4, r1
 715              	.LVL52:
 716 0018 6400     		lsl	r4, r4, #1
 717 001a 1443     		orr	r4, r2
 718 001c 1C60     		str	r4, [r3]
 820:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 821:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 28


 822:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 719              		.loc 1 822 0
 720 001e FFF7FEFF 		bl	CyExitCriticalSection
 721              	.LVL53:
 823:.\Generated_Source\PSoC4/PWM.c **** }
 722              		.loc 1 823 0
 723              		@ sp needed
 724 0022 10BD     		pop	{r4, pc}
 725              	.L57:
 726              		.align	2
 727              	.L56:
 728 0024 00010540 		.word	1074069760
 729              		.cfi_endproc
 730              	.LFE21:
 731              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 732              		.section	.text.PWM_WriteCompare,"ax",%progbits
 733              		.align	2
 734              		.global	PWM_WriteCompare
 735              		.code	16
 736              		.thumb_func
 737              		.type	PWM_WriteCompare, %function
 738              	PWM_WriteCompare:
 739              	.LFB22:
 824:.\Generated_Source\PSoC4/PWM.c **** 
 825:.\Generated_Source\PSoC4/PWM.c **** 
 826:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 827:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 828:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 829:.\Generated_Source\PSoC4/PWM.c **** *
 830:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 831:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:.\Generated_Source\PSoC4/PWM.c **** *
 834:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 835:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 836:.\Generated_Source\PSoC4/PWM.c **** *
 837:.\Generated_Source\PSoC4/PWM.c **** * Return:
 838:.\Generated_Source\PSoC4/PWM.c **** *  None
 839:.\Generated_Source\PSoC4/PWM.c **** *
 840:.\Generated_Source\PSoC4/PWM.c **** * Note:
 841:.\Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:.\Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 844:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:.\Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:.\Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:.\Generated_Source\PSoC4/PWM.c **** *
 848:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 849:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 850:.\Generated_Source\PSoC4/PWM.c **** {
 740              		.loc 1 850 0
 741              		.cfi_startproc
 742              	.LVL54:
 851:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 852:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 853:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 854:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 29


 855:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 856:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 857:.\Generated_Source\PSoC4/PWM.c **** 
 858:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:.\Generated_Source\PSoC4/PWM.c ****         {
 860:.\Generated_Source\PSoC4/PWM.c ****             compare++;
 861:.\Generated_Source\PSoC4/PWM.c ****         }
 862:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compare))
 863:.\Generated_Source\PSoC4/PWM.c ****         {
 864:.\Generated_Source\PSoC4/PWM.c ****             compare--;
 865:.\Generated_Source\PSoC4/PWM.c ****         }
 866:.\Generated_Source\PSoC4/PWM.c ****         else
 867:.\Generated_Source\PSoC4/PWM.c ****         {
 868:.\Generated_Source\PSoC4/PWM.c ****         }
 869:.\Generated_Source\PSoC4/PWM.c ****         
 870:.\Generated_Source\PSoC4/PWM.c ****     
 871:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 872:.\Generated_Source\PSoC4/PWM.c ****     
 873:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 743              		.loc 1 873 0
 744 0000 0004     		lsl	r0, r0, #16
 745              	.LVL55:
 746 0002 000C     		lsr	r0, r0, #16
 747 0004 014B     		ldr	r3, .L59
 748 0006 1860     		str	r0, [r3]
 874:.\Generated_Source\PSoC4/PWM.c **** }
 749              		.loc 1 874 0
 750              		@ sp needed
 751 0008 7047     		bx	lr
 752              	.L60:
 753 000a C046     		.align	2
 754              	.L59:
 755 000c 0C010540 		.word	1074069772
 756              		.cfi_endproc
 757              	.LFE22:
 758              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 759              		.section	.text.PWM_ReadCompare,"ax",%progbits
 760              		.align	2
 761              		.global	PWM_ReadCompare
 762              		.code	16
 763              		.thumb_func
 764              		.type	PWM_ReadCompare, %function
 765              	PWM_ReadCompare:
 766              	.LFB23:
 875:.\Generated_Source\PSoC4/PWM.c **** 
 876:.\Generated_Source\PSoC4/PWM.c **** 
 877:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 878:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 879:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 880:.\Generated_Source\PSoC4/PWM.c **** *
 881:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 882:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 884:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:.\Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:.\Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 887:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 30


 888:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 889:.\Generated_Source\PSoC4/PWM.c **** *  None
 890:.\Generated_Source\PSoC4/PWM.c **** *
 891:.\Generated_Source\PSoC4/PWM.c **** * Return:
 892:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 893:.\Generated_Source\PSoC4/PWM.c **** *
 894:.\Generated_Source\PSoC4/PWM.c **** * Note:
 895:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:.\Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:.\Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 898:.\Generated_Source\PSoC4/PWM.c **** *
 899:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM.c **** {
 767              		.loc 1 901 0
 768              		.cfi_startproc
 902:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 903:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 906:.\Generated_Source\PSoC4/PWM.c **** 
 907:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 908:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/PWM.c ****         
 910:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_REG;
 911:.\Generated_Source\PSoC4/PWM.c ****         
 912:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
 913:.\Generated_Source\PSoC4/PWM.c ****         {
 914:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
 915:.\Generated_Source\PSoC4/PWM.c ****         }
 916:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:.\Generated_Source\PSoC4/PWM.c ****         {
 918:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
 919:.\Generated_Source\PSoC4/PWM.c ****         }
 920:.\Generated_Source\PSoC4/PWM.c ****         else
 921:.\Generated_Source\PSoC4/PWM.c ****         {
 922:.\Generated_Source\PSoC4/PWM.c ****         }
 923:.\Generated_Source\PSoC4/PWM.c **** 
 924:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
 925:.\Generated_Source\PSoC4/PWM.c ****     #else
 926:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 769              		.loc 1 926 0
 770 0000 024B     		ldr	r3, .L62
 771 0002 1868     		ldr	r0, [r3]
 772 0004 0004     		lsl	r0, r0, #16
 773 0006 000C     		lsr	r0, r0, #16
 927:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 928:.\Generated_Source\PSoC4/PWM.c **** }
 774              		.loc 1 928 0
 775              		@ sp needed
 776 0008 7047     		bx	lr
 777              	.L63:
 778 000a C046     		.align	2
 779              	.L62:
 780 000c 0C010540 		.word	1074069772
 781              		.cfi_endproc
 782              	.LFE23:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 31


 783              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 784              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 785              		.align	2
 786              		.global	PWM_WriteCompareBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	PWM_WriteCompareBuf, %function
 790              	PWM_WriteCompareBuf:
 791              	.LFB24:
 929:.\Generated_Source\PSoC4/PWM.c **** 
 930:.\Generated_Source\PSoC4/PWM.c **** 
 931:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 932:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 933:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 934:.\Generated_Source\PSoC4/PWM.c **** *
 935:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 936:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:.\Generated_Source\PSoC4/PWM.c **** *
 939:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 940:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 941:.\Generated_Source\PSoC4/PWM.c **** *
 942:.\Generated_Source\PSoC4/PWM.c **** * Return:
 943:.\Generated_Source\PSoC4/PWM.c **** *  None
 944:.\Generated_Source\PSoC4/PWM.c **** *
 945:.\Generated_Source\PSoC4/PWM.c **** * Note:
 946:.\Generated_Source\PSoC4/PWM.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:.\Generated_Source\PSoC4/PWM.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4100/PSoC 4200 devices.
 949:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:.\Generated_Source\PSoC4/PWM.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:.\Generated_Source\PSoC4/PWM.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:.\Generated_Source\PSoC4/PWM.c **** *
 953:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 954:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 955:.\Generated_Source\PSoC4/PWM.c **** {
 792              		.loc 1 955 0
 793              		.cfi_startproc
 794              	.LVL56:
 956:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 957:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 958:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 959:.\Generated_Source\PSoC4/PWM.c **** 
 960:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
 961:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 962:.\Generated_Source\PSoC4/PWM.c **** 
 963:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:.\Generated_Source\PSoC4/PWM.c ****         {
 965:.\Generated_Source\PSoC4/PWM.c ****             compareBuf++;
 966:.\Generated_Source\PSoC4/PWM.c ****         }
 967:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0u != compareBuf))
 968:.\Generated_Source\PSoC4/PWM.c ****         {
 969:.\Generated_Source\PSoC4/PWM.c ****             compareBuf --;
 970:.\Generated_Source\PSoC4/PWM.c ****         }
 971:.\Generated_Source\PSoC4/PWM.c ****         else
 972:.\Generated_Source\PSoC4/PWM.c ****         {
 973:.\Generated_Source\PSoC4/PWM.c ****         }
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 32


 974:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
 975:.\Generated_Source\PSoC4/PWM.c ****     
 976:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 795              		.loc 1 976 0
 796 0000 0004     		lsl	r0, r0, #16
 797              	.LVL57:
 798 0002 000C     		lsr	r0, r0, #16
 799 0004 014B     		ldr	r3, .L65
 800 0006 1860     		str	r0, [r3]
 977:.\Generated_Source\PSoC4/PWM.c **** }
 801              		.loc 1 977 0
 802              		@ sp needed
 803 0008 7047     		bx	lr
 804              	.L66:
 805 000a C046     		.align	2
 806              	.L65:
 807 000c 10010540 		.word	1074069776
 808              		.cfi_endproc
 809              	.LFE24:
 810              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 811              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 812              		.align	2
 813              		.global	PWM_ReadCompareBuf
 814              		.code	16
 815              		.thumb_func
 816              		.type	PWM_ReadCompareBuf, %function
 817              	PWM_ReadCompareBuf:
 818              	.LFB25:
 978:.\Generated_Source\PSoC4/PWM.c **** 
 979:.\Generated_Source\PSoC4/PWM.c **** 
 980:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 981:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 982:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 983:.\Generated_Source\PSoC4/PWM.c **** *
 984:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 985:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 987:.\Generated_Source\PSoC4/PWM.c **** *
 988:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 989:.\Generated_Source\PSoC4/PWM.c **** *  None
 990:.\Generated_Source\PSoC4/PWM.c **** *
 991:.\Generated_Source\PSoC4/PWM.c **** * Return:
 992:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 993:.\Generated_Source\PSoC4/PWM.c **** *
 994:.\Generated_Source\PSoC4/PWM.c **** * Note:
 995:.\Generated_Source\PSoC4/PWM.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:.\Generated_Source\PSoC4/PWM.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:.\Generated_Source\PSoC4/PWM.c **** *  Down counting mode (except 0x0u).
 998:.\Generated_Source\PSoC4/PWM.c **** *
 999:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1000:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
1001:.\Generated_Source\PSoC4/PWM.c **** {
 819              		.loc 1 1001 0
 820              		.cfi_startproc
1002:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1003:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
1004:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 33


1005:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1006:.\Generated_Source\PSoC4/PWM.c **** 
1007:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_4000)
1008:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
1009:.\Generated_Source\PSoC4/PWM.c **** 
1010:.\Generated_Source\PSoC4/PWM.c ****         regVal = PWM_COMP_CAP_BUF_REG;
1011:.\Generated_Source\PSoC4/PWM.c ****         
1012:.\Generated_Source\PSoC4/PWM.c ****         if (((uint32)PWM__COUNT_DOWN == currentMode) && (0u != regVal))
1013:.\Generated_Source\PSoC4/PWM.c ****         {
1014:.\Generated_Source\PSoC4/PWM.c ****             regVal--;
1015:.\Generated_Source\PSoC4/PWM.c ****         }
1016:.\Generated_Source\PSoC4/PWM.c ****         else if (((uint32)PWM__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:.\Generated_Source\PSoC4/PWM.c ****         {
1018:.\Generated_Source\PSoC4/PWM.c ****             regVal++;
1019:.\Generated_Source\PSoC4/PWM.c ****         }
1020:.\Generated_Source\PSoC4/PWM.c ****         else
1021:.\Generated_Source\PSoC4/PWM.c ****         {
1022:.\Generated_Source\PSoC4/PWM.c ****         }
1023:.\Generated_Source\PSoC4/PWM.c **** 
1024:.\Generated_Source\PSoC4/PWM.c ****         return (regVal & PWM_16BIT_MASK);
1025:.\Generated_Source\PSoC4/PWM.c ****     #else
1026:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 821              		.loc 1 1026 0
 822 0000 024B     		ldr	r3, .L68
 823 0002 1868     		ldr	r0, [r3]
 824 0004 0004     		lsl	r0, r0, #16
 825 0006 000C     		lsr	r0, r0, #16
1027:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_4000) */
1028:.\Generated_Source\PSoC4/PWM.c **** }
 826              		.loc 1 1028 0
 827              		@ sp needed
 828 0008 7047     		bx	lr
 829              	.L69:
 830 000a C046     		.align	2
 831              	.L68:
 832 000c 10010540 		.word	1074069776
 833              		.cfi_endproc
 834              	.LFE25:
 835              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 836              		.section	.text.PWM_ReadCapture,"ax",%progbits
 837              		.align	2
 838              		.global	PWM_ReadCapture
 839              		.code	16
 840              		.thumb_func
 841              		.type	PWM_ReadCapture, %function
 842              	PWM_ReadCapture:
 843              	.LFB26:
1029:.\Generated_Source\PSoC4/PWM.c **** 
1030:.\Generated_Source\PSoC4/PWM.c **** 
1031:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1032:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1033:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1034:.\Generated_Source\PSoC4/PWM.c **** *
1035:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1036:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1037:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 34


1039:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1040:.\Generated_Source\PSoC4/PWM.c **** *  None
1041:.\Generated_Source\PSoC4/PWM.c **** *
1042:.\Generated_Source\PSoC4/PWM.c **** * Return:
1043:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1044:.\Generated_Source\PSoC4/PWM.c **** *
1045:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1046:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1047:.\Generated_Source\PSoC4/PWM.c **** {
 844              		.loc 1 1047 0
 845              		.cfi_startproc
1048:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 846              		.loc 1 1048 0
 847 0000 024B     		ldr	r3, .L71
 848 0002 1868     		ldr	r0, [r3]
 849 0004 0004     		lsl	r0, r0, #16
 850 0006 000C     		lsr	r0, r0, #16
1049:.\Generated_Source\PSoC4/PWM.c **** }
 851              		.loc 1 1049 0
 852              		@ sp needed
 853 0008 7047     		bx	lr
 854              	.L72:
 855 000a C046     		.align	2
 856              	.L71:
 857 000c 0C010540 		.word	1074069772
 858              		.cfi_endproc
 859              	.LFE26:
 860              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 861              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 862              		.align	2
 863              		.global	PWM_ReadCaptureBuf
 864              		.code	16
 865              		.thumb_func
 866              		.type	PWM_ReadCaptureBuf, %function
 867              	PWM_ReadCaptureBuf:
 868              	.LFB27:
1050:.\Generated_Source\PSoC4/PWM.c **** 
1051:.\Generated_Source\PSoC4/PWM.c **** 
1052:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1053:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1054:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1055:.\Generated_Source\PSoC4/PWM.c **** *
1056:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1057:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1058:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:.\Generated_Source\PSoC4/PWM.c **** *
1060:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1061:.\Generated_Source\PSoC4/PWM.c **** *  None
1062:.\Generated_Source\PSoC4/PWM.c **** *
1063:.\Generated_Source\PSoC4/PWM.c **** * Return:
1064:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1065:.\Generated_Source\PSoC4/PWM.c **** *
1066:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1067:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1068:.\Generated_Source\PSoC4/PWM.c **** {
 869              		.loc 1 1068 0
 870              		.cfi_startproc
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 35


1069:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 871              		.loc 1 1069 0
 872 0000 024B     		ldr	r3, .L74
 873 0002 1868     		ldr	r0, [r3]
 874 0004 0004     		lsl	r0, r0, #16
 875 0006 000C     		lsr	r0, r0, #16
1070:.\Generated_Source\PSoC4/PWM.c **** }
 876              		.loc 1 1070 0
 877              		@ sp needed
 878 0008 7047     		bx	lr
 879              	.L75:
 880 000a C046     		.align	2
 881              	.L74:
 882 000c 10010540 		.word	1074069776
 883              		.cfi_endproc
 884              	.LFE27:
 885              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 886              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 887              		.align	2
 888              		.global	PWM_SetCaptureMode
 889              		.code	16
 890              		.thumb_func
 891              		.type	PWM_SetCaptureMode, %function
 892              	PWM_SetCaptureMode:
 893              	.LFB28:
1071:.\Generated_Source\PSoC4/PWM.c **** 
1072:.\Generated_Source\PSoC4/PWM.c **** 
1073:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1074:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1075:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1076:.\Generated_Source\PSoC4/PWM.c **** *
1077:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1078:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1081:.\Generated_Source\PSoC4/PWM.c **** *
1082:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1083:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1084:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1085:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1086:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1087:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1088:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1089:.\Generated_Source\PSoC4/PWM.c **** *
1090:.\Generated_Source\PSoC4/PWM.c **** * Return:
1091:.\Generated_Source\PSoC4/PWM.c **** *  None
1092:.\Generated_Source\PSoC4/PWM.c **** *
1093:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1094:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1095:.\Generated_Source\PSoC4/PWM.c **** {
 894              		.loc 1 1095 0
 895              		.cfi_startproc
 896              	.LVL58:
 897 0000 10B5     		push	{r4, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 4, -8
 900              		.cfi_offset 14, -4
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 36


 901 0002 041C     		mov	r4, r0
1096:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1097:.\Generated_Source\PSoC4/PWM.c **** 
1098:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 902              		.loc 1 1098 0
 903 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 904              	.LVL59:
1099:.\Generated_Source\PSoC4/PWM.c **** 
1100:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 905              		.loc 1 1100 0
 906 0008 054B     		ldr	r3, .L77
 907 000a 1A68     		ldr	r2, [r3]
 908 000c 0321     		mov	r1, #3
 909 000e 8A43     		bic	r2, r1
 910 0010 1A60     		str	r2, [r3]
1101:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 911              		.loc 1 1101 0
 912 0012 1A68     		ldr	r2, [r3]
 913 0014 1443     		orr	r4, r2
 914              	.LVL60:
 915 0016 1C60     		str	r4, [r3]
1102:.\Generated_Source\PSoC4/PWM.c **** 
1103:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 916              		.loc 1 1103 0
 917 0018 FFF7FEFF 		bl	CyExitCriticalSection
 918              	.LVL61:
1104:.\Generated_Source\PSoC4/PWM.c **** }
 919              		.loc 1 1104 0
 920              		@ sp needed
 921 001c 10BD     		pop	{r4, pc}
 922              	.L78:
 923 001e C046     		.align	2
 924              	.L77:
 925 0020 24010540 		.word	1074069796
 926              		.cfi_endproc
 927              	.LFE28:
 928              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 929              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 930              		.align	2
 931              		.global	PWM_SetReloadMode
 932              		.code	16
 933              		.thumb_func
 934              		.type	PWM_SetReloadMode, %function
 935              	PWM_SetReloadMode:
 936              	.LFB29:
1105:.\Generated_Source\PSoC4/PWM.c **** 
1106:.\Generated_Source\PSoC4/PWM.c **** 
1107:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1108:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1109:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1110:.\Generated_Source\PSoC4/PWM.c **** *
1111:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1112:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:.\Generated_Source\PSoC4/PWM.c **** *  input.
1114:.\Generated_Source\PSoC4/PWM.c **** *
1115:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1116:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 37


1117:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1118:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1119:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1120:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1121:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1122:.\Generated_Source\PSoC4/PWM.c **** *
1123:.\Generated_Source\PSoC4/PWM.c **** * Return:
1124:.\Generated_Source\PSoC4/PWM.c **** *  None
1125:.\Generated_Source\PSoC4/PWM.c **** *
1126:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1127:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1128:.\Generated_Source\PSoC4/PWM.c **** {
 937              		.loc 1 1128 0
 938              		.cfi_startproc
 939              	.LVL62:
 940 0000 10B5     		push	{r4, lr}
 941              		.cfi_def_cfa_offset 8
 942              		.cfi_offset 4, -8
 943              		.cfi_offset 14, -4
 944 0002 041C     		mov	r4, r0
1129:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1130:.\Generated_Source\PSoC4/PWM.c **** 
1131:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 945              		.loc 1 1131 0
 946 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 947              	.LVL63:
1132:.\Generated_Source\PSoC4/PWM.c **** 
1133:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 948              		.loc 1 1133 0
 949 0008 054B     		ldr	r3, .L80
 950 000a 1A68     		ldr	r2, [r3]
 951 000c 3021     		mov	r1, #48
 952 000e 8A43     		bic	r2, r1
 953 0010 1A60     		str	r2, [r3]
1134:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 954              		.loc 1 1134 0
 955 0012 1A68     		ldr	r2, [r3]
 956 0014 2401     		lsl	r4, r4, #4
 957              	.LVL64:
 958 0016 1443     		orr	r4, r2
 959 0018 1C60     		str	r4, [r3]
1135:.\Generated_Source\PSoC4/PWM.c **** 
1136:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 960              		.loc 1 1136 0
 961 001a FFF7FEFF 		bl	CyExitCriticalSection
 962              	.LVL65:
1137:.\Generated_Source\PSoC4/PWM.c **** }
 963              		.loc 1 1137 0
 964              		@ sp needed
 965 001e 10BD     		pop	{r4, pc}
 966              	.L81:
 967              		.align	2
 968              	.L80:
 969 0020 24010540 		.word	1074069796
 970              		.cfi_endproc
 971              	.LFE29:
 972              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 38


 973              		.section	.text.PWM_SetStartMode,"ax",%progbits
 974              		.align	2
 975              		.global	PWM_SetStartMode
 976              		.code	16
 977              		.thumb_func
 978              		.type	PWM_SetStartMode, %function
 979              	PWM_SetStartMode:
 980              	.LFB30:
1138:.\Generated_Source\PSoC4/PWM.c **** 
1139:.\Generated_Source\PSoC4/PWM.c **** 
1140:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1141:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1142:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1143:.\Generated_Source\PSoC4/PWM.c **** *
1144:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1145:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1147:.\Generated_Source\PSoC4/PWM.c **** *
1148:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1149:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1150:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1151:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1152:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1153:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1154:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1155:.\Generated_Source\PSoC4/PWM.c **** *
1156:.\Generated_Source\PSoC4/PWM.c **** * Return:
1157:.\Generated_Source\PSoC4/PWM.c **** *  None
1158:.\Generated_Source\PSoC4/PWM.c **** *
1159:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1160:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1161:.\Generated_Source\PSoC4/PWM.c **** {
 981              		.loc 1 1161 0
 982              		.cfi_startproc
 983              	.LVL66:
 984 0000 10B5     		push	{r4, lr}
 985              		.cfi_def_cfa_offset 8
 986              		.cfi_offset 4, -8
 987              		.cfi_offset 14, -4
 988 0002 041C     		mov	r4, r0
1162:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1163:.\Generated_Source\PSoC4/PWM.c **** 
1164:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 989              		.loc 1 1164 0
 990 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 991              	.LVL67:
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 992              		.loc 1 1166 0
 993 0008 054B     		ldr	r3, .L83
 994 000a 1968     		ldr	r1, [r3]
 995 000c 054A     		ldr	r2, .L83+4
 996 000e 0A40     		and	r2, r1
 997 0010 1A60     		str	r2, [r3]
1167:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 998              		.loc 1 1167 0
 999 0012 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 39


 1000 0014 2402     		lsl	r4, r4, #8
 1001              	.LVL68:
 1002 0016 1443     		orr	r4, r2
 1003 0018 1C60     		str	r4, [r3]
1168:.\Generated_Source\PSoC4/PWM.c **** 
1169:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1004              		.loc 1 1169 0
 1005 001a FFF7FEFF 		bl	CyExitCriticalSection
 1006              	.LVL69:
1170:.\Generated_Source\PSoC4/PWM.c **** }
 1007              		.loc 1 1170 0
 1008              		@ sp needed
 1009 001e 10BD     		pop	{r4, pc}
 1010              	.L84:
 1011              		.align	2
 1012              	.L83:
 1013 0020 24010540 		.word	1074069796
 1014 0024 FFFCFFFF 		.word	-769
 1015              		.cfi_endproc
 1016              	.LFE30:
 1017              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1018              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1019              		.align	2
 1020              		.global	PWM_SetStopMode
 1021              		.code	16
 1022              		.thumb_func
 1023              		.type	PWM_SetStopMode, %function
 1024              	PWM_SetStopMode:
 1025              	.LFB31:
1171:.\Generated_Source\PSoC4/PWM.c **** 
1172:.\Generated_Source\PSoC4/PWM.c **** 
1173:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1175:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1176:.\Generated_Source\PSoC4/PWM.c **** *
1177:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1178:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:.\Generated_Source\PSoC4/PWM.c **** *
1180:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1181:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1182:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1183:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1184:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1185:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1186:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1187:.\Generated_Source\PSoC4/PWM.c **** *
1188:.\Generated_Source\PSoC4/PWM.c **** * Return:
1189:.\Generated_Source\PSoC4/PWM.c **** *  None
1190:.\Generated_Source\PSoC4/PWM.c **** *
1191:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1193:.\Generated_Source\PSoC4/PWM.c **** {
 1026              		.loc 1 1193 0
 1027              		.cfi_startproc
 1028              	.LVL70:
 1029 0000 10B5     		push	{r4, lr}
 1030              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 40


 1031              		.cfi_offset 4, -8
 1032              		.cfi_offset 14, -4
 1033 0002 041C     		mov	r4, r0
1194:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1195:.\Generated_Source\PSoC4/PWM.c **** 
1196:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1034              		.loc 1 1196 0
 1035 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1036              	.LVL71:
1197:.\Generated_Source\PSoC4/PWM.c **** 
1198:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1037              		.loc 1 1198 0
 1038 0008 054B     		ldr	r3, .L86
 1039 000a 1A68     		ldr	r2, [r3]
 1040 000c C021     		mov	r1, #192
 1041 000e 8A43     		bic	r2, r1
 1042 0010 1A60     		str	r2, [r3]
1199:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1043              		.loc 1 1199 0
 1044 0012 1A68     		ldr	r2, [r3]
 1045 0014 A401     		lsl	r4, r4, #6
 1046              	.LVL72:
 1047 0016 1443     		orr	r4, r2
 1048 0018 1C60     		str	r4, [r3]
1200:.\Generated_Source\PSoC4/PWM.c **** 
1201:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1049              		.loc 1 1201 0
 1050 001a FFF7FEFF 		bl	CyExitCriticalSection
 1051              	.LVL73:
1202:.\Generated_Source\PSoC4/PWM.c **** }
 1052              		.loc 1 1202 0
 1053              		@ sp needed
 1054 001e 10BD     		pop	{r4, pc}
 1055              	.L87:
 1056              		.align	2
 1057              	.L86:
 1058 0020 24010540 		.word	1074069796
 1059              		.cfi_endproc
 1060              	.LFE31:
 1061              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1062              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1063              		.align	2
 1064              		.global	PWM_SetCountMode
 1065              		.code	16
 1066              		.thumb_func
 1067              		.type	PWM_SetCountMode, %function
 1068              	PWM_SetCountMode:
 1069              	.LFB32:
1203:.\Generated_Source\PSoC4/PWM.c **** 
1204:.\Generated_Source\PSoC4/PWM.c **** 
1205:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1206:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1207:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1208:.\Generated_Source\PSoC4/PWM.c **** *
1209:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1210:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:.\Generated_Source\PSoC4/PWM.c **** *  input.
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 41


1212:.\Generated_Source\PSoC4/PWM.c **** *
1213:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1214:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1215:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1216:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1217:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1218:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1219:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1220:.\Generated_Source\PSoC4/PWM.c **** *
1221:.\Generated_Source\PSoC4/PWM.c **** * Return:
1222:.\Generated_Source\PSoC4/PWM.c **** *  None
1223:.\Generated_Source\PSoC4/PWM.c **** *
1224:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1225:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1226:.\Generated_Source\PSoC4/PWM.c **** {
 1070              		.loc 1 1226 0
 1071              		.cfi_startproc
 1072              	.LVL74:
 1073 0000 10B5     		push	{r4, lr}
 1074              		.cfi_def_cfa_offset 8
 1075              		.cfi_offset 4, -8
 1076              		.cfi_offset 14, -4
 1077 0002 041C     		mov	r4, r0
1227:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1228:.\Generated_Source\PSoC4/PWM.c **** 
1229:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1078              		.loc 1 1229 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL75:
1230:.\Generated_Source\PSoC4/PWM.c **** 
1231:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1081              		.loc 1 1231 0
 1082 0008 054B     		ldr	r3, .L89
 1083 000a 1A68     		ldr	r2, [r3]
 1084 000c 0C21     		mov	r1, #12
 1085 000e 8A43     		bic	r2, r1
 1086 0010 1A60     		str	r2, [r3]
1232:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1087              		.loc 1 1232 0
 1088 0012 1A68     		ldr	r2, [r3]
 1089 0014 A400     		lsl	r4, r4, #2
 1090              	.LVL76:
 1091 0016 1443     		orr	r4, r2
 1092 0018 1C60     		str	r4, [r3]
1233:.\Generated_Source\PSoC4/PWM.c **** 
1234:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1093              		.loc 1 1234 0
 1094 001a FFF7FEFF 		bl	CyExitCriticalSection
 1095              	.LVL77:
1235:.\Generated_Source\PSoC4/PWM.c **** }
 1096              		.loc 1 1235 0
 1097              		@ sp needed
 1098 001e 10BD     		pop	{r4, pc}
 1099              	.L90:
 1100              		.align	2
 1101              	.L89:
 1102 0020 24010540 		.word	1074069796
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 42


 1103              		.cfi_endproc
 1104              	.LFE32:
 1105              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1106              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1107              		.align	2
 1108              		.global	PWM_TriggerCommand
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	PWM_TriggerCommand, %function
 1112              	PWM_TriggerCommand:
 1113              	.LFB33:
1236:.\Generated_Source\PSoC4/PWM.c **** 
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1240:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/PWM.c **** *
1242:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1243:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:.\Generated_Source\PSoC4/PWM.c **** *
1247:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1248:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1250:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1251:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1252:.\Generated_Source\PSoC4/PWM.c **** *        define.
1253:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1254:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1255:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1256:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture/Switch command
1257:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload/Index command
1258:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop/Kill command
1259:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start/phiB command
1260:.\Generated_Source\PSoC4/PWM.c **** *
1261:.\Generated_Source\PSoC4/PWM.c **** * Return:
1262:.\Generated_Source\PSoC4/PWM.c **** *  None
1263:.\Generated_Source\PSoC4/PWM.c **** *
1264:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1265:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1266:.\Generated_Source\PSoC4/PWM.c **** {
 1114              		.loc 1 1266 0
 1115              		.cfi_startproc
 1116              	.LVL78:
 1117 0000 38B5     		push	{r3, r4, r5, lr}
 1118              		.cfi_def_cfa_offset 16
 1119              		.cfi_offset 3, -16
 1120              		.cfi_offset 4, -12
 1121              		.cfi_offset 5, -8
 1122              		.cfi_offset 14, -4
 1123 0002 041C     		mov	r4, r0
 1124 0004 0D1C     		mov	r5, r1
1267:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1268:.\Generated_Source\PSoC4/PWM.c **** 
1269:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1125              		.loc 1 1269 0
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 43


 1126 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL79:
1270:.\Generated_Source\PSoC4/PWM.c **** 
1271:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1128              		.loc 1 1271 0
 1129 000a AC40     		lsl	r4, r4, r5
 1130              	.LVL80:
 1131 000c 024B     		ldr	r3, .L92
 1132 000e 1C60     		str	r4, [r3]
1272:.\Generated_Source\PSoC4/PWM.c **** 
1273:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1133              		.loc 1 1273 0
 1134 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1135              	.LVL81:
1274:.\Generated_Source\PSoC4/PWM.c **** }
 1136              		.loc 1 1274 0
 1137              		@ sp needed
 1138              	.LVL82:
 1139 0014 38BD     		pop	{r3, r4, r5, pc}
 1140              	.L93:
 1141 0016 C046     		.align	2
 1142              	.L92:
 1143 0018 08000540 		.word	1074069512
 1144              		.cfi_endproc
 1145              	.LFE33:
 1146              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1147              		.section	.text.PWM_Enable,"ax",%progbits
 1148              		.align	2
 1149              		.global	PWM_Enable
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	PWM_Enable, %function
 1153              	PWM_Enable:
 1154              	.LFB1:
 178:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 1155              		.loc 1 178 0
 1156              		.cfi_startproc
 1157 0000 08B5     		push	{r3, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 3, -8
 1160              		.cfi_offset 14, -4
 181:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 1161              		.loc 1 181 0
 1162 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1163              	.LVL83:
 182:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1164              		.loc 1 182 0
 1165 0006 064A     		ldr	r2, .L95
 1166 0008 1168     		ldr	r1, [r2]
 1167 000a 0123     		mov	r3, #1
 1168 000c 0B43     		orr	r3, r1
 1169 000e 1360     		str	r3, [r2]
 183:.\Generated_Source\PSoC4/PWM.c **** 
 1170              		.loc 1 183 0
 1171 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1172              	.LVL84:
 188:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 44


 1173              		.loc 1 188 0
 1174 0014 0120     		mov	r0, #1
 1175 0016 1821     		mov	r1, #24
 1176 0018 FFF7FEFF 		bl	PWM_TriggerCommand
 1177              	.LVL85:
 203:.\Generated_Source\PSoC4/PWM.c **** 
 1178              		.loc 1 203 0
 1179              		@ sp needed
 1180 001c 08BD     		pop	{r3, pc}
 1181              	.L96:
 1182 001e C046     		.align	2
 1183              	.L95:
 1184 0020 00000540 		.word	1074069504
 1185              		.cfi_endproc
 1186              	.LFE1:
 1187              		.size	PWM_Enable, .-PWM_Enable
 1188              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1189              		.align	2
 1190              		.global	PWM_ReadStatus
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	PWM_ReadStatus, %function
 1194              	PWM_ReadStatus:
 1195              	.LFB34:
1275:.\Generated_Source\PSoC4/PWM.c **** 
1276:.\Generated_Source\PSoC4/PWM.c **** 
1277:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1278:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1279:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1280:.\Generated_Source\PSoC4/PWM.c **** *
1281:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1282:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1283:.\Generated_Source\PSoC4/PWM.c **** *
1284:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1285:.\Generated_Source\PSoC4/PWM.c **** *  None
1286:.\Generated_Source\PSoC4/PWM.c **** *
1287:.\Generated_Source\PSoC4/PWM.c **** * Return:
1288:.\Generated_Source\PSoC4/PWM.c **** *  Status
1289:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1290:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1291:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1292:.\Generated_Source\PSoC4/PWM.c **** *
1293:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1294:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1295:.\Generated_Source\PSoC4/PWM.c **** {
 1196              		.loc 1 1295 0
 1197              		.cfi_startproc
1296:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1198              		.loc 1 1296 0
 1199 0000 034B     		ldr	r3, .L98
 1200 0002 1868     		ldr	r0, [r3]
 1201 0004 820F     		lsr	r2, r0, #30
1297:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1202              		.loc 1 1297 0
 1203 0006 1B68     		ldr	r3, [r3]
 1204 0008 0120     		mov	r0, #1
 1205 000a 1840     		and	r0, r3
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 45


1296:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1206              		.loc 1 1296 0
 1207 000c 1043     		orr	r0, r2
1298:.\Generated_Source\PSoC4/PWM.c **** }
 1208              		.loc 1 1298 0
 1209              		@ sp needed
 1210 000e 7047     		bx	lr
 1211              	.L99:
 1212              		.align	2
 1213              	.L98:
 1214 0010 04010540 		.word	1074069764
 1215              		.cfi_endproc
 1216              	.LFE34:
 1217              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1218              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1219              		.align	2
 1220              		.global	PWM_SetInterruptMode
 1221              		.code	16
 1222              		.thumb_func
 1223              		.type	PWM_SetInterruptMode, %function
 1224              	PWM_SetInterruptMode:
 1225              	.LFB35:
1299:.\Generated_Source\PSoC4/PWM.c **** 
1300:.\Generated_Source\PSoC4/PWM.c **** 
1301:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1303:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/PWM.c **** *
1305:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1306:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1307:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1308:.\Generated_Source\PSoC4/PWM.c **** *
1309:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1310:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1311:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1312:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1313:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:.\Generated_Source\PSoC4/PWM.c **** *
1315:.\Generated_Source\PSoC4/PWM.c **** * Return:
1316:.\Generated_Source\PSoC4/PWM.c **** *  None
1317:.\Generated_Source\PSoC4/PWM.c **** *
1318:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1319:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1320:.\Generated_Source\PSoC4/PWM.c **** {
 1226              		.loc 1 1320 0
 1227              		.cfi_startproc
 1228              	.LVL86:
1321:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1229              		.loc 1 1321 0
 1230 0000 014B     		ldr	r3, .L101
 1231 0002 1860     		str	r0, [r3]
1322:.\Generated_Source\PSoC4/PWM.c **** }
 1232              		.loc 1 1322 0
 1233              		@ sp needed
 1234 0004 7047     		bx	lr
 1235              	.L102:
 1236 0006 C046     		.align	2
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 46


 1237              	.L101:
 1238 0008 38010540 		.word	1074069816
 1239              		.cfi_endproc
 1240              	.LFE35:
 1241              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1242              		.section	.text.PWM_Init,"ax",%progbits
 1243              		.align	2
 1244              		.global	PWM_Init
 1245              		.code	16
 1246              		.thumb_func
 1247              		.type	PWM_Init, %function
 1248              	PWM_Init:
 1249              	.LFB0:
  39:.\Generated_Source\PSoC4/PWM.c **** 
 1250              		.loc 1 39 0
 1251              		.cfi_startproc
 1252 0000 10B5     		push	{r4, lr}
 1253              		.cfi_def_cfa_offset 8
 1254              		.cfi_offset 4, -8
 1255              		.cfi_offset 14, -4
  89:.\Generated_Source\PSoC4/PWM.c **** 
 1256              		.loc 1 89 0
 1257 0002 0D4C     		ldr	r4, .L104
 1258 0004 8023     		mov	r3, #128
 1259 0006 DB04     		lsl	r3, r3, #19
 1260 0008 2360     		str	r3, [r4]
  95:.\Generated_Source\PSoC4/PWM.c ****             
 1261              		.loc 1 95 0
 1262 000a 2368     		ldr	r3, [r4]
 1263 000c 2360     		str	r3, [r4]
 103:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM_CY_TCPWM_V2 && PWM_PWM_UPDOWN_CNT_USED && !PWM_CY_TCPWM_4000) */
 1264              		.loc 1 103 0
 1265 000e 0020     		mov	r0, #0
 1266 0010 FFF7FEFF 		bl	PWM_WriteCounter
 1267              	.LVL87:
 112:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
 1268              		.loc 1 112 0
 1269 0014 2368     		ldr	r3, [r4]
 1270 0016 2360     		str	r3, [r4]
 116:.\Generated_Source\PSoC4/PWM.c ****     
 1271              		.loc 1 116 0
 1272 0018 0C22     		mov	r2, #12
 1273 001a 084B     		ldr	r3, .L104+4
 1274 001c 1A60     		str	r2, [r3]
 119:.\Generated_Source\PSoC4/PWM.c **** 
 1275              		.loc 1 119 0
 1276 001e 0120     		mov	r0, #1
 1277 0020 FFF7FEFF 		bl	PWM_SetInterruptMode
 1278              	.LVL88:
 129:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 1279              		.loc 1 129 0
 1280 0024 3122     		mov	r2, #49
 1281 0026 064B     		ldr	r3, .L104+8
 1282 0028 1A60     		str	r2, [r3]
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 1283              		.loc 1 146 0
 1284 002a FF20     		mov	r0, #255
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 47


 1285 002c FFF7FEFF 		bl	PWM_WritePeriod
 1286              	.LVL89:
 147:.\Generated_Source\PSoC4/PWM.c **** 
 1287              		.loc 1 147 0
 1288 0030 0020     		mov	r0, #0
 1289 0032 FFF7FEFF 		bl	PWM_WriteCompare
 1290              	.LVL90:
 160:.\Generated_Source\PSoC4/PWM.c **** 
 1291              		.loc 1 160 0
 1292              		@ sp needed
 1293 0036 10BD     		pop	{r4, pc}
 1294              	.L105:
 1295              		.align	2
 1296              	.L104:
 1297 0038 00010540 		.word	1074069760
 1298 003c 24010540 		.word	1074069796
 1299 0040 28010540 		.word	1074069800
 1300              		.cfi_endproc
 1301              	.LFE0:
 1302              		.size	PWM_Init, .-PWM_Init
 1303              		.section	.text.PWM_Start,"ax",%progbits
 1304              		.align	2
 1305              		.global	PWM_Start
 1306              		.code	16
 1307              		.thumb_func
 1308              		.type	PWM_Start, %function
 1309              	PWM_Start:
 1310              	.LFB2:
 231:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 1311              		.loc 1 231 0
 1312              		.cfi_startproc
 1313 0000 08B5     		push	{r3, lr}
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 3, -8
 1316              		.cfi_offset 14, -4
 232:.\Generated_Source\PSoC4/PWM.c ****     {
 1317              		.loc 1 232 0
 1318 0002 064B     		ldr	r3, .L108
 1319 0004 1B78     		ldrb	r3, [r3]
 1320 0006 002B     		cmp	r3, #0
 1321 0008 04D1     		bne	.L107
 234:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 1322              		.loc 1 234 0
 1323 000a FFF7FEFF 		bl	PWM_Init
 1324              	.LVL91:
 235:.\Generated_Source\PSoC4/PWM.c ****     }
 1325              		.loc 1 235 0
 1326 000e 0122     		mov	r2, #1
 1327 0010 024B     		ldr	r3, .L108
 1328 0012 1A70     		strb	r2, [r3]
 1329              	.L107:
 238:.\Generated_Source\PSoC4/PWM.c **** }
 1330              		.loc 1 238 0
 1331 0014 FFF7FEFF 		bl	PWM_Enable
 1332              	.LVL92:
 239:.\Generated_Source\PSoC4/PWM.c **** 
 1333              		.loc 1 239 0
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 48


 1334              		@ sp needed
 1335 0018 08BD     		pop	{r3, pc}
 1336              	.L109:
 1337 001a C046     		.align	2
 1338              	.L108:
 1339 001c 00000000 		.word	.LANCHOR0
 1340              		.cfi_endproc
 1341              	.LFE2:
 1342              		.size	PWM_Start, .-PWM_Start
 1343              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1344              		.align	2
 1345              		.global	PWM_GetInterruptSourceMasked
 1346              		.code	16
 1347              		.thumb_func
 1348              		.type	PWM_GetInterruptSourceMasked, %function
 1349              	PWM_GetInterruptSourceMasked:
 1350              	.LFB36:
1323:.\Generated_Source\PSoC4/PWM.c **** 
1324:.\Generated_Source\PSoC4/PWM.c **** 
1325:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1326:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1327:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1328:.\Generated_Source\PSoC4/PWM.c **** *
1329:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1330:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:.\Generated_Source\PSoC4/PWM.c **** *
1332:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1333:.\Generated_Source\PSoC4/PWM.c **** *   None
1334:.\Generated_Source\PSoC4/PWM.c **** *
1335:.\Generated_Source\PSoC4/PWM.c **** * Return:
1336:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1337:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1338:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1339:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:.\Generated_Source\PSoC4/PWM.c **** *
1341:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1342:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1343:.\Generated_Source\PSoC4/PWM.c **** {
 1351              		.loc 1 1343 0
 1352              		.cfi_startproc
1344:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1353              		.loc 1 1344 0
 1354 0000 014B     		ldr	r3, .L111
 1355 0002 1868     		ldr	r0, [r3]
1345:.\Generated_Source\PSoC4/PWM.c **** }
 1356              		.loc 1 1345 0
 1357              		@ sp needed
 1358 0004 7047     		bx	lr
 1359              	.L112:
 1360 0006 C046     		.align	2
 1361              	.L111:
 1362 0008 3C010540 		.word	1074069820
 1363              		.cfi_endproc
 1364              	.LFE36:
 1365              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1366              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1367              		.align	2
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 49


 1368              		.global	PWM_GetInterruptSource
 1369              		.code	16
 1370              		.thumb_func
 1371              		.type	PWM_GetInterruptSource, %function
 1372              	PWM_GetInterruptSource:
 1373              	.LFB37:
1346:.\Generated_Source\PSoC4/PWM.c **** 
1347:.\Generated_Source\PSoC4/PWM.c **** 
1348:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1349:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1350:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1351:.\Generated_Source\PSoC4/PWM.c **** *
1352:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1353:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1354:.\Generated_Source\PSoC4/PWM.c **** *
1355:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1356:.\Generated_Source\PSoC4/PWM.c **** *  None
1357:.\Generated_Source\PSoC4/PWM.c **** *
1358:.\Generated_Source\PSoC4/PWM.c **** * Return:
1359:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1360:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1361:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1362:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:.\Generated_Source\PSoC4/PWM.c **** *
1364:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1365:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1366:.\Generated_Source\PSoC4/PWM.c **** {
 1374              		.loc 1 1366 0
 1375              		.cfi_startproc
1367:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1376              		.loc 1 1367 0
 1377 0000 014B     		ldr	r3, .L114
 1378 0002 1868     		ldr	r0, [r3]
1368:.\Generated_Source\PSoC4/PWM.c **** }
 1379              		.loc 1 1368 0
 1380              		@ sp needed
 1381 0004 7047     		bx	lr
 1382              	.L115:
 1383 0006 C046     		.align	2
 1384              	.L114:
 1385 0008 30010540 		.word	1074069808
 1386              		.cfi_endproc
 1387              	.LFE37:
 1388              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1389              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1390              		.align	2
 1391              		.global	PWM_ClearInterrupt
 1392              		.code	16
 1393              		.thumb_func
 1394              		.type	PWM_ClearInterrupt, %function
 1395              	PWM_ClearInterrupt:
 1396              	.LFB38:
1369:.\Generated_Source\PSoC4/PWM.c **** 
1370:.\Generated_Source\PSoC4/PWM.c **** 
1371:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1372:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1373:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 50


1374:.\Generated_Source\PSoC4/PWM.c **** *
1375:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1376:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1377:.\Generated_Source\PSoC4/PWM.c **** *
1378:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1379:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1380:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1381:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1382:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:.\Generated_Source\PSoC4/PWM.c **** *
1384:.\Generated_Source\PSoC4/PWM.c **** * Return:
1385:.\Generated_Source\PSoC4/PWM.c **** *  None
1386:.\Generated_Source\PSoC4/PWM.c **** *
1387:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1388:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1389:.\Generated_Source\PSoC4/PWM.c **** {
 1397              		.loc 1 1389 0
 1398              		.cfi_startproc
 1399              	.LVL93:
1390:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1400              		.loc 1 1390 0
 1401 0000 014B     		ldr	r3, .L117
 1402 0002 1860     		str	r0, [r3]
1391:.\Generated_Source\PSoC4/PWM.c **** }
 1403              		.loc 1 1391 0
 1404              		@ sp needed
 1405 0004 7047     		bx	lr
 1406              	.L118:
 1407 0006 C046     		.align	2
 1408              	.L117:
 1409 0008 30010540 		.word	1074069808
 1410              		.cfi_endproc
 1411              	.LFE38:
 1412              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1413              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1414              		.align	2
 1415              		.global	PWM_SetInterrupt
 1416              		.code	16
 1417              		.thumb_func
 1418              		.type	PWM_SetInterrupt, %function
 1419              	PWM_SetInterrupt:
 1420              	.LFB39:
1392:.\Generated_Source\PSoC4/PWM.c **** 
1393:.\Generated_Source\PSoC4/PWM.c **** 
1394:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1395:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1396:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1397:.\Generated_Source\PSoC4/PWM.c **** *
1398:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1399:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1400:.\Generated_Source\PSoC4/PWM.c **** *
1401:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1402:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1403:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1404:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1405:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 51


1407:.\Generated_Source\PSoC4/PWM.c **** * Return:
1408:.\Generated_Source\PSoC4/PWM.c **** *  None
1409:.\Generated_Source\PSoC4/PWM.c **** *
1410:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1411:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1412:.\Generated_Source\PSoC4/PWM.c **** {
 1421              		.loc 1 1412 0
 1422              		.cfi_startproc
 1423              	.LVL94:
1413:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1424              		.loc 1 1413 0
 1425 0000 014B     		ldr	r3, .L120
 1426 0002 1860     		str	r0, [r3]
1414:.\Generated_Source\PSoC4/PWM.c **** }
 1427              		.loc 1 1414 0
 1428              		@ sp needed
 1429 0004 7047     		bx	lr
 1430              	.L121:
 1431 0006 C046     		.align	2
 1432              	.L120:
 1433 0008 34010540 		.word	1074069812
 1434              		.cfi_endproc
 1435              	.LFE39:
 1436              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1437              		.global	PWM_initVar
 1438              		.bss
 1439              		.set	.LANCHOR0,. + 0
 1440              		.type	PWM_initVar, %object
 1441              		.size	PWM_initVar, 1
 1442              	PWM_initVar:
 1443 0000 00       		.space	1
 1444              		.text
 1445              	.Letext0:
 1446              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1447              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1448              		.section	.debug_info,"",%progbits
 1449              	.Ldebug_info0:
 1450 0000 FF080000 		.4byte	0x8ff
 1451 0004 0400     		.2byte	0x4
 1452 0006 00000000 		.4byte	.Ldebug_abbrev0
 1453 000a 04       		.byte	0x4
 1454 000b 01       		.uleb128 0x1
 1455 000c D1020000 		.4byte	.LASF76
 1456 0010 01       		.byte	0x1
 1457 0011 E9000000 		.4byte	.LASF77
 1458 0015 43040000 		.4byte	.LASF78
 1459 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1460 001d 00000000 		.4byte	0
 1461 0021 00000000 		.4byte	.Ldebug_line0
 1462 0025 02       		.uleb128 0x2
 1463 0026 01       		.byte	0x1
 1464 0027 06       		.byte	0x6
 1465 0028 A1000000 		.4byte	.LASF0
 1466 002c 02       		.uleb128 0x2
 1467 002d 01       		.byte	0x1
 1468 002e 08       		.byte	0x8
 1469 002f 91030000 		.4byte	.LASF1
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 52


 1470 0033 02       		.uleb128 0x2
 1471 0034 02       		.byte	0x2
 1472 0035 05       		.byte	0x5
 1473 0036 C8030000 		.4byte	.LASF2
 1474 003a 02       		.uleb128 0x2
 1475 003b 02       		.byte	0x2
 1476 003c 07       		.byte	0x7
 1477 003d 09020000 		.4byte	.LASF3
 1478 0041 02       		.uleb128 0x2
 1479 0042 04       		.byte	0x4
 1480 0043 05       		.byte	0x5
 1481 0044 08010000 		.4byte	.LASF4
 1482 0048 02       		.uleb128 0x2
 1483 0049 04       		.byte	0x4
 1484 004a 07       		.byte	0x7
 1485 004b D7010000 		.4byte	.LASF5
 1486 004f 02       		.uleb128 0x2
 1487 0050 08       		.byte	0x8
 1488 0051 05       		.byte	0x5
 1489 0052 93000000 		.4byte	.LASF6
 1490 0056 02       		.uleb128 0x2
 1491 0057 08       		.byte	0x8
 1492 0058 07       		.byte	0x7
 1493 0059 41000000 		.4byte	.LASF7
 1494 005d 03       		.uleb128 0x3
 1495 005e 04       		.byte	0x4
 1496 005f 05       		.byte	0x5
 1497 0060 696E7400 		.ascii	"int\000"
 1498 0064 02       		.uleb128 0x2
 1499 0065 04       		.byte	0x4
 1500 0066 07       		.byte	0x7
 1501 0067 AF010000 		.4byte	.LASF8
 1502 006b 04       		.uleb128 0x4
 1503 006c 11010000 		.4byte	.LASF9
 1504 0070 02       		.byte	0x2
 1505 0071 9801     		.2byte	0x198
 1506 0073 2C000000 		.4byte	0x2c
 1507 0077 04       		.uleb128 0x4
 1508 0078 5E010000 		.4byte	.LASF10
 1509 007c 02       		.byte	0x2
 1510 007d 9A01     		.2byte	0x19a
 1511 007f 48000000 		.4byte	0x48
 1512 0083 02       		.uleb128 0x2
 1513 0084 04       		.byte	0x4
 1514 0085 04       		.byte	0x4
 1515 0086 5F030000 		.4byte	.LASF11
 1516 008a 02       		.uleb128 0x2
 1517 008b 08       		.byte	0x8
 1518 008c 04       		.byte	0x4
 1519 008d 17010000 		.4byte	.LASF12
 1520 0091 02       		.uleb128 0x2
 1521 0092 01       		.byte	0x1
 1522 0093 08       		.byte	0x8
 1523 0094 28040000 		.4byte	.LASF13
 1524 0098 04       		.uleb128 0x4
 1525 0099 6F020000 		.4byte	.LASF14
 1526 009d 02       		.byte	0x2
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 53


 1527 009e 4402     		.2byte	0x244
 1528 00a0 A4000000 		.4byte	0xa4
 1529 00a4 05       		.uleb128 0x5
 1530 00a5 77000000 		.4byte	0x77
 1531 00a9 02       		.uleb128 0x2
 1532 00aa 04       		.byte	0x4
 1533 00ab 07       		.byte	0x7
 1534 00ac 90020000 		.4byte	.LASF15
 1535 00b0 06       		.uleb128 0x6
 1536 00b1 44010000 		.4byte	.LASF16
 1537 00b5 01       		.byte	0x1
 1538 00b6 0001     		.2byte	0x100
 1539 00b8 00000000 		.4byte	.LFB3
 1540 00bc 1C000000 		.4byte	.LFE3-.LFB3
 1541 00c0 01       		.uleb128 0x1
 1542 00c1 9C       		.byte	0x9c
 1543 00c2 E9000000 		.4byte	0xe9
 1544 00c6 07       		.uleb128 0x7
 1545 00c7 BE040000 		.4byte	.LASF18
 1546 00cb 01       		.byte	0x1
 1547 00cc 0201     		.2byte	0x102
 1548 00ce 6B000000 		.4byte	0x6b
 1549 00d2 00000000 		.4byte	.LLST0
 1550 00d6 08       		.uleb128 0x8
 1551 00d7 06000000 		.4byte	.LVL0
 1552 00db EA080000 		.4byte	0x8ea
 1553 00df 08       		.uleb128 0x8
 1554 00e0 14000000 		.4byte	.LVL1
 1555 00e4 F5080000 		.4byte	0x8f5
 1556 00e8 00       		.byte	0
 1557 00e9 06       		.uleb128 0x6
 1558 00ea E0040000 		.4byte	.LASF17
 1559 00ee 01       		.byte	0x1
 1560 00ef 2501     		.2byte	0x125
 1561 00f1 00000000 		.4byte	.LFB4
 1562 00f5 28000000 		.4byte	.LFE4-.LFB4
 1563 00f9 01       		.uleb128 0x1
 1564 00fa 9C       		.byte	0x9c
 1565 00fb 32010000 		.4byte	0x132
 1566 00ff 09       		.uleb128 0x9
 1567 0100 2D040000 		.4byte	.LASF20
 1568 0104 01       		.byte	0x1
 1569 0105 2501     		.2byte	0x125
 1570 0107 77000000 		.4byte	0x77
 1571 010b 13000000 		.4byte	.LLST1
 1572 010f 07       		.uleb128 0x7
 1573 0110 BE040000 		.4byte	.LASF18
 1574 0114 01       		.byte	0x1
 1575 0115 2701     		.2byte	0x127
 1576 0117 6B000000 		.4byte	0x6b
 1577 011b 3F000000 		.4byte	.LLST2
 1578 011f 08       		.uleb128 0x8
 1579 0120 08000000 		.4byte	.LVL3
 1580 0124 EA080000 		.4byte	0x8ea
 1581 0128 08       		.uleb128 0x8
 1582 0129 1C000000 		.4byte	.LVL5
 1583 012d F5080000 		.4byte	0x8f5
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 54


 1584 0131 00       		.byte	0
 1585 0132 06       		.uleb128 0x6
 1586 0133 1A040000 		.4byte	.LASF19
 1587 0137 01       		.byte	0x1
 1588 0138 4601     		.2byte	0x146
 1589 013a 00000000 		.4byte	.LFB5
 1590 013e 28000000 		.4byte	.LFE5-.LFB5
 1591 0142 01       		.uleb128 0x1
 1592 0143 9C       		.byte	0x9c
 1593 0144 7B010000 		.4byte	0x17b
 1594 0148 09       		.uleb128 0x9
 1595 0149 6B000000 		.4byte	.LASF21
 1596 014d 01       		.byte	0x1
 1597 014e 4601     		.2byte	0x146
 1598 0150 77000000 		.4byte	0x77
 1599 0154 52000000 		.4byte	.LLST3
 1600 0158 07       		.uleb128 0x7
 1601 0159 BE040000 		.4byte	.LASF18
 1602 015d 01       		.byte	0x1
 1603 015e 4801     		.2byte	0x148
 1604 0160 6B000000 		.4byte	0x6b
 1605 0164 7E000000 		.4byte	.LLST4
 1606 0168 08       		.uleb128 0x8
 1607 0169 08000000 		.4byte	.LVL7
 1608 016d EA080000 		.4byte	0x8ea
 1609 0171 08       		.uleb128 0x8
 1610 0172 1C000000 		.4byte	.LVL9
 1611 0176 F5080000 		.4byte	0x8f5
 1612 017a 00       		.byte	0
 1613 017b 06       		.uleb128 0x6
 1614 017c 1C020000 		.4byte	.LASF22
 1615 0180 01       		.byte	0x1
 1616 0181 6B01     		.2byte	0x16b
 1617 0183 00000000 		.4byte	.LFB6
 1618 0187 28000000 		.4byte	.LFE6-.LFB6
 1619 018b 01       		.uleb128 0x1
 1620 018c 9C       		.byte	0x9c
 1621 018d C4010000 		.4byte	0x1c4
 1622 0191 09       		.uleb128 0x9
 1623 0192 65030000 		.4byte	.LASF23
 1624 0196 01       		.byte	0x1
 1625 0197 6B01     		.2byte	0x16b
 1626 0199 77000000 		.4byte	0x77
 1627 019d 91000000 		.4byte	.LLST5
 1628 01a1 07       		.uleb128 0x7
 1629 01a2 BE040000 		.4byte	.LASF18
 1630 01a6 01       		.byte	0x1
 1631 01a7 6D01     		.2byte	0x16d
 1632 01a9 6B000000 		.4byte	0x6b
 1633 01ad BD000000 		.4byte	.LLST6
 1634 01b1 08       		.uleb128 0x8
 1635 01b2 08000000 		.4byte	.LVL11
 1636 01b6 EA080000 		.4byte	0x8ea
 1637 01ba 08       		.uleb128 0x8
 1638 01bb 1C000000 		.4byte	.LVL13
 1639 01bf F5080000 		.4byte	0x8f5
 1640 01c3 00       		.byte	0
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 55


 1641 01c4 06       		.uleb128 0x6
 1642 01c5 B0020000 		.4byte	.LASF24
 1643 01c9 01       		.byte	0x1
 1644 01ca 8B01     		.2byte	0x18b
 1645 01cc 00000000 		.4byte	.LFB7
 1646 01d0 2C000000 		.4byte	.LFE7-.LFB7
 1647 01d4 01       		.uleb128 0x1
 1648 01d5 9C       		.byte	0x9c
 1649 01d6 0D020000 		.4byte	0x20d
 1650 01da 09       		.uleb128 0x9
 1651 01db 2D020000 		.4byte	.LASF25
 1652 01df 01       		.byte	0x1
 1653 01e0 8B01     		.2byte	0x18b
 1654 01e2 77000000 		.4byte	0x77
 1655 01e6 D0000000 		.4byte	.LLST7
 1656 01ea 07       		.uleb128 0x7
 1657 01eb BE040000 		.4byte	.LASF18
 1658 01ef 01       		.byte	0x1
 1659 01f0 8D01     		.2byte	0x18d
 1660 01f2 6B000000 		.4byte	0x6b
 1661 01f6 FC000000 		.4byte	.LLST8
 1662 01fa 08       		.uleb128 0x8
 1663 01fb 08000000 		.4byte	.LVL15
 1664 01ff EA080000 		.4byte	0x8ea
 1665 0203 08       		.uleb128 0x8
 1666 0204 22000000 		.4byte	.LVL17
 1667 0208 F5080000 		.4byte	0x8f5
 1668 020c 00       		.byte	0
 1669 020d 06       		.uleb128 0x6
 1670 020e B9030000 		.4byte	.LASF26
 1671 0212 01       		.byte	0x1
 1672 0213 C101     		.2byte	0x1c1
 1673 0215 00000000 		.4byte	.LFB8
 1674 0219 10000000 		.4byte	.LFE8-.LFB8
 1675 021d 01       		.uleb128 0x1
 1676 021e 9C       		.byte	0x9c
 1677 021f 34020000 		.4byte	0x234
 1678 0223 09       		.uleb128 0x9
 1679 0224 E9010000 		.4byte	.LASF27
 1680 0228 01       		.byte	0x1
 1681 0229 C101     		.2byte	0x1c1
 1682 022b 77000000 		.4byte	0x77
 1683 022f 0F010000 		.4byte	.LLST9
 1684 0233 00       		.byte	0
 1685 0234 06       		.uleb128 0x6
 1686 0235 27000000 		.4byte	.LASF28
 1687 0239 01       		.byte	0x1
 1688 023a E501     		.2byte	0x1e5
 1689 023c 00000000 		.4byte	.LFB9
 1690 0240 28000000 		.4byte	.LFE9-.LFB9
 1691 0244 01       		.uleb128 0x1
 1692 0245 9C       		.byte	0x9c
 1693 0246 7D020000 		.4byte	0x27d
 1694 024a 09       		.uleb128 0x9
 1695 024b 99020000 		.4byte	.LASF29
 1696 024f 01       		.byte	0x1
 1697 0250 E501     		.2byte	0x1e5
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 56


 1698 0252 77000000 		.4byte	0x77
 1699 0256 30010000 		.4byte	.LLST10
 1700 025a 07       		.uleb128 0x7
 1701 025b BE040000 		.4byte	.LASF18
 1702 025f 01       		.byte	0x1
 1703 0260 E701     		.2byte	0x1e7
 1704 0262 6B000000 		.4byte	0x6b
 1705 0266 5C010000 		.4byte	.LLST11
 1706 026a 08       		.uleb128 0x8
 1707 026b 08000000 		.4byte	.LVL21
 1708 026f EA080000 		.4byte	0x8ea
 1709 0273 08       		.uleb128 0x8
 1710 0274 22000000 		.4byte	.LVL23
 1711 0278 F5080000 		.4byte	0x8f5
 1712 027c 00       		.byte	0
 1713 027d 06       		.uleb128 0x6
 1714 027e EC040000 		.4byte	.LASF30
 1715 0282 01       		.byte	0x1
 1716 0283 0702     		.2byte	0x207
 1717 0285 00000000 		.4byte	.LFB10
 1718 0289 28000000 		.4byte	.LFE10-.LFB10
 1719 028d 01       		.uleb128 0x1
 1720 028e 9C       		.byte	0x9c
 1721 028f C6020000 		.4byte	0x2c6
 1722 0293 09       		.uleb128 0x9
 1723 0294 A8030000 		.4byte	.LASF31
 1724 0298 01       		.byte	0x1
 1725 0299 0702     		.2byte	0x207
 1726 029b 77000000 		.4byte	0x77
 1727 029f 6F010000 		.4byte	.LLST12
 1728 02a3 07       		.uleb128 0x7
 1729 02a4 BE040000 		.4byte	.LASF18
 1730 02a8 01       		.byte	0x1
 1731 02a9 0902     		.2byte	0x209
 1732 02ab 6B000000 		.4byte	0x6b
 1733 02af 9B010000 		.4byte	.LLST13
 1734 02b3 08       		.uleb128 0x8
 1735 02b4 08000000 		.4byte	.LVL25
 1736 02b8 EA080000 		.4byte	0x8ea
 1737 02bc 08       		.uleb128 0x8
 1738 02bd 22000000 		.4byte	.LVL27
 1739 02c1 F5080000 		.4byte	0x8f5
 1740 02c5 00       		.byte	0
 1741 02c6 06       		.uleb128 0x6
 1742 02c7 BC010000 		.4byte	.LASF32
 1743 02cb 01       		.byte	0x1
 1744 02cc 2802     		.2byte	0x228
 1745 02ce 00000000 		.4byte	.LFB11
 1746 02d2 2C000000 		.4byte	.LFE11-.LFB11
 1747 02d6 01       		.uleb128 0x1
 1748 02d7 9C       		.byte	0x9c
 1749 02d8 0F030000 		.4byte	0x30f
 1750 02dc 09       		.uleb128 0x9
 1751 02dd 96010000 		.4byte	.LASF33
 1752 02e1 01       		.byte	0x1
 1753 02e2 2802     		.2byte	0x228
 1754 02e4 77000000 		.4byte	0x77
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 57


 1755 02e8 AE010000 		.4byte	.LLST14
 1756 02ec 07       		.uleb128 0x7
 1757 02ed BE040000 		.4byte	.LASF18
 1758 02f1 01       		.byte	0x1
 1759 02f2 2A02     		.2byte	0x22a
 1760 02f4 6B000000 		.4byte	0x6b
 1761 02f8 DA010000 		.4byte	.LLST15
 1762 02fc 08       		.uleb128 0x8
 1763 02fd 08000000 		.4byte	.LVL29
 1764 0301 EA080000 		.4byte	0x8ea
 1765 0305 08       		.uleb128 0x8
 1766 0306 20000000 		.4byte	.LVL31
 1767 030a F5080000 		.4byte	0x8f5
 1768 030e 00       		.byte	0
 1769 030f 06       		.uleb128 0x6
 1770 0310 4D010000 		.4byte	.LASF34
 1771 0314 01       		.byte	0x1
 1772 0315 4902     		.2byte	0x249
 1773 0317 00000000 		.4byte	.LFB12
 1774 031b 28000000 		.4byte	.LFE12-.LFB12
 1775 031f 01       		.uleb128 0x1
 1776 0320 9C       		.byte	0x9c
 1777 0321 58030000 		.4byte	0x358
 1778 0325 09       		.uleb128 0x9
 1779 0326 82010000 		.4byte	.LASF35
 1780 032a 01       		.byte	0x1
 1781 032b 4902     		.2byte	0x249
 1782 032d 77000000 		.4byte	0x77
 1783 0331 ED010000 		.4byte	.LLST16
 1784 0335 07       		.uleb128 0x7
 1785 0336 BE040000 		.4byte	.LASF18
 1786 033a 01       		.byte	0x1
 1787 033b 4B02     		.2byte	0x24b
 1788 033d 6B000000 		.4byte	0x6b
 1789 0341 19020000 		.4byte	.LLST17
 1790 0345 08       		.uleb128 0x8
 1791 0346 08000000 		.4byte	.LVL33
 1792 034a EA080000 		.4byte	0x8ea
 1793 034e 08       		.uleb128 0x8
 1794 034f 1C000000 		.4byte	.LVL35
 1795 0353 F5080000 		.4byte	0x8f5
 1796 0357 00       		.byte	0
 1797 0358 06       		.uleb128 0x6
 1798 0359 72000000 		.4byte	.LASF36
 1799 035d 01       		.byte	0x1
 1800 035e 6702     		.2byte	0x267
 1801 0360 00000000 		.4byte	.LFB13
 1802 0364 10000000 		.4byte	.LFE13-.LFB13
 1803 0368 01       		.uleb128 0x1
 1804 0369 9C       		.byte	0x9c
 1805 036a 7F030000 		.4byte	0x37f
 1806 036e 09       		.uleb128 0x9
 1807 036f 00000000 		.4byte	.LASF37
 1808 0373 01       		.byte	0x1
 1809 0374 6702     		.2byte	0x267
 1810 0376 77000000 		.4byte	0x77
 1811 037a 2C020000 		.4byte	.LLST18
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 58


 1812 037e 00       		.byte	0
 1813 037f 0A       		.uleb128 0xa
 1814 0380 83000000 		.4byte	.LASF42
 1815 0384 01       		.byte	0x1
 1816 0385 7B02     		.2byte	0x27b
 1817 0387 77000000 		.4byte	0x77
 1818 038b 00000000 		.4byte	.LFB14
 1819 038f 10000000 		.4byte	.LFE14-.LFB14
 1820 0393 01       		.uleb128 0x1
 1821 0394 9C       		.byte	0x9c
 1822 0395 06       		.uleb128 0x6
 1823 0396 23050000 		.4byte	.LASF38
 1824 039a 01       		.byte	0x1
 1825 039b 9802     		.2byte	0x298
 1826 039d 00000000 		.4byte	.LFB15
 1827 03a1 28000000 		.4byte	.LFE15-.LFB15
 1828 03a5 01       		.uleb128 0x1
 1829 03a6 9C       		.byte	0x9c
 1830 03a7 DE030000 		.4byte	0x3de
 1831 03ab 09       		.uleb128 0x9
 1832 03ac 8A040000 		.4byte	.LASF39
 1833 03b0 01       		.byte	0x1
 1834 03b1 9802     		.2byte	0x298
 1835 03b3 77000000 		.4byte	0x77
 1836 03b7 4D020000 		.4byte	.LLST19
 1837 03bb 07       		.uleb128 0x7
 1838 03bc BE040000 		.4byte	.LASF18
 1839 03c0 01       		.byte	0x1
 1840 03c1 9A02     		.2byte	0x29a
 1841 03c3 6B000000 		.4byte	0x6b
 1842 03c7 79020000 		.4byte	.LLST20
 1843 03cb 08       		.uleb128 0x8
 1844 03cc 08000000 		.4byte	.LVL39
 1845 03d0 EA080000 		.4byte	0x8ea
 1846 03d4 08       		.uleb128 0x8
 1847 03d5 1C000000 		.4byte	.LVL41
 1848 03d9 F5080000 		.4byte	0x8f5
 1849 03dd 00       		.byte	0
 1850 03de 06       		.uleb128 0x6
 1851 03df 5F020000 		.4byte	.LASF40
 1852 03e3 01       		.byte	0x1
 1853 03e4 B502     		.2byte	0x2b5
 1854 03e6 00000000 		.4byte	.LFB16
 1855 03ea 10000000 		.4byte	.LFE16-.LFB16
 1856 03ee 01       		.uleb128 0x1
 1857 03ef 9C       		.byte	0x9c
 1858 03f0 05040000 		.4byte	0x405
 1859 03f4 09       		.uleb128 0x9
 1860 03f5 3A000000 		.4byte	.LASF41
 1861 03f9 01       		.byte	0x1
 1862 03fa B502     		.2byte	0x2b5
 1863 03fc 77000000 		.4byte	0x77
 1864 0400 8C020000 		.4byte	.LLST21
 1865 0404 00       		.byte	0
 1866 0405 0A       		.uleb128 0xa
 1867 0406 81020000 		.4byte	.LASF43
 1868 040a 01       		.byte	0x1
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 59


 1869 040b C902     		.2byte	0x2c9
 1870 040d 77000000 		.4byte	0x77
 1871 0411 00000000 		.4byte	.LFB17
 1872 0415 10000000 		.4byte	.LFE17-.LFB17
 1873 0419 01       		.uleb128 0x1
 1874 041a 9C       		.byte	0x9c
 1875 041b 06       		.uleb128 0x6
 1876 041c 31010000 		.4byte	.LASF44
 1877 0420 01       		.byte	0x1
 1878 0421 E302     		.2byte	0x2e3
 1879 0423 00000000 		.4byte	.LFB18
 1880 0427 24000000 		.4byte	.LFE18-.LFB18
 1881 042b 01       		.uleb128 0x1
 1882 042c 9C       		.byte	0x9c
 1883 042d 64040000 		.4byte	0x464
 1884 0431 09       		.uleb128 0x9
 1885 0432 01050000 		.4byte	.LASF45
 1886 0436 01       		.byte	0x1
 1887 0437 E302     		.2byte	0x2e3
 1888 0439 77000000 		.4byte	0x77
 1889 043d AD020000 		.4byte	.LLST22
 1890 0441 07       		.uleb128 0x7
 1891 0442 BE040000 		.4byte	.LASF18
 1892 0446 01       		.byte	0x1
 1893 0447 E502     		.2byte	0x2e5
 1894 0449 6B000000 		.4byte	0x6b
 1895 044d D9020000 		.4byte	.LLST23
 1896 0451 08       		.uleb128 0x8
 1897 0452 08000000 		.4byte	.LVL45
 1898 0456 EA080000 		.4byte	0x8ea
 1899 045a 08       		.uleb128 0x8
 1900 045b 1E000000 		.4byte	.LVL47
 1901 045f F5080000 		.4byte	0x8f5
 1902 0463 00       		.byte	0
 1903 0464 06       		.uleb128 0x6
 1904 0465 07040000 		.4byte	.LASF46
 1905 0469 01       		.byte	0x1
 1906 046a FE02     		.2byte	0x2fe
 1907 046c 00000000 		.4byte	.LFB19
 1908 0470 10000000 		.4byte	.LFE19-.LFB19
 1909 0474 01       		.uleb128 0x1
 1910 0475 9C       		.byte	0x9c
 1911 0476 8B040000 		.4byte	0x48b
 1912 047a 09       		.uleb128 0x9
 1913 047b A1040000 		.4byte	.LASF47
 1914 047f 01       		.byte	0x1
 1915 0480 FE02     		.2byte	0x2fe
 1916 0482 77000000 		.4byte	0x77
 1917 0486 EC020000 		.4byte	.LLST24
 1918 048a 00       		.byte	0
 1919 048b 0A       		.uleb128 0xa
 1920 048c BF020000 		.4byte	.LASF48
 1921 0490 01       		.byte	0x1
 1922 0491 1203     		.2byte	0x312
 1923 0493 77000000 		.4byte	0x77
 1924 0497 00000000 		.4byte	.LFB20
 1925 049b 10000000 		.4byte	.LFE20-.LFB20
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 60


 1926 049f 01       		.uleb128 0x1
 1927 04a0 9C       		.byte	0x9c
 1928 04a1 06       		.uleb128 0x6
 1929 04a2 7F030000 		.4byte	.LASF49
 1930 04a6 01       		.byte	0x1
 1931 04a7 2C03     		.2byte	0x32c
 1932 04a9 00000000 		.4byte	.LFB21
 1933 04ad 28000000 		.4byte	.LFE21-.LFB21
 1934 04b1 01       		.uleb128 0x1
 1935 04b2 9C       		.byte	0x9c
 1936 04b3 EA040000 		.4byte	0x4ea
 1937 04b7 09       		.uleb128 0x9
 1938 04b8 01050000 		.4byte	.LASF45
 1939 04bc 01       		.byte	0x1
 1940 04bd 2C03     		.2byte	0x32c
 1941 04bf 77000000 		.4byte	0x77
 1942 04c3 0D030000 		.4byte	.LLST25
 1943 04c7 07       		.uleb128 0x7
 1944 04c8 BE040000 		.4byte	.LASF18
 1945 04cc 01       		.byte	0x1
 1946 04cd 2E03     		.2byte	0x32e
 1947 04cf 6B000000 		.4byte	0x6b
 1948 04d3 39030000 		.4byte	.LLST26
 1949 04d7 08       		.uleb128 0x8
 1950 04d8 08000000 		.4byte	.LVL51
 1951 04dc EA080000 		.4byte	0x8ea
 1952 04e0 08       		.uleb128 0x8
 1953 04e1 22000000 		.4byte	.LVL53
 1954 04e5 F5080000 		.4byte	0x8f5
 1955 04e9 00       		.byte	0
 1956 04ea 06       		.uleb128 0x6
 1957 04eb 4E020000 		.4byte	.LASF50
 1958 04ef 01       		.byte	0x1
 1959 04f0 5103     		.2byte	0x351
 1960 04f2 00000000 		.4byte	.LFB22
 1961 04f6 10000000 		.4byte	.LFE22-.LFB22
 1962 04fa 01       		.uleb128 0x1
 1963 04fb 9C       		.byte	0x9c
 1964 04fc 11050000 		.4byte	0x511
 1965 0500 09       		.uleb128 0x9
 1966 0501 A8020000 		.4byte	.LASF51
 1967 0505 01       		.byte	0x1
 1968 0506 5103     		.2byte	0x351
 1969 0508 77000000 		.4byte	0x77
 1970 050c 4C030000 		.4byte	.LLST27
 1971 0510 00       		.byte	0
 1972 0511 0A       		.uleb128 0xa
 1973 0512 36050000 		.4byte	.LASF52
 1974 0516 01       		.byte	0x1
 1975 0517 8403     		.2byte	0x384
 1976 0519 77000000 		.4byte	0x77
 1977 051d 00000000 		.4byte	.LFB23
 1978 0521 10000000 		.4byte	.LFE23-.LFB23
 1979 0525 01       		.uleb128 0x1
 1980 0526 9C       		.byte	0x9c
 1981 0527 06       		.uleb128 0x6
 1982 0528 AD000000 		.4byte	.LASF53
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 61


 1983 052c 01       		.byte	0x1
 1984 052d BA03     		.2byte	0x3ba
 1985 052f 00000000 		.4byte	.LFB24
 1986 0533 10000000 		.4byte	.LFE24-.LFB24
 1987 0537 01       		.uleb128 0x1
 1988 0538 9C       		.byte	0x9c
 1989 0539 4E050000 		.4byte	0x54e
 1990 053d 09       		.uleb128 0x9
 1991 053e 96040000 		.4byte	.LASF54
 1992 0542 01       		.byte	0x1
 1993 0543 BA03     		.2byte	0x3ba
 1994 0545 77000000 		.4byte	0x77
 1995 0549 6D030000 		.4byte	.LLST28
 1996 054d 00       		.byte	0
 1997 054e 0A       		.uleb128 0xa
 1998 054f 1E010000 		.4byte	.LASF55
 1999 0553 01       		.byte	0x1
 2000 0554 E803     		.2byte	0x3e8
 2001 0556 77000000 		.4byte	0x77
 2002 055a 00000000 		.4byte	.LFB25
 2003 055e 10000000 		.4byte	.LFE25-.LFB25
 2004 0562 01       		.uleb128 0x1
 2005 0563 9C       		.byte	0x9c
 2006 0564 0A       		.uleb128 0xa
 2007 0565 6F030000 		.4byte	.LASF56
 2008 0569 01       		.byte	0x1
 2009 056a 1604     		.2byte	0x416
 2010 056c 77000000 		.4byte	0x77
 2011 0570 00000000 		.4byte	.LFB26
 2012 0574 10000000 		.4byte	.LFE26-.LFB26
 2013 0578 01       		.uleb128 0x1
 2014 0579 9C       		.byte	0x9c
 2015 057a 0A       		.uleb128 0xa
 2016 057b AB040000 		.4byte	.LASF57
 2017 057f 01       		.byte	0x1
 2018 0580 2B04     		.2byte	0x42b
 2019 0582 77000000 		.4byte	0x77
 2020 0586 00000000 		.4byte	.LFB27
 2021 058a 10000000 		.4byte	.LFE27-.LFB27
 2022 058e 01       		.uleb128 0x1
 2023 058f 9C       		.byte	0x9c
 2024 0590 06       		.uleb128 0x6
 2025 0591 58000000 		.4byte	.LASF58
 2026 0595 01       		.byte	0x1
 2027 0596 4604     		.2byte	0x446
 2028 0598 00000000 		.4byte	.LFB28
 2029 059c 24000000 		.4byte	.LFE28-.LFB28
 2030 05a0 01       		.uleb128 0x1
 2031 05a1 9C       		.byte	0x9c
 2032 05a2 D9050000 		.4byte	0x5d9
 2033 05a6 09       		.uleb128 0x9
 2034 05a7 76010000 		.4byte	.LASF59
 2035 05ab 01       		.byte	0x1
 2036 05ac 4604     		.2byte	0x446
 2037 05ae 77000000 		.4byte	0x77
 2038 05b2 8E030000 		.4byte	.LLST29
 2039 05b6 07       		.uleb128 0x7
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 62


 2040 05b7 BE040000 		.4byte	.LASF18
 2041 05bb 01       		.byte	0x1
 2042 05bc 4804     		.2byte	0x448
 2043 05be 6B000000 		.4byte	0x6b
 2044 05c2 BA030000 		.4byte	.LLST30
 2045 05c6 08       		.uleb128 0x8
 2046 05c7 08000000 		.4byte	.LVL59
 2047 05cb EA080000 		.4byte	0x8ea
 2048 05cf 08       		.uleb128 0x8
 2049 05d0 1C000000 		.4byte	.LVL61
 2050 05d4 F5080000 		.4byte	0x8f5
 2051 05d8 00       		.byte	0
 2052 05d9 06       		.uleb128 0x6
 2053 05da 78040000 		.4byte	.LASF60
 2054 05de 01       		.byte	0x1
 2055 05df 6704     		.2byte	0x467
 2056 05e1 00000000 		.4byte	.LFB29
 2057 05e5 24000000 		.4byte	.LFE29-.LFB29
 2058 05e9 01       		.uleb128 0x1
 2059 05ea 9C       		.byte	0x9c
 2060 05eb 22060000 		.4byte	0x622
 2061 05ef 09       		.uleb128 0x9
 2062 05f0 76010000 		.4byte	.LASF59
 2063 05f4 01       		.byte	0x1
 2064 05f5 6704     		.2byte	0x467
 2065 05f7 77000000 		.4byte	0x77
 2066 05fb CD030000 		.4byte	.LLST31
 2067 05ff 07       		.uleb128 0x7
 2068 0600 BE040000 		.4byte	.LASF18
 2069 0604 01       		.byte	0x1
 2070 0605 6904     		.2byte	0x469
 2071 0607 6B000000 		.4byte	0x6b
 2072 060b F9030000 		.4byte	.LLST32
 2073 060f 08       		.uleb128 0x8
 2074 0610 08000000 		.4byte	.LVL63
 2075 0614 EA080000 		.4byte	0x8ea
 2076 0618 08       		.uleb128 0x8
 2077 0619 1E000000 		.4byte	.LVL65
 2078 061d F5080000 		.4byte	0x8f5
 2079 0621 00       		.byte	0
 2080 0622 06       		.uleb128 0x6
 2081 0623 65010000 		.4byte	.LASF61
 2082 0627 01       		.byte	0x1
 2083 0628 8804     		.2byte	0x488
 2084 062a 00000000 		.4byte	.LFB30
 2085 062e 28000000 		.4byte	.LFE30-.LFB30
 2086 0632 01       		.uleb128 0x1
 2087 0633 9C       		.byte	0x9c
 2088 0634 6B060000 		.4byte	0x66b
 2089 0638 09       		.uleb128 0x9
 2090 0639 76010000 		.4byte	.LASF59
 2091 063d 01       		.byte	0x1
 2092 063e 8804     		.2byte	0x488
 2093 0640 77000000 		.4byte	0x77
 2094 0644 0C040000 		.4byte	.LLST33
 2095 0648 07       		.uleb128 0x7
 2096 0649 BE040000 		.4byte	.LASF18
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 63


 2097 064d 01       		.byte	0x1
 2098 064e 8A04     		.2byte	0x48a
 2099 0650 6B000000 		.4byte	0x6b
 2100 0654 38040000 		.4byte	.LLST34
 2101 0658 08       		.uleb128 0x8
 2102 0659 08000000 		.4byte	.LVL67
 2103 065d EA080000 		.4byte	0x8ea
 2104 0661 08       		.uleb128 0x8
 2105 0662 1E000000 		.4byte	.LVL69
 2106 0666 F5080000 		.4byte	0x8f5
 2107 066a 00       		.byte	0
 2108 066b 06       		.uleb128 0x6
 2109 066c 9F010000 		.4byte	.LASF62
 2110 0670 01       		.byte	0x1
 2111 0671 A804     		.2byte	0x4a8
 2112 0673 00000000 		.4byte	.LFB31
 2113 0677 24000000 		.4byte	.LFE31-.LFB31
 2114 067b 01       		.uleb128 0x1
 2115 067c 9C       		.byte	0x9c
 2116 067d B4060000 		.4byte	0x6b4
 2117 0681 09       		.uleb128 0x9
 2118 0682 76010000 		.4byte	.LASF59
 2119 0686 01       		.byte	0x1
 2120 0687 A804     		.2byte	0x4a8
 2121 0689 77000000 		.4byte	0x77
 2122 068d 4B040000 		.4byte	.LLST35
 2123 0691 07       		.uleb128 0x7
 2124 0692 BE040000 		.4byte	.LASF18
 2125 0696 01       		.byte	0x1
 2126 0697 AA04     		.2byte	0x4aa
 2127 0699 6B000000 		.4byte	0x6b
 2128 069d 77040000 		.4byte	.LLST36
 2129 06a1 08       		.uleb128 0x8
 2130 06a2 08000000 		.4byte	.LVL71
 2131 06a6 EA080000 		.4byte	0x8ea
 2132 06aa 08       		.uleb128 0x8
 2133 06ab 1E000000 		.4byte	.LVL73
 2134 06af F5080000 		.4byte	0x8f5
 2135 06b3 00       		.byte	0
 2136 06b4 06       		.uleb128 0x6
 2137 06b5 CF040000 		.4byte	.LASF63
 2138 06b9 01       		.byte	0x1
 2139 06ba C904     		.2byte	0x4c9
 2140 06bc 00000000 		.4byte	.LFB32
 2141 06c0 24000000 		.4byte	.LFE32-.LFB32
 2142 06c4 01       		.uleb128 0x1
 2143 06c5 9C       		.byte	0x9c
 2144 06c6 FD060000 		.4byte	0x6fd
 2145 06ca 09       		.uleb128 0x9
 2146 06cb 76010000 		.4byte	.LASF59
 2147 06cf 01       		.byte	0x1
 2148 06d0 C904     		.2byte	0x4c9
 2149 06d2 77000000 		.4byte	0x77
 2150 06d6 8A040000 		.4byte	.LLST37
 2151 06da 07       		.uleb128 0x7
 2152 06db BE040000 		.4byte	.LASF18
 2153 06df 01       		.byte	0x1
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 64


 2154 06e0 CB04     		.2byte	0x4cb
 2155 06e2 6B000000 		.4byte	0x6b
 2156 06e6 B6040000 		.4byte	.LLST38
 2157 06ea 08       		.uleb128 0x8
 2158 06eb 08000000 		.4byte	.LVL75
 2159 06ef EA080000 		.4byte	0x8ea
 2160 06f3 08       		.uleb128 0x8
 2161 06f4 1E000000 		.4byte	.LVL77
 2162 06f8 F5080000 		.4byte	0x8f5
 2163 06fc 00       		.byte	0
 2164 06fd 06       		.uleb128 0x6
 2165 06fe 3B020000 		.4byte	.LASF64
 2166 0702 01       		.byte	0x1
 2167 0703 F104     		.2byte	0x4f1
 2168 0705 00000000 		.4byte	.LFB33
 2169 0709 1C000000 		.4byte	.LFE33-.LFB33
 2170 070d 01       		.uleb128 0x1
 2171 070e 9C       		.byte	0x9c
 2172 070f 56070000 		.4byte	0x756
 2173 0713 09       		.uleb128 0x9
 2174 0714 82010000 		.4byte	.LASF35
 2175 0718 01       		.byte	0x1
 2176 0719 F104     		.2byte	0x4f1
 2177 071b 77000000 		.4byte	0x77
 2178 071f C9040000 		.4byte	.LLST39
 2179 0723 09       		.uleb128 0x9
 2180 0724 CF010000 		.4byte	.LASF65
 2181 0728 01       		.byte	0x1
 2182 0729 F104     		.2byte	0x4f1
 2183 072b 77000000 		.4byte	0x77
 2184 072f F5040000 		.4byte	.LLST40
 2185 0733 07       		.uleb128 0x7
 2186 0734 BE040000 		.4byte	.LASF18
 2187 0738 01       		.byte	0x1
 2188 0739 F304     		.2byte	0x4f3
 2189 073b 6B000000 		.4byte	0x6b
 2190 073f 21050000 		.4byte	.LLST41
 2191 0743 08       		.uleb128 0x8
 2192 0744 0A000000 		.4byte	.LVL79
 2193 0748 EA080000 		.4byte	0x8ea
 2194 074c 08       		.uleb128 0x8
 2195 074d 14000000 		.4byte	.LVL81
 2196 0751 F5080000 		.4byte	0x8f5
 2197 0755 00       		.byte	0
 2198 0756 0B       		.uleb128 0xb
 2199 0757 06000000 		.4byte	.LASF66
 2200 075b 01       		.byte	0x1
 2201 075c B1       		.byte	0xb1
 2202 075d 00000000 		.4byte	.LFB1
 2203 0761 24000000 		.4byte	.LFE1-.LFB1
 2204 0765 01       		.uleb128 0x1
 2205 0766 9C       		.byte	0x9c
 2206 0767 A1070000 		.4byte	0x7a1
 2207 076b 0C       		.uleb128 0xc
 2208 076c BE040000 		.4byte	.LASF18
 2209 0770 01       		.byte	0x1
 2210 0771 B3       		.byte	0xb3
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 65


 2211 0772 6B000000 		.4byte	0x6b
 2212 0776 34050000 		.4byte	.LLST42
 2213 077a 08       		.uleb128 0x8
 2214 077b 06000000 		.4byte	.LVL83
 2215 077f EA080000 		.4byte	0x8ea
 2216 0783 08       		.uleb128 0x8
 2217 0784 14000000 		.4byte	.LVL84
 2218 0788 F5080000 		.4byte	0x8f5
 2219 078c 0D       		.uleb128 0xd
 2220 078d 1C000000 		.4byte	.LVL85
 2221 0791 FD060000 		.4byte	0x6fd
 2222 0795 0E       		.uleb128 0xe
 2223 0796 01       		.uleb128 0x1
 2224 0797 51       		.byte	0x51
 2225 0798 01       		.uleb128 0x1
 2226 0799 48       		.byte	0x48
 2227 079a 0E       		.uleb128 0xe
 2228 079b 01       		.uleb128 0x1
 2229 079c 50       		.byte	0x50
 2230 079d 01       		.uleb128 0x1
 2231 079e 31       		.byte	0x31
 2232 079f 00       		.byte	0
 2233 07a0 00       		.byte	0
 2234 07a1 0A       		.uleb128 0xa
 2235 07a2 87010000 		.4byte	.LASF67
 2236 07a6 01       		.byte	0x1
 2237 07a7 0E05     		.2byte	0x50e
 2238 07a9 77000000 		.4byte	0x77
 2239 07ad 00000000 		.4byte	.LFB34
 2240 07b1 14000000 		.4byte	.LFE34-.LFB34
 2241 07b5 01       		.uleb128 0x1
 2242 07b6 9C       		.byte	0x9c
 2243 07b7 06       		.uleb128 0x6
 2244 07b8 C1000000 		.4byte	.LASF68
 2245 07bc 01       		.byte	0x1
 2246 07bd 2705     		.2byte	0x527
 2247 07bf 00000000 		.4byte	.LFB35
 2248 07c3 0C000000 		.4byte	.LFE35-.LFB35
 2249 07c7 01       		.uleb128 0x1
 2250 07c8 9C       		.byte	0x9c
 2251 07c9 DC070000 		.4byte	0x7dc
 2252 07cd 0F       		.uleb128 0xf
 2253 07ce EF030000 		.4byte	.LASF69
 2254 07d2 01       		.byte	0x1
 2255 07d3 2705     		.2byte	0x527
 2256 07d5 77000000 		.4byte	0x77
 2257 07d9 01       		.uleb128 0x1
 2258 07da 50       		.byte	0x50
 2259 07db 00       		.byte	0
 2260 07dc 0B       		.uleb128 0xb
 2261 07dd 9F030000 		.4byte	.LASF70
 2262 07e1 01       		.byte	0x1
 2263 07e2 26       		.byte	0x26
 2264 07e3 00000000 		.4byte	.LFB0
 2265 07e7 44000000 		.4byte	.LFE0-.LFB0
 2266 07eb 01       		.uleb128 0x1
 2267 07ec 9C       		.byte	0x9c
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 66


 2268 07ed 3B080000 		.4byte	0x83b
 2269 07f1 10       		.uleb128 0x10
 2270 07f2 14000000 		.4byte	.LVL87
 2271 07f6 58030000 		.4byte	0x358
 2272 07fa 04080000 		.4byte	0x804
 2273 07fe 0E       		.uleb128 0xe
 2274 07ff 01       		.uleb128 0x1
 2275 0800 50       		.byte	0x50
 2276 0801 01       		.uleb128 0x1
 2277 0802 30       		.byte	0x30
 2278 0803 00       		.byte	0
 2279 0804 10       		.uleb128 0x10
 2280 0805 24000000 		.4byte	.LVL88
 2281 0809 B7070000 		.4byte	0x7b7
 2282 080d 17080000 		.4byte	0x817
 2283 0811 0E       		.uleb128 0xe
 2284 0812 01       		.uleb128 0x1
 2285 0813 50       		.byte	0x50
 2286 0814 01       		.uleb128 0x1
 2287 0815 31       		.byte	0x31
 2288 0816 00       		.byte	0
 2289 0817 10       		.uleb128 0x10
 2290 0818 30000000 		.4byte	.LVL89
 2291 081c DE030000 		.4byte	0x3de
 2292 0820 2B080000 		.4byte	0x82b
 2293 0824 0E       		.uleb128 0xe
 2294 0825 01       		.uleb128 0x1
 2295 0826 50       		.byte	0x50
 2296 0827 02       		.uleb128 0x2
 2297 0828 08       		.byte	0x8
 2298 0829 FF       		.byte	0xff
 2299 082a 00       		.byte	0
 2300 082b 0D       		.uleb128 0xd
 2301 082c 36000000 		.4byte	.LVL90
 2302 0830 EA040000 		.4byte	0x4ea
 2303 0834 0E       		.uleb128 0xe
 2304 0835 01       		.uleb128 0x1
 2305 0836 50       		.byte	0x50
 2306 0837 01       		.uleb128 0x1
 2307 0838 30       		.byte	0x30
 2308 0839 00       		.byte	0
 2309 083a 00       		.byte	0
 2310 083b 0B       		.uleb128 0xb
 2311 083c FD030000 		.4byte	.LASF71
 2312 0840 01       		.byte	0x1
 2313 0841 E6       		.byte	0xe6
 2314 0842 00000000 		.4byte	.LFB2
 2315 0846 20000000 		.4byte	.LFE2-.LFB2
 2316 084a 01       		.uleb128 0x1
 2317 084b 9C       		.byte	0x9c
 2318 084c 63080000 		.4byte	0x863
 2319 0850 08       		.uleb128 0x8
 2320 0851 0E000000 		.4byte	.LVL91
 2321 0855 DC070000 		.4byte	0x7dc
 2322 0859 08       		.uleb128 0x8
 2323 085a 18000000 		.4byte	.LVL92
 2324 085e 56070000 		.4byte	0x756
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 67


 2325 0862 00       		.byte	0
 2326 0863 0A       		.uleb128 0xa
 2327 0864 D2030000 		.4byte	.LASF72
 2328 0868 01       		.byte	0x1
 2329 0869 3E05     		.2byte	0x53e
 2330 086b 77000000 		.4byte	0x77
 2331 086f 00000000 		.4byte	.LFB36
 2332 0873 0C000000 		.4byte	.LFE36-.LFB36
 2333 0877 01       		.uleb128 0x1
 2334 0878 9C       		.byte	0x9c
 2335 0879 0A       		.uleb128 0xa
 2336 087a 0C050000 		.4byte	.LASF73
 2337 087e 01       		.byte	0x1
 2338 087f 5505     		.2byte	0x555
 2339 0881 77000000 		.4byte	0x77
 2340 0885 00000000 		.4byte	.LFB37
 2341 0889 0C000000 		.4byte	.LFE37-.LFB37
 2342 088d 01       		.uleb128 0x1
 2343 088e 9C       		.byte	0x9c
 2344 088f 06       		.uleb128 0x6
 2345 0890 D6000000 		.4byte	.LASF74
 2346 0894 01       		.byte	0x1
 2347 0895 6C05     		.2byte	0x56c
 2348 0897 00000000 		.4byte	.LFB38
 2349 089b 0C000000 		.4byte	.LFE38-.LFB38
 2350 089f 01       		.uleb128 0x1
 2351 08a0 9C       		.byte	0x9c
 2352 08a1 B4080000 		.4byte	0x8b4
 2353 08a5 0F       		.uleb128 0xf
 2354 08a6 EF030000 		.4byte	.LASF69
 2355 08aa 01       		.byte	0x1
 2356 08ab 6C05     		.2byte	0x56c
 2357 08ad 77000000 		.4byte	0x77
 2358 08b1 01       		.uleb128 0x1
 2359 08b2 50       		.byte	0x50
 2360 08b3 00       		.byte	0
 2361 08b4 06       		.uleb128 0x6
 2362 08b5 32040000 		.4byte	.LASF75
 2363 08b9 01       		.byte	0x1
 2364 08ba 8305     		.2byte	0x583
 2365 08bc 00000000 		.4byte	.LFB39
 2366 08c0 0C000000 		.4byte	.LFE39-.LFB39
 2367 08c4 01       		.uleb128 0x1
 2368 08c5 9C       		.byte	0x9c
 2369 08c6 D9080000 		.4byte	0x8d9
 2370 08ca 0F       		.uleb128 0xf
 2371 08cb EF030000 		.4byte	.LASF69
 2372 08cf 01       		.byte	0x1
 2373 08d0 8305     		.2byte	0x583
 2374 08d2 77000000 		.4byte	0x77
 2375 08d6 01       		.uleb128 0x1
 2376 08d7 50       		.byte	0x50
 2377 08d8 00       		.byte	0
 2378 08d9 11       		.uleb128 0x11
 2379 08da 75020000 		.4byte	.LASF79
 2380 08de 01       		.byte	0x1
 2381 08df 15       		.byte	0x15
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 68


 2382 08e0 6B000000 		.4byte	0x6b
 2383 08e4 05       		.uleb128 0x5
 2384 08e5 03       		.byte	0x3
 2385 08e6 00000000 		.4byte	PWM_initVar
 2386 08ea 12       		.uleb128 0x12
 2387 08eb F2010000 		.4byte	.LASF80
 2388 08ef 03       		.byte	0x3
 2389 08f0 E3       		.byte	0xe3
 2390 08f1 6B000000 		.4byte	0x6b
 2391 08f5 13       		.uleb128 0x13
 2392 08f6 11000000 		.4byte	.LASF81
 2393 08fa 03       		.byte	0x3
 2394 08fb E4       		.byte	0xe4
 2395 08fc 14       		.uleb128 0x14
 2396 08fd 6B000000 		.4byte	0x6b
 2397 0901 00       		.byte	0
 2398 0902 00       		.byte	0
 2399              		.section	.debug_abbrev,"",%progbits
 2400              	.Ldebug_abbrev0:
 2401 0000 01       		.uleb128 0x1
 2402 0001 11       		.uleb128 0x11
 2403 0002 01       		.byte	0x1
 2404 0003 25       		.uleb128 0x25
 2405 0004 0E       		.uleb128 0xe
 2406 0005 13       		.uleb128 0x13
 2407 0006 0B       		.uleb128 0xb
 2408 0007 03       		.uleb128 0x3
 2409 0008 0E       		.uleb128 0xe
 2410 0009 1B       		.uleb128 0x1b
 2411 000a 0E       		.uleb128 0xe
 2412 000b 55       		.uleb128 0x55
 2413 000c 17       		.uleb128 0x17
 2414 000d 11       		.uleb128 0x11
 2415 000e 01       		.uleb128 0x1
 2416 000f 10       		.uleb128 0x10
 2417 0010 17       		.uleb128 0x17
 2418 0011 00       		.byte	0
 2419 0012 00       		.byte	0
 2420 0013 02       		.uleb128 0x2
 2421 0014 24       		.uleb128 0x24
 2422 0015 00       		.byte	0
 2423 0016 0B       		.uleb128 0xb
 2424 0017 0B       		.uleb128 0xb
 2425 0018 3E       		.uleb128 0x3e
 2426 0019 0B       		.uleb128 0xb
 2427 001a 03       		.uleb128 0x3
 2428 001b 0E       		.uleb128 0xe
 2429 001c 00       		.byte	0
 2430 001d 00       		.byte	0
 2431 001e 03       		.uleb128 0x3
 2432 001f 24       		.uleb128 0x24
 2433 0020 00       		.byte	0
 2434 0021 0B       		.uleb128 0xb
 2435 0022 0B       		.uleb128 0xb
 2436 0023 3E       		.uleb128 0x3e
 2437 0024 0B       		.uleb128 0xb
 2438 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 69


 2439 0026 08       		.uleb128 0x8
 2440 0027 00       		.byte	0
 2441 0028 00       		.byte	0
 2442 0029 04       		.uleb128 0x4
 2443 002a 16       		.uleb128 0x16
 2444 002b 00       		.byte	0
 2445 002c 03       		.uleb128 0x3
 2446 002d 0E       		.uleb128 0xe
 2447 002e 3A       		.uleb128 0x3a
 2448 002f 0B       		.uleb128 0xb
 2449 0030 3B       		.uleb128 0x3b
 2450 0031 05       		.uleb128 0x5
 2451 0032 49       		.uleb128 0x49
 2452 0033 13       		.uleb128 0x13
 2453 0034 00       		.byte	0
 2454 0035 00       		.byte	0
 2455 0036 05       		.uleb128 0x5
 2456 0037 35       		.uleb128 0x35
 2457 0038 00       		.byte	0
 2458 0039 49       		.uleb128 0x49
 2459 003a 13       		.uleb128 0x13
 2460 003b 00       		.byte	0
 2461 003c 00       		.byte	0
 2462 003d 06       		.uleb128 0x6
 2463 003e 2E       		.uleb128 0x2e
 2464 003f 01       		.byte	0x1
 2465 0040 3F       		.uleb128 0x3f
 2466 0041 19       		.uleb128 0x19
 2467 0042 03       		.uleb128 0x3
 2468 0043 0E       		.uleb128 0xe
 2469 0044 3A       		.uleb128 0x3a
 2470 0045 0B       		.uleb128 0xb
 2471 0046 3B       		.uleb128 0x3b
 2472 0047 05       		.uleb128 0x5
 2473 0048 27       		.uleb128 0x27
 2474 0049 19       		.uleb128 0x19
 2475 004a 11       		.uleb128 0x11
 2476 004b 01       		.uleb128 0x1
 2477 004c 12       		.uleb128 0x12
 2478 004d 06       		.uleb128 0x6
 2479 004e 40       		.uleb128 0x40
 2480 004f 18       		.uleb128 0x18
 2481 0050 9742     		.uleb128 0x2117
 2482 0052 19       		.uleb128 0x19
 2483 0053 01       		.uleb128 0x1
 2484 0054 13       		.uleb128 0x13
 2485 0055 00       		.byte	0
 2486 0056 00       		.byte	0
 2487 0057 07       		.uleb128 0x7
 2488 0058 34       		.uleb128 0x34
 2489 0059 00       		.byte	0
 2490 005a 03       		.uleb128 0x3
 2491 005b 0E       		.uleb128 0xe
 2492 005c 3A       		.uleb128 0x3a
 2493 005d 0B       		.uleb128 0xb
 2494 005e 3B       		.uleb128 0x3b
 2495 005f 05       		.uleb128 0x5
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 70


 2496 0060 49       		.uleb128 0x49
 2497 0061 13       		.uleb128 0x13
 2498 0062 02       		.uleb128 0x2
 2499 0063 17       		.uleb128 0x17
 2500 0064 00       		.byte	0
 2501 0065 00       		.byte	0
 2502 0066 08       		.uleb128 0x8
 2503 0067 898201   		.uleb128 0x4109
 2504 006a 00       		.byte	0
 2505 006b 11       		.uleb128 0x11
 2506 006c 01       		.uleb128 0x1
 2507 006d 31       		.uleb128 0x31
 2508 006e 13       		.uleb128 0x13
 2509 006f 00       		.byte	0
 2510 0070 00       		.byte	0
 2511 0071 09       		.uleb128 0x9
 2512 0072 05       		.uleb128 0x5
 2513 0073 00       		.byte	0
 2514 0074 03       		.uleb128 0x3
 2515 0075 0E       		.uleb128 0xe
 2516 0076 3A       		.uleb128 0x3a
 2517 0077 0B       		.uleb128 0xb
 2518 0078 3B       		.uleb128 0x3b
 2519 0079 05       		.uleb128 0x5
 2520 007a 49       		.uleb128 0x49
 2521 007b 13       		.uleb128 0x13
 2522 007c 02       		.uleb128 0x2
 2523 007d 17       		.uleb128 0x17
 2524 007e 00       		.byte	0
 2525 007f 00       		.byte	0
 2526 0080 0A       		.uleb128 0xa
 2527 0081 2E       		.uleb128 0x2e
 2528 0082 00       		.byte	0
 2529 0083 3F       		.uleb128 0x3f
 2530 0084 19       		.uleb128 0x19
 2531 0085 03       		.uleb128 0x3
 2532 0086 0E       		.uleb128 0xe
 2533 0087 3A       		.uleb128 0x3a
 2534 0088 0B       		.uleb128 0xb
 2535 0089 3B       		.uleb128 0x3b
 2536 008a 05       		.uleb128 0x5
 2537 008b 27       		.uleb128 0x27
 2538 008c 19       		.uleb128 0x19
 2539 008d 49       		.uleb128 0x49
 2540 008e 13       		.uleb128 0x13
 2541 008f 11       		.uleb128 0x11
 2542 0090 01       		.uleb128 0x1
 2543 0091 12       		.uleb128 0x12
 2544 0092 06       		.uleb128 0x6
 2545 0093 40       		.uleb128 0x40
 2546 0094 18       		.uleb128 0x18
 2547 0095 9742     		.uleb128 0x2117
 2548 0097 19       		.uleb128 0x19
 2549 0098 00       		.byte	0
 2550 0099 00       		.byte	0
 2551 009a 0B       		.uleb128 0xb
 2552 009b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 71


 2553 009c 01       		.byte	0x1
 2554 009d 3F       		.uleb128 0x3f
 2555 009e 19       		.uleb128 0x19
 2556 009f 03       		.uleb128 0x3
 2557 00a0 0E       		.uleb128 0xe
 2558 00a1 3A       		.uleb128 0x3a
 2559 00a2 0B       		.uleb128 0xb
 2560 00a3 3B       		.uleb128 0x3b
 2561 00a4 0B       		.uleb128 0xb
 2562 00a5 27       		.uleb128 0x27
 2563 00a6 19       		.uleb128 0x19
 2564 00a7 11       		.uleb128 0x11
 2565 00a8 01       		.uleb128 0x1
 2566 00a9 12       		.uleb128 0x12
 2567 00aa 06       		.uleb128 0x6
 2568 00ab 40       		.uleb128 0x40
 2569 00ac 18       		.uleb128 0x18
 2570 00ad 9742     		.uleb128 0x2117
 2571 00af 19       		.uleb128 0x19
 2572 00b0 01       		.uleb128 0x1
 2573 00b1 13       		.uleb128 0x13
 2574 00b2 00       		.byte	0
 2575 00b3 00       		.byte	0
 2576 00b4 0C       		.uleb128 0xc
 2577 00b5 34       		.uleb128 0x34
 2578 00b6 00       		.byte	0
 2579 00b7 03       		.uleb128 0x3
 2580 00b8 0E       		.uleb128 0xe
 2581 00b9 3A       		.uleb128 0x3a
 2582 00ba 0B       		.uleb128 0xb
 2583 00bb 3B       		.uleb128 0x3b
 2584 00bc 0B       		.uleb128 0xb
 2585 00bd 49       		.uleb128 0x49
 2586 00be 13       		.uleb128 0x13
 2587 00bf 02       		.uleb128 0x2
 2588 00c0 17       		.uleb128 0x17
 2589 00c1 00       		.byte	0
 2590 00c2 00       		.byte	0
 2591 00c3 0D       		.uleb128 0xd
 2592 00c4 898201   		.uleb128 0x4109
 2593 00c7 01       		.byte	0x1
 2594 00c8 11       		.uleb128 0x11
 2595 00c9 01       		.uleb128 0x1
 2596 00ca 31       		.uleb128 0x31
 2597 00cb 13       		.uleb128 0x13
 2598 00cc 00       		.byte	0
 2599 00cd 00       		.byte	0
 2600 00ce 0E       		.uleb128 0xe
 2601 00cf 8A8201   		.uleb128 0x410a
 2602 00d2 00       		.byte	0
 2603 00d3 02       		.uleb128 0x2
 2604 00d4 18       		.uleb128 0x18
 2605 00d5 9142     		.uleb128 0x2111
 2606 00d7 18       		.uleb128 0x18
 2607 00d8 00       		.byte	0
 2608 00d9 00       		.byte	0
 2609 00da 0F       		.uleb128 0xf
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 72


 2610 00db 05       		.uleb128 0x5
 2611 00dc 00       		.byte	0
 2612 00dd 03       		.uleb128 0x3
 2613 00de 0E       		.uleb128 0xe
 2614 00df 3A       		.uleb128 0x3a
 2615 00e0 0B       		.uleb128 0xb
 2616 00e1 3B       		.uleb128 0x3b
 2617 00e2 05       		.uleb128 0x5
 2618 00e3 49       		.uleb128 0x49
 2619 00e4 13       		.uleb128 0x13
 2620 00e5 02       		.uleb128 0x2
 2621 00e6 18       		.uleb128 0x18
 2622 00e7 00       		.byte	0
 2623 00e8 00       		.byte	0
 2624 00e9 10       		.uleb128 0x10
 2625 00ea 898201   		.uleb128 0x4109
 2626 00ed 01       		.byte	0x1
 2627 00ee 11       		.uleb128 0x11
 2628 00ef 01       		.uleb128 0x1
 2629 00f0 31       		.uleb128 0x31
 2630 00f1 13       		.uleb128 0x13
 2631 00f2 01       		.uleb128 0x1
 2632 00f3 13       		.uleb128 0x13
 2633 00f4 00       		.byte	0
 2634 00f5 00       		.byte	0
 2635 00f6 11       		.uleb128 0x11
 2636 00f7 34       		.uleb128 0x34
 2637 00f8 00       		.byte	0
 2638 00f9 03       		.uleb128 0x3
 2639 00fa 0E       		.uleb128 0xe
 2640 00fb 3A       		.uleb128 0x3a
 2641 00fc 0B       		.uleb128 0xb
 2642 00fd 3B       		.uleb128 0x3b
 2643 00fe 0B       		.uleb128 0xb
 2644 00ff 49       		.uleb128 0x49
 2645 0100 13       		.uleb128 0x13
 2646 0101 3F       		.uleb128 0x3f
 2647 0102 19       		.uleb128 0x19
 2648 0103 02       		.uleb128 0x2
 2649 0104 18       		.uleb128 0x18
 2650 0105 00       		.byte	0
 2651 0106 00       		.byte	0
 2652 0107 12       		.uleb128 0x12
 2653 0108 2E       		.uleb128 0x2e
 2654 0109 00       		.byte	0
 2655 010a 3F       		.uleb128 0x3f
 2656 010b 19       		.uleb128 0x19
 2657 010c 03       		.uleb128 0x3
 2658 010d 0E       		.uleb128 0xe
 2659 010e 3A       		.uleb128 0x3a
 2660 010f 0B       		.uleb128 0xb
 2661 0110 3B       		.uleb128 0x3b
 2662 0111 0B       		.uleb128 0xb
 2663 0112 27       		.uleb128 0x27
 2664 0113 19       		.uleb128 0x19
 2665 0114 49       		.uleb128 0x49
 2666 0115 13       		.uleb128 0x13
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 73


 2667 0116 3C       		.uleb128 0x3c
 2668 0117 19       		.uleb128 0x19
 2669 0118 00       		.byte	0
 2670 0119 00       		.byte	0
 2671 011a 13       		.uleb128 0x13
 2672 011b 2E       		.uleb128 0x2e
 2673 011c 01       		.byte	0x1
 2674 011d 3F       		.uleb128 0x3f
 2675 011e 19       		.uleb128 0x19
 2676 011f 03       		.uleb128 0x3
 2677 0120 0E       		.uleb128 0xe
 2678 0121 3A       		.uleb128 0x3a
 2679 0122 0B       		.uleb128 0xb
 2680 0123 3B       		.uleb128 0x3b
 2681 0124 0B       		.uleb128 0xb
 2682 0125 27       		.uleb128 0x27
 2683 0126 19       		.uleb128 0x19
 2684 0127 3C       		.uleb128 0x3c
 2685 0128 19       		.uleb128 0x19
 2686 0129 00       		.byte	0
 2687 012a 00       		.byte	0
 2688 012b 14       		.uleb128 0x14
 2689 012c 05       		.uleb128 0x5
 2690 012d 00       		.byte	0
 2691 012e 49       		.uleb128 0x49
 2692 012f 13       		.uleb128 0x13
 2693 0130 00       		.byte	0
 2694 0131 00       		.byte	0
 2695 0132 00       		.byte	0
 2696              		.section	.debug_loc,"",%progbits
 2697              	.Ldebug_loc0:
 2698              	.LLST0:
 2699 0000 06000000 		.4byte	.LVL0
 2700 0004 13000000 		.4byte	.LVL1-1
 2701 0008 0100     		.2byte	0x1
 2702 000a 50       		.byte	0x50
 2703 000b 00000000 		.4byte	0
 2704 000f 00000000 		.4byte	0
 2705              	.LLST1:
 2706 0013 00000000 		.4byte	.LVL2
 2707 0017 07000000 		.4byte	.LVL3-1
 2708 001b 0100     		.2byte	0x1
 2709 001d 50       		.byte	0x50
 2710 001e 07000000 		.4byte	.LVL3-1
 2711 0022 16000000 		.4byte	.LVL4
 2712 0026 0100     		.2byte	0x1
 2713 0028 54       		.byte	0x54
 2714 0029 16000000 		.4byte	.LVL4
 2715 002d 28000000 		.4byte	.LFE4
 2716 0031 0400     		.2byte	0x4
 2717 0033 F3       		.byte	0xf3
 2718 0034 01       		.uleb128 0x1
 2719 0035 50       		.byte	0x50
 2720 0036 9F       		.byte	0x9f
 2721 0037 00000000 		.4byte	0
 2722 003b 00000000 		.4byte	0
 2723              	.LLST2:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 74


 2724 003f 08000000 		.4byte	.LVL3
 2725 0043 1B000000 		.4byte	.LVL5-1
 2726 0047 0100     		.2byte	0x1
 2727 0049 50       		.byte	0x50
 2728 004a 00000000 		.4byte	0
 2729 004e 00000000 		.4byte	0
 2730              	.LLST3:
 2731 0052 00000000 		.4byte	.LVL6
 2732 0056 07000000 		.4byte	.LVL7-1
 2733 005a 0100     		.2byte	0x1
 2734 005c 50       		.byte	0x50
 2735 005d 07000000 		.4byte	.LVL7-1
 2736 0061 16000000 		.4byte	.LVL8
 2737 0065 0100     		.2byte	0x1
 2738 0067 54       		.byte	0x54
 2739 0068 16000000 		.4byte	.LVL8
 2740 006c 28000000 		.4byte	.LFE5
 2741 0070 0400     		.2byte	0x4
 2742 0072 F3       		.byte	0xf3
 2743 0073 01       		.uleb128 0x1
 2744 0074 50       		.byte	0x50
 2745 0075 9F       		.byte	0x9f
 2746 0076 00000000 		.4byte	0
 2747 007a 00000000 		.4byte	0
 2748              	.LLST4:
 2749 007e 08000000 		.4byte	.LVL7
 2750 0082 1B000000 		.4byte	.LVL9-1
 2751 0086 0100     		.2byte	0x1
 2752 0088 50       		.byte	0x50
 2753 0089 00000000 		.4byte	0
 2754 008d 00000000 		.4byte	0
 2755              	.LLST5:
 2756 0091 00000000 		.4byte	.LVL10
 2757 0095 07000000 		.4byte	.LVL11-1
 2758 0099 0100     		.2byte	0x1
 2759 009b 50       		.byte	0x50
 2760 009c 07000000 		.4byte	.LVL11-1
 2761 00a0 16000000 		.4byte	.LVL12
 2762 00a4 0100     		.2byte	0x1
 2763 00a6 54       		.byte	0x54
 2764 00a7 16000000 		.4byte	.LVL12
 2765 00ab 28000000 		.4byte	.LFE6
 2766 00af 0400     		.2byte	0x4
 2767 00b1 F3       		.byte	0xf3
 2768 00b2 01       		.uleb128 0x1
 2769 00b3 50       		.byte	0x50
 2770 00b4 9F       		.byte	0x9f
 2771 00b5 00000000 		.4byte	0
 2772 00b9 00000000 		.4byte	0
 2773              	.LLST6:
 2774 00bd 08000000 		.4byte	.LVL11
 2775 00c1 1B000000 		.4byte	.LVL13-1
 2776 00c5 0100     		.2byte	0x1
 2777 00c7 50       		.byte	0x50
 2778 00c8 00000000 		.4byte	0
 2779 00cc 00000000 		.4byte	0
 2780              	.LLST7:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 75


 2781 00d0 00000000 		.4byte	.LVL14
 2782 00d4 07000000 		.4byte	.LVL15-1
 2783 00d8 0100     		.2byte	0x1
 2784 00da 50       		.byte	0x50
 2785 00db 07000000 		.4byte	.LVL15-1
 2786 00df 18000000 		.4byte	.LVL16
 2787 00e3 0100     		.2byte	0x1
 2788 00e5 54       		.byte	0x54
 2789 00e6 18000000 		.4byte	.LVL16
 2790 00ea 2C000000 		.4byte	.LFE7
 2791 00ee 0400     		.2byte	0x4
 2792 00f0 F3       		.byte	0xf3
 2793 00f1 01       		.uleb128 0x1
 2794 00f2 50       		.byte	0x50
 2795 00f3 9F       		.byte	0x9f
 2796 00f4 00000000 		.4byte	0
 2797 00f8 00000000 		.4byte	0
 2798              	.LLST8:
 2799 00fc 08000000 		.4byte	.LVL15
 2800 0100 21000000 		.4byte	.LVL17-1
 2801 0104 0100     		.2byte	0x1
 2802 0106 50       		.byte	0x50
 2803 0107 00000000 		.4byte	0
 2804 010b 00000000 		.4byte	0
 2805              	.LLST9:
 2806 010f 00000000 		.4byte	.LVL18
 2807 0113 04000000 		.4byte	.LVL19
 2808 0117 0100     		.2byte	0x1
 2809 0119 50       		.byte	0x50
 2810 011a 04000000 		.4byte	.LVL19
 2811 011e 10000000 		.4byte	.LFE8
 2812 0122 0400     		.2byte	0x4
 2813 0124 F3       		.byte	0xf3
 2814 0125 01       		.uleb128 0x1
 2815 0126 50       		.byte	0x50
 2816 0127 9F       		.byte	0x9f
 2817 0128 00000000 		.4byte	0
 2818 012c 00000000 		.4byte	0
 2819              	.LLST10:
 2820 0130 00000000 		.4byte	.LVL20
 2821 0134 07000000 		.4byte	.LVL21-1
 2822 0138 0100     		.2byte	0x1
 2823 013a 50       		.byte	0x50
 2824 013b 07000000 		.4byte	.LVL21-1
 2825 013f 18000000 		.4byte	.LVL22
 2826 0143 0100     		.2byte	0x1
 2827 0145 54       		.byte	0x54
 2828 0146 18000000 		.4byte	.LVL22
 2829 014a 28000000 		.4byte	.LFE9
 2830 014e 0400     		.2byte	0x4
 2831 0150 F3       		.byte	0xf3
 2832 0151 01       		.uleb128 0x1
 2833 0152 50       		.byte	0x50
 2834 0153 9F       		.byte	0x9f
 2835 0154 00000000 		.4byte	0
 2836 0158 00000000 		.4byte	0
 2837              	.LLST11:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 76


 2838 015c 08000000 		.4byte	.LVL21
 2839 0160 21000000 		.4byte	.LVL23-1
 2840 0164 0100     		.2byte	0x1
 2841 0166 50       		.byte	0x50
 2842 0167 00000000 		.4byte	0
 2843 016b 00000000 		.4byte	0
 2844              	.LLST12:
 2845 016f 00000000 		.4byte	.LVL24
 2846 0173 07000000 		.4byte	.LVL25-1
 2847 0177 0100     		.2byte	0x1
 2848 0179 50       		.byte	0x50
 2849 017a 07000000 		.4byte	.LVL25-1
 2850 017e 18000000 		.4byte	.LVL26
 2851 0182 0100     		.2byte	0x1
 2852 0184 54       		.byte	0x54
 2853 0185 18000000 		.4byte	.LVL26
 2854 0189 28000000 		.4byte	.LFE10
 2855 018d 0400     		.2byte	0x4
 2856 018f F3       		.byte	0xf3
 2857 0190 01       		.uleb128 0x1
 2858 0191 50       		.byte	0x50
 2859 0192 9F       		.byte	0x9f
 2860 0193 00000000 		.4byte	0
 2861 0197 00000000 		.4byte	0
 2862              	.LLST13:
 2863 019b 08000000 		.4byte	.LVL25
 2864 019f 21000000 		.4byte	.LVL27-1
 2865 01a3 0100     		.2byte	0x1
 2866 01a5 50       		.byte	0x50
 2867 01a6 00000000 		.4byte	0
 2868 01aa 00000000 		.4byte	0
 2869              	.LLST14:
 2870 01ae 00000000 		.4byte	.LVL28
 2871 01b2 07000000 		.4byte	.LVL29-1
 2872 01b6 0100     		.2byte	0x1
 2873 01b8 50       		.byte	0x50
 2874 01b9 07000000 		.4byte	.LVL29-1
 2875 01bd 16000000 		.4byte	.LVL30
 2876 01c1 0100     		.2byte	0x1
 2877 01c3 54       		.byte	0x54
 2878 01c4 16000000 		.4byte	.LVL30
 2879 01c8 2C000000 		.4byte	.LFE11
 2880 01cc 0400     		.2byte	0x4
 2881 01ce F3       		.byte	0xf3
 2882 01cf 01       		.uleb128 0x1
 2883 01d0 50       		.byte	0x50
 2884 01d1 9F       		.byte	0x9f
 2885 01d2 00000000 		.4byte	0
 2886 01d6 00000000 		.4byte	0
 2887              	.LLST15:
 2888 01da 08000000 		.4byte	.LVL29
 2889 01de 1F000000 		.4byte	.LVL31-1
 2890 01e2 0100     		.2byte	0x1
 2891 01e4 50       		.byte	0x50
 2892 01e5 00000000 		.4byte	0
 2893 01e9 00000000 		.4byte	0
 2894              	.LLST16:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 77


 2895 01ed 00000000 		.4byte	.LVL32
 2896 01f1 07000000 		.4byte	.LVL33-1
 2897 01f5 0100     		.2byte	0x1
 2898 01f7 50       		.byte	0x50
 2899 01f8 07000000 		.4byte	.LVL33-1
 2900 01fc 16000000 		.4byte	.LVL34
 2901 0200 0100     		.2byte	0x1
 2902 0202 54       		.byte	0x54
 2903 0203 16000000 		.4byte	.LVL34
 2904 0207 28000000 		.4byte	.LFE12
 2905 020b 0400     		.2byte	0x4
 2906 020d F3       		.byte	0xf3
 2907 020e 01       		.uleb128 0x1
 2908 020f 50       		.byte	0x50
 2909 0210 9F       		.byte	0x9f
 2910 0211 00000000 		.4byte	0
 2911 0215 00000000 		.4byte	0
 2912              	.LLST17:
 2913 0219 08000000 		.4byte	.LVL33
 2914 021d 1B000000 		.4byte	.LVL35-1
 2915 0221 0100     		.2byte	0x1
 2916 0223 50       		.byte	0x50
 2917 0224 00000000 		.4byte	0
 2918 0228 00000000 		.4byte	0
 2919              	.LLST18:
 2920 022c 00000000 		.4byte	.LVL36
 2921 0230 02000000 		.4byte	.LVL37
 2922 0234 0100     		.2byte	0x1
 2923 0236 50       		.byte	0x50
 2924 0237 02000000 		.4byte	.LVL37
 2925 023b 10000000 		.4byte	.LFE13
 2926 023f 0400     		.2byte	0x4
 2927 0241 F3       		.byte	0xf3
 2928 0242 01       		.uleb128 0x1
 2929 0243 50       		.byte	0x50
 2930 0244 9F       		.byte	0x9f
 2931 0245 00000000 		.4byte	0
 2932 0249 00000000 		.4byte	0
 2933              	.LLST19:
 2934 024d 00000000 		.4byte	.LVL38
 2935 0251 07000000 		.4byte	.LVL39-1
 2936 0255 0100     		.2byte	0x1
 2937 0257 50       		.byte	0x50
 2938 0258 07000000 		.4byte	.LVL39-1
 2939 025c 16000000 		.4byte	.LVL40
 2940 0260 0100     		.2byte	0x1
 2941 0262 54       		.byte	0x54
 2942 0263 16000000 		.4byte	.LVL40
 2943 0267 28000000 		.4byte	.LFE15
 2944 026b 0400     		.2byte	0x4
 2945 026d F3       		.byte	0xf3
 2946 026e 01       		.uleb128 0x1
 2947 026f 50       		.byte	0x50
 2948 0270 9F       		.byte	0x9f
 2949 0271 00000000 		.4byte	0
 2950 0275 00000000 		.4byte	0
 2951              	.LLST20:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 78


 2952 0279 08000000 		.4byte	.LVL39
 2953 027d 1B000000 		.4byte	.LVL41-1
 2954 0281 0100     		.2byte	0x1
 2955 0283 50       		.byte	0x50
 2956 0284 00000000 		.4byte	0
 2957 0288 00000000 		.4byte	0
 2958              	.LLST21:
 2959 028c 00000000 		.4byte	.LVL42
 2960 0290 02000000 		.4byte	.LVL43
 2961 0294 0100     		.2byte	0x1
 2962 0296 50       		.byte	0x50
 2963 0297 02000000 		.4byte	.LVL43
 2964 029b 10000000 		.4byte	.LFE16
 2965 029f 0400     		.2byte	0x4
 2966 02a1 F3       		.byte	0xf3
 2967 02a2 01       		.uleb128 0x1
 2968 02a3 50       		.byte	0x50
 2969 02a4 9F       		.byte	0x9f
 2970 02a5 00000000 		.4byte	0
 2971 02a9 00000000 		.4byte	0
 2972              	.LLST22:
 2973 02ad 00000000 		.4byte	.LVL44
 2974 02b1 07000000 		.4byte	.LVL45-1
 2975 02b5 0100     		.2byte	0x1
 2976 02b7 50       		.byte	0x50
 2977 02b8 07000000 		.4byte	.LVL45-1
 2978 02bc 16000000 		.4byte	.LVL46
 2979 02c0 0100     		.2byte	0x1
 2980 02c2 54       		.byte	0x54
 2981 02c3 16000000 		.4byte	.LVL46
 2982 02c7 24000000 		.4byte	.LFE18
 2983 02cb 0400     		.2byte	0x4
 2984 02cd F3       		.byte	0xf3
 2985 02ce 01       		.uleb128 0x1
 2986 02cf 50       		.byte	0x50
 2987 02d0 9F       		.byte	0x9f
 2988 02d1 00000000 		.4byte	0
 2989 02d5 00000000 		.4byte	0
 2990              	.LLST23:
 2991 02d9 08000000 		.4byte	.LVL45
 2992 02dd 1D000000 		.4byte	.LVL47-1
 2993 02e1 0100     		.2byte	0x1
 2994 02e3 50       		.byte	0x50
 2995 02e4 00000000 		.4byte	0
 2996 02e8 00000000 		.4byte	0
 2997              	.LLST24:
 2998 02ec 00000000 		.4byte	.LVL48
 2999 02f0 02000000 		.4byte	.LVL49
 3000 02f4 0100     		.2byte	0x1
 3001 02f6 50       		.byte	0x50
 3002 02f7 02000000 		.4byte	.LVL49
 3003 02fb 10000000 		.4byte	.LFE19
 3004 02ff 0400     		.2byte	0x4
 3005 0301 F3       		.byte	0xf3
 3006 0302 01       		.uleb128 0x1
 3007 0303 50       		.byte	0x50
 3008 0304 9F       		.byte	0x9f
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 79


 3009 0305 00000000 		.4byte	0
 3010 0309 00000000 		.4byte	0
 3011              	.LLST25:
 3012 030d 00000000 		.4byte	.LVL50
 3013 0311 07000000 		.4byte	.LVL51-1
 3014 0315 0100     		.2byte	0x1
 3015 0317 50       		.byte	0x50
 3016 0318 07000000 		.4byte	.LVL51-1
 3017 031c 18000000 		.4byte	.LVL52
 3018 0320 0100     		.2byte	0x1
 3019 0322 54       		.byte	0x54
 3020 0323 18000000 		.4byte	.LVL52
 3021 0327 28000000 		.4byte	.LFE21
 3022 032b 0400     		.2byte	0x4
 3023 032d F3       		.byte	0xf3
 3024 032e 01       		.uleb128 0x1
 3025 032f 50       		.byte	0x50
 3026 0330 9F       		.byte	0x9f
 3027 0331 00000000 		.4byte	0
 3028 0335 00000000 		.4byte	0
 3029              	.LLST26:
 3030 0339 08000000 		.4byte	.LVL51
 3031 033d 21000000 		.4byte	.LVL53-1
 3032 0341 0100     		.2byte	0x1
 3033 0343 50       		.byte	0x50
 3034 0344 00000000 		.4byte	0
 3035 0348 00000000 		.4byte	0
 3036              	.LLST27:
 3037 034c 00000000 		.4byte	.LVL54
 3038 0350 02000000 		.4byte	.LVL55
 3039 0354 0100     		.2byte	0x1
 3040 0356 50       		.byte	0x50
 3041 0357 02000000 		.4byte	.LVL55
 3042 035b 10000000 		.4byte	.LFE22
 3043 035f 0400     		.2byte	0x4
 3044 0361 F3       		.byte	0xf3
 3045 0362 01       		.uleb128 0x1
 3046 0363 50       		.byte	0x50
 3047 0364 9F       		.byte	0x9f
 3048 0365 00000000 		.4byte	0
 3049 0369 00000000 		.4byte	0
 3050              	.LLST28:
 3051 036d 00000000 		.4byte	.LVL56
 3052 0371 02000000 		.4byte	.LVL57
 3053 0375 0100     		.2byte	0x1
 3054 0377 50       		.byte	0x50
 3055 0378 02000000 		.4byte	.LVL57
 3056 037c 10000000 		.4byte	.LFE24
 3057 0380 0400     		.2byte	0x4
 3058 0382 F3       		.byte	0xf3
 3059 0383 01       		.uleb128 0x1
 3060 0384 50       		.byte	0x50
 3061 0385 9F       		.byte	0x9f
 3062 0386 00000000 		.4byte	0
 3063 038a 00000000 		.4byte	0
 3064              	.LLST29:
 3065 038e 00000000 		.4byte	.LVL58
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 80


 3066 0392 07000000 		.4byte	.LVL59-1
 3067 0396 0100     		.2byte	0x1
 3068 0398 50       		.byte	0x50
 3069 0399 07000000 		.4byte	.LVL59-1
 3070 039d 16000000 		.4byte	.LVL60
 3071 03a1 0100     		.2byte	0x1
 3072 03a3 54       		.byte	0x54
 3073 03a4 16000000 		.4byte	.LVL60
 3074 03a8 24000000 		.4byte	.LFE28
 3075 03ac 0400     		.2byte	0x4
 3076 03ae F3       		.byte	0xf3
 3077 03af 01       		.uleb128 0x1
 3078 03b0 50       		.byte	0x50
 3079 03b1 9F       		.byte	0x9f
 3080 03b2 00000000 		.4byte	0
 3081 03b6 00000000 		.4byte	0
 3082              	.LLST30:
 3083 03ba 08000000 		.4byte	.LVL59
 3084 03be 1B000000 		.4byte	.LVL61-1
 3085 03c2 0100     		.2byte	0x1
 3086 03c4 50       		.byte	0x50
 3087 03c5 00000000 		.4byte	0
 3088 03c9 00000000 		.4byte	0
 3089              	.LLST31:
 3090 03cd 00000000 		.4byte	.LVL62
 3091 03d1 07000000 		.4byte	.LVL63-1
 3092 03d5 0100     		.2byte	0x1
 3093 03d7 50       		.byte	0x50
 3094 03d8 07000000 		.4byte	.LVL63-1
 3095 03dc 16000000 		.4byte	.LVL64
 3096 03e0 0100     		.2byte	0x1
 3097 03e2 54       		.byte	0x54
 3098 03e3 16000000 		.4byte	.LVL64
 3099 03e7 24000000 		.4byte	.LFE29
 3100 03eb 0400     		.2byte	0x4
 3101 03ed F3       		.byte	0xf3
 3102 03ee 01       		.uleb128 0x1
 3103 03ef 50       		.byte	0x50
 3104 03f0 9F       		.byte	0x9f
 3105 03f1 00000000 		.4byte	0
 3106 03f5 00000000 		.4byte	0
 3107              	.LLST32:
 3108 03f9 08000000 		.4byte	.LVL63
 3109 03fd 1D000000 		.4byte	.LVL65-1
 3110 0401 0100     		.2byte	0x1
 3111 0403 50       		.byte	0x50
 3112 0404 00000000 		.4byte	0
 3113 0408 00000000 		.4byte	0
 3114              	.LLST33:
 3115 040c 00000000 		.4byte	.LVL66
 3116 0410 07000000 		.4byte	.LVL67-1
 3117 0414 0100     		.2byte	0x1
 3118 0416 50       		.byte	0x50
 3119 0417 07000000 		.4byte	.LVL67-1
 3120 041b 16000000 		.4byte	.LVL68
 3121 041f 0100     		.2byte	0x1
 3122 0421 54       		.byte	0x54
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 81


 3123 0422 16000000 		.4byte	.LVL68
 3124 0426 28000000 		.4byte	.LFE30
 3125 042a 0400     		.2byte	0x4
 3126 042c F3       		.byte	0xf3
 3127 042d 01       		.uleb128 0x1
 3128 042e 50       		.byte	0x50
 3129 042f 9F       		.byte	0x9f
 3130 0430 00000000 		.4byte	0
 3131 0434 00000000 		.4byte	0
 3132              	.LLST34:
 3133 0438 08000000 		.4byte	.LVL67
 3134 043c 1D000000 		.4byte	.LVL69-1
 3135 0440 0100     		.2byte	0x1
 3136 0442 50       		.byte	0x50
 3137 0443 00000000 		.4byte	0
 3138 0447 00000000 		.4byte	0
 3139              	.LLST35:
 3140 044b 00000000 		.4byte	.LVL70
 3141 044f 07000000 		.4byte	.LVL71-1
 3142 0453 0100     		.2byte	0x1
 3143 0455 50       		.byte	0x50
 3144 0456 07000000 		.4byte	.LVL71-1
 3145 045a 16000000 		.4byte	.LVL72
 3146 045e 0100     		.2byte	0x1
 3147 0460 54       		.byte	0x54
 3148 0461 16000000 		.4byte	.LVL72
 3149 0465 24000000 		.4byte	.LFE31
 3150 0469 0400     		.2byte	0x4
 3151 046b F3       		.byte	0xf3
 3152 046c 01       		.uleb128 0x1
 3153 046d 50       		.byte	0x50
 3154 046e 9F       		.byte	0x9f
 3155 046f 00000000 		.4byte	0
 3156 0473 00000000 		.4byte	0
 3157              	.LLST36:
 3158 0477 08000000 		.4byte	.LVL71
 3159 047b 1D000000 		.4byte	.LVL73-1
 3160 047f 0100     		.2byte	0x1
 3161 0481 50       		.byte	0x50
 3162 0482 00000000 		.4byte	0
 3163 0486 00000000 		.4byte	0
 3164              	.LLST37:
 3165 048a 00000000 		.4byte	.LVL74
 3166 048e 07000000 		.4byte	.LVL75-1
 3167 0492 0100     		.2byte	0x1
 3168 0494 50       		.byte	0x50
 3169 0495 07000000 		.4byte	.LVL75-1
 3170 0499 16000000 		.4byte	.LVL76
 3171 049d 0100     		.2byte	0x1
 3172 049f 54       		.byte	0x54
 3173 04a0 16000000 		.4byte	.LVL76
 3174 04a4 24000000 		.4byte	.LFE32
 3175 04a8 0400     		.2byte	0x4
 3176 04aa F3       		.byte	0xf3
 3177 04ab 01       		.uleb128 0x1
 3178 04ac 50       		.byte	0x50
 3179 04ad 9F       		.byte	0x9f
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 82


 3180 04ae 00000000 		.4byte	0
 3181 04b2 00000000 		.4byte	0
 3182              	.LLST38:
 3183 04b6 08000000 		.4byte	.LVL75
 3184 04ba 1D000000 		.4byte	.LVL77-1
 3185 04be 0100     		.2byte	0x1
 3186 04c0 50       		.byte	0x50
 3187 04c1 00000000 		.4byte	0
 3188 04c5 00000000 		.4byte	0
 3189              	.LLST39:
 3190 04c9 00000000 		.4byte	.LVL78
 3191 04cd 09000000 		.4byte	.LVL79-1
 3192 04d1 0100     		.2byte	0x1
 3193 04d3 50       		.byte	0x50
 3194 04d4 09000000 		.4byte	.LVL79-1
 3195 04d8 0C000000 		.4byte	.LVL80
 3196 04dc 0100     		.2byte	0x1
 3197 04de 54       		.byte	0x54
 3198 04df 0C000000 		.4byte	.LVL80
 3199 04e3 1C000000 		.4byte	.LFE33
 3200 04e7 0400     		.2byte	0x4
 3201 04e9 F3       		.byte	0xf3
 3202 04ea 01       		.uleb128 0x1
 3203 04eb 50       		.byte	0x50
 3204 04ec 9F       		.byte	0x9f
 3205 04ed 00000000 		.4byte	0
 3206 04f1 00000000 		.4byte	0
 3207              	.LLST40:
 3208 04f5 00000000 		.4byte	.LVL78
 3209 04f9 09000000 		.4byte	.LVL79-1
 3210 04fd 0100     		.2byte	0x1
 3211 04ff 51       		.byte	0x51
 3212 0500 09000000 		.4byte	.LVL79-1
 3213 0504 14000000 		.4byte	.LVL82
 3214 0508 0100     		.2byte	0x1
 3215 050a 55       		.byte	0x55
 3216 050b 14000000 		.4byte	.LVL82
 3217 050f 1C000000 		.4byte	.LFE33
 3218 0513 0400     		.2byte	0x4
 3219 0515 F3       		.byte	0xf3
 3220 0516 01       		.uleb128 0x1
 3221 0517 51       		.byte	0x51
 3222 0518 9F       		.byte	0x9f
 3223 0519 00000000 		.4byte	0
 3224 051d 00000000 		.4byte	0
 3225              	.LLST41:
 3226 0521 0A000000 		.4byte	.LVL79
 3227 0525 13000000 		.4byte	.LVL81-1
 3228 0529 0100     		.2byte	0x1
 3229 052b 50       		.byte	0x50
 3230 052c 00000000 		.4byte	0
 3231 0530 00000000 		.4byte	0
 3232              	.LLST42:
 3233 0534 06000000 		.4byte	.LVL83
 3234 0538 13000000 		.4byte	.LVL84-1
 3235 053c 0100     		.2byte	0x1
 3236 053e 50       		.byte	0x50
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 83


 3237 053f 00000000 		.4byte	0
 3238 0543 00000000 		.4byte	0
 3239              		.section	.debug_aranges,"",%progbits
 3240 0000 54010000 		.4byte	0x154
 3241 0004 0200     		.2byte	0x2
 3242 0006 00000000 		.4byte	.Ldebug_info0
 3243 000a 04       		.byte	0x4
 3244 000b 00       		.byte	0
 3245 000c 0000     		.2byte	0
 3246 000e 0000     		.2byte	0
 3247 0010 00000000 		.4byte	.LFB3
 3248 0014 1C000000 		.4byte	.LFE3-.LFB3
 3249 0018 00000000 		.4byte	.LFB4
 3250 001c 28000000 		.4byte	.LFE4-.LFB4
 3251 0020 00000000 		.4byte	.LFB5
 3252 0024 28000000 		.4byte	.LFE5-.LFB5
 3253 0028 00000000 		.4byte	.LFB6
 3254 002c 28000000 		.4byte	.LFE6-.LFB6
 3255 0030 00000000 		.4byte	.LFB7
 3256 0034 2C000000 		.4byte	.LFE7-.LFB7
 3257 0038 00000000 		.4byte	.LFB8
 3258 003c 10000000 		.4byte	.LFE8-.LFB8
 3259 0040 00000000 		.4byte	.LFB9
 3260 0044 28000000 		.4byte	.LFE9-.LFB9
 3261 0048 00000000 		.4byte	.LFB10
 3262 004c 28000000 		.4byte	.LFE10-.LFB10
 3263 0050 00000000 		.4byte	.LFB11
 3264 0054 2C000000 		.4byte	.LFE11-.LFB11
 3265 0058 00000000 		.4byte	.LFB12
 3266 005c 28000000 		.4byte	.LFE12-.LFB12
 3267 0060 00000000 		.4byte	.LFB13
 3268 0064 10000000 		.4byte	.LFE13-.LFB13
 3269 0068 00000000 		.4byte	.LFB14
 3270 006c 10000000 		.4byte	.LFE14-.LFB14
 3271 0070 00000000 		.4byte	.LFB15
 3272 0074 28000000 		.4byte	.LFE15-.LFB15
 3273 0078 00000000 		.4byte	.LFB16
 3274 007c 10000000 		.4byte	.LFE16-.LFB16
 3275 0080 00000000 		.4byte	.LFB17
 3276 0084 10000000 		.4byte	.LFE17-.LFB17
 3277 0088 00000000 		.4byte	.LFB18
 3278 008c 24000000 		.4byte	.LFE18-.LFB18
 3279 0090 00000000 		.4byte	.LFB19
 3280 0094 10000000 		.4byte	.LFE19-.LFB19
 3281 0098 00000000 		.4byte	.LFB20
 3282 009c 10000000 		.4byte	.LFE20-.LFB20
 3283 00a0 00000000 		.4byte	.LFB21
 3284 00a4 28000000 		.4byte	.LFE21-.LFB21
 3285 00a8 00000000 		.4byte	.LFB22
 3286 00ac 10000000 		.4byte	.LFE22-.LFB22
 3287 00b0 00000000 		.4byte	.LFB23
 3288 00b4 10000000 		.4byte	.LFE23-.LFB23
 3289 00b8 00000000 		.4byte	.LFB24
 3290 00bc 10000000 		.4byte	.LFE24-.LFB24
 3291 00c0 00000000 		.4byte	.LFB25
 3292 00c4 10000000 		.4byte	.LFE25-.LFB25
 3293 00c8 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 84


 3294 00cc 10000000 		.4byte	.LFE26-.LFB26
 3295 00d0 00000000 		.4byte	.LFB27
 3296 00d4 10000000 		.4byte	.LFE27-.LFB27
 3297 00d8 00000000 		.4byte	.LFB28
 3298 00dc 24000000 		.4byte	.LFE28-.LFB28
 3299 00e0 00000000 		.4byte	.LFB29
 3300 00e4 24000000 		.4byte	.LFE29-.LFB29
 3301 00e8 00000000 		.4byte	.LFB30
 3302 00ec 28000000 		.4byte	.LFE30-.LFB30
 3303 00f0 00000000 		.4byte	.LFB31
 3304 00f4 24000000 		.4byte	.LFE31-.LFB31
 3305 00f8 00000000 		.4byte	.LFB32
 3306 00fc 24000000 		.4byte	.LFE32-.LFB32
 3307 0100 00000000 		.4byte	.LFB33
 3308 0104 1C000000 		.4byte	.LFE33-.LFB33
 3309 0108 00000000 		.4byte	.LFB1
 3310 010c 24000000 		.4byte	.LFE1-.LFB1
 3311 0110 00000000 		.4byte	.LFB34
 3312 0114 14000000 		.4byte	.LFE34-.LFB34
 3313 0118 00000000 		.4byte	.LFB35
 3314 011c 0C000000 		.4byte	.LFE35-.LFB35
 3315 0120 00000000 		.4byte	.LFB0
 3316 0124 44000000 		.4byte	.LFE0-.LFB0
 3317 0128 00000000 		.4byte	.LFB2
 3318 012c 20000000 		.4byte	.LFE2-.LFB2
 3319 0130 00000000 		.4byte	.LFB36
 3320 0134 0C000000 		.4byte	.LFE36-.LFB36
 3321 0138 00000000 		.4byte	.LFB37
 3322 013c 0C000000 		.4byte	.LFE37-.LFB37
 3323 0140 00000000 		.4byte	.LFB38
 3324 0144 0C000000 		.4byte	.LFE38-.LFB38
 3325 0148 00000000 		.4byte	.LFB39
 3326 014c 0C000000 		.4byte	.LFE39-.LFB39
 3327 0150 00000000 		.4byte	0
 3328 0154 00000000 		.4byte	0
 3329              		.section	.debug_ranges,"",%progbits
 3330              	.Ldebug_ranges0:
 3331 0000 00000000 		.4byte	.LFB3
 3332 0004 1C000000 		.4byte	.LFE3
 3333 0008 00000000 		.4byte	.LFB4
 3334 000c 28000000 		.4byte	.LFE4
 3335 0010 00000000 		.4byte	.LFB5
 3336 0014 28000000 		.4byte	.LFE5
 3337 0018 00000000 		.4byte	.LFB6
 3338 001c 28000000 		.4byte	.LFE6
 3339 0020 00000000 		.4byte	.LFB7
 3340 0024 2C000000 		.4byte	.LFE7
 3341 0028 00000000 		.4byte	.LFB8
 3342 002c 10000000 		.4byte	.LFE8
 3343 0030 00000000 		.4byte	.LFB9
 3344 0034 28000000 		.4byte	.LFE9
 3345 0038 00000000 		.4byte	.LFB10
 3346 003c 28000000 		.4byte	.LFE10
 3347 0040 00000000 		.4byte	.LFB11
 3348 0044 2C000000 		.4byte	.LFE11
 3349 0048 00000000 		.4byte	.LFB12
 3350 004c 28000000 		.4byte	.LFE12
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 85


 3351 0050 00000000 		.4byte	.LFB13
 3352 0054 10000000 		.4byte	.LFE13
 3353 0058 00000000 		.4byte	.LFB14
 3354 005c 10000000 		.4byte	.LFE14
 3355 0060 00000000 		.4byte	.LFB15
 3356 0064 28000000 		.4byte	.LFE15
 3357 0068 00000000 		.4byte	.LFB16
 3358 006c 10000000 		.4byte	.LFE16
 3359 0070 00000000 		.4byte	.LFB17
 3360 0074 10000000 		.4byte	.LFE17
 3361 0078 00000000 		.4byte	.LFB18
 3362 007c 24000000 		.4byte	.LFE18
 3363 0080 00000000 		.4byte	.LFB19
 3364 0084 10000000 		.4byte	.LFE19
 3365 0088 00000000 		.4byte	.LFB20
 3366 008c 10000000 		.4byte	.LFE20
 3367 0090 00000000 		.4byte	.LFB21
 3368 0094 28000000 		.4byte	.LFE21
 3369 0098 00000000 		.4byte	.LFB22
 3370 009c 10000000 		.4byte	.LFE22
 3371 00a0 00000000 		.4byte	.LFB23
 3372 00a4 10000000 		.4byte	.LFE23
 3373 00a8 00000000 		.4byte	.LFB24
 3374 00ac 10000000 		.4byte	.LFE24
 3375 00b0 00000000 		.4byte	.LFB25
 3376 00b4 10000000 		.4byte	.LFE25
 3377 00b8 00000000 		.4byte	.LFB26
 3378 00bc 10000000 		.4byte	.LFE26
 3379 00c0 00000000 		.4byte	.LFB27
 3380 00c4 10000000 		.4byte	.LFE27
 3381 00c8 00000000 		.4byte	.LFB28
 3382 00cc 24000000 		.4byte	.LFE28
 3383 00d0 00000000 		.4byte	.LFB29
 3384 00d4 24000000 		.4byte	.LFE29
 3385 00d8 00000000 		.4byte	.LFB30
 3386 00dc 28000000 		.4byte	.LFE30
 3387 00e0 00000000 		.4byte	.LFB31
 3388 00e4 24000000 		.4byte	.LFE31
 3389 00e8 00000000 		.4byte	.LFB32
 3390 00ec 24000000 		.4byte	.LFE32
 3391 00f0 00000000 		.4byte	.LFB33
 3392 00f4 1C000000 		.4byte	.LFE33
 3393 00f8 00000000 		.4byte	.LFB1
 3394 00fc 24000000 		.4byte	.LFE1
 3395 0100 00000000 		.4byte	.LFB34
 3396 0104 14000000 		.4byte	.LFE34
 3397 0108 00000000 		.4byte	.LFB35
 3398 010c 0C000000 		.4byte	.LFE35
 3399 0110 00000000 		.4byte	.LFB0
 3400 0114 44000000 		.4byte	.LFE0
 3401 0118 00000000 		.4byte	.LFB2
 3402 011c 20000000 		.4byte	.LFE2
 3403 0120 00000000 		.4byte	.LFB36
 3404 0124 0C000000 		.4byte	.LFE36
 3405 0128 00000000 		.4byte	.LFB37
 3406 012c 0C000000 		.4byte	.LFE37
 3407 0130 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 86


 3408 0134 0C000000 		.4byte	.LFE38
 3409 0138 00000000 		.4byte	.LFB39
 3410 013c 0C000000 		.4byte	.LFE39
 3411 0140 00000000 		.4byte	0
 3412 0144 00000000 		.4byte	0
 3413              		.section	.debug_line,"",%progbits
 3414              	.Ldebug_line0:
 3415 0000 7A030000 		.section	.debug_str,"MS",%progbits,1
 3415      02004D00 
 3415      00000201 
 3415      FB0E0D00 
 3415      01010101 
 3416              	.LASF37:
 3417 0000 636F756E 		.ascii	"count\000"
 3417      7400
 3418              	.LASF66:
 3419 0006 50574D5F 		.ascii	"PWM_Enable\000"
 3419      456E6162 
 3419      6C6500
 3420              	.LASF81:
 3421 0011 43794578 		.ascii	"CyExitCriticalSection\000"
 3421      69744372 
 3421      69746963 
 3421      616C5365 
 3421      6374696F 
 3422              	.LASF28:
 3423 0027 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 3423      53657450 
 3423      574D5379 
 3423      6E634B69 
 3423      6C6C00
 3424              	.LASF41:
 3425 003a 70657269 		.ascii	"period\000"
 3425      6F6400
 3426              	.LASF7:
 3427 0041 6C6F6E67 		.ascii	"long long unsigned int\000"
 3427      206C6F6E 
 3427      6720756E 
 3427      7369676E 
 3427      65642069 
 3428              	.LASF58:
 3429 0058 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 3429      53657443 
 3429      61707475 
 3429      72654D6F 
 3429      646500
 3430              	.LASF21:
 3431 006b 71644D6F 		.ascii	"qdMode\000"
 3431      646500
 3432              	.LASF36:
 3433 0072 50574D5F 		.ascii	"PWM_WriteCounter\000"
 3433      57726974 
 3433      65436F75 
 3433      6E746572 
 3433      00
 3434              	.LASF42:
 3435 0083 50574D5F 		.ascii	"PWM_ReadCounter\000"
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 87


 3435      52656164 
 3435      436F756E 
 3435      74657200 
 3436              	.LASF6:
 3437 0093 6C6F6E67 		.ascii	"long long int\000"
 3437      206C6F6E 
 3437      6720696E 
 3437      7400
 3438              	.LASF0:
 3439 00a1 7369676E 		.ascii	"signed char\000"
 3439      65642063 
 3439      68617200 
 3440              	.LASF53:
 3441 00ad 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 3441      57726974 
 3441      65436F6D 
 3441      70617265 
 3441      42756600 
 3442              	.LASF68:
 3443 00c1 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 3443      53657449 
 3443      6E746572 
 3443      72757074 
 3443      4D6F6465 
 3444              	.LASF74:
 3445 00d6 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 3445      436C6561 
 3445      72496E74 
 3445      65727275 
 3445      707400
 3446              	.LASF77:
 3447 00e9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 3447      6E657261 
 3447      7465645F 
 3447      536F7572 
 3447      63655C50 
 3448              	.LASF4:
 3449 0108 6C6F6E67 		.ascii	"long int\000"
 3449      20696E74 
 3449      00
 3450              	.LASF9:
 3451 0111 75696E74 		.ascii	"uint8\000"
 3451      3800
 3452              	.LASF12:
 3453 0117 646F7562 		.ascii	"double\000"
 3453      6C6500
 3454              	.LASF55:
 3455 011e 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 3455      52656164 
 3455      436F6D70 
 3455      61726542 
 3455      756600
 3456              	.LASF44:
 3457 0131 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 3457      53657443 
 3457      6F6D7061 
 3457      72655377 
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 88


 3457      617000
 3458              	.LASF16:
 3459 0144 50574D5F 		.ascii	"PWM_Stop\000"
 3459      53746F70 
 3459      00
 3460              	.LASF34:
 3461 014d 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 3461      53657450 
 3461      574D496E 
 3461      76657274 
 3461      00
 3462              	.LASF10:
 3463 015e 75696E74 		.ascii	"uint32\000"
 3463      333200
 3464              	.LASF61:
 3465 0165 50574D5F 		.ascii	"PWM_SetStartMode\000"
 3465      53657453 
 3465      74617274 
 3465      4D6F6465 
 3465      00
 3466              	.LASF59:
 3467 0176 74726967 		.ascii	"triggerMode\000"
 3467      6765724D 
 3467      6F646500 
 3468              	.LASF35:
 3469 0182 6D61736B 		.ascii	"mask\000"
 3469      00
 3470              	.LASF67:
 3471 0187 50574D5F 		.ascii	"PWM_ReadStatus\000"
 3471      52656164 
 3471      53746174 
 3471      757300
 3472              	.LASF33:
 3473 0196 64656164 		.ascii	"deadTime\000"
 3473      54696D65 
 3473      00
 3474              	.LASF62:
 3475 019f 50574D5F 		.ascii	"PWM_SetStopMode\000"
 3475      53657453 
 3475      746F704D 
 3475      6F646500 
 3476              	.LASF8:
 3477 01af 756E7369 		.ascii	"unsigned int\000"
 3477      676E6564 
 3477      20696E74 
 3477      00
 3478              	.LASF32:
 3479 01bc 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 3479      53657450 
 3479      574D4465 
 3479      61645469 
 3479      6D6500
 3480              	.LASF65:
 3481 01cf 636F6D6D 		.ascii	"command\000"
 3481      616E6400 
 3482              	.LASF5:
 3483 01d7 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 89


 3483      20756E73 
 3483      69676E65 
 3483      6420696E 
 3483      7400
 3484              	.LASF27:
 3485 01e9 6D6F6465 		.ascii	"modeMask\000"
 3485      4D61736B 
 3485      00
 3486              	.LASF80:
 3487 01f2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3487      74657243 
 3487      72697469 
 3487      63616C53 
 3487      65637469 
 3488              	.LASF3:
 3489 0209 73686F72 		.ascii	"short unsigned int\000"
 3489      7420756E 
 3489      7369676E 
 3489      65642069 
 3489      6E7400
 3490              	.LASF22:
 3491 021c 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 3491      53657450 
 3491      72657363 
 3491      616C6572 
 3491      00
 3492              	.LASF25:
 3493 022d 6F6E6553 		.ascii	"oneShotEnable\000"
 3493      686F7445 
 3493      6E61626C 
 3493      6500
 3494              	.LASF64:
 3495 023b 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 3495      54726967 
 3495      67657243 
 3495      6F6D6D61 
 3495      6E6400
 3496              	.LASF50:
 3497 024e 50574D5F 		.ascii	"PWM_WriteCompare\000"
 3497      57726974 
 3497      65436F6D 
 3497      70617265 
 3497      00
 3498              	.LASF40:
 3499 025f 50574D5F 		.ascii	"PWM_WritePeriod\000"
 3499      57726974 
 3499      65506572 
 3499      696F6400 
 3500              	.LASF14:
 3501 026f 72656733 		.ascii	"reg32\000"
 3501      3200
 3502              	.LASF79:
 3503 0275 50574D5F 		.ascii	"PWM_initVar\000"
 3503      696E6974 
 3503      56617200 
 3504              	.LASF43:
 3505 0281 50574D5F 		.ascii	"PWM_ReadPeriod\000"
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 90


 3505      52656164 
 3505      50657269 
 3505      6F6400
 3506              	.LASF15:
 3507 0290 73697A65 		.ascii	"sizetype\000"
 3507      74797065 
 3507      00
 3508              	.LASF29:
 3509 0299 73796E63 		.ascii	"syncKillEnable\000"
 3509      4B696C6C 
 3509      456E6162 
 3509      6C6500
 3510              	.LASF51:
 3511 02a8 636F6D70 		.ascii	"compare\000"
 3511      61726500 
 3512              	.LASF24:
 3513 02b0 50574D5F 		.ascii	"PWM_SetOneShot\000"
 3513      5365744F 
 3513      6E655368 
 3513      6F7400
 3514              	.LASF48:
 3515 02bf 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 3515      52656164 
 3515      50657269 
 3515      6F644275 
 3515      6600
 3516              	.LASF76:
 3517 02d1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3517      4320342E 
 3517      392E3320 
 3517      32303135 
 3517      30333033 
 3518 0304 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3518      20726576 
 3518      6973696F 
 3518      6E203232 
 3518      31323230 
 3519 0337 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3519      66756E63 
 3519      74696F6E 
 3519      2D736563 
 3519      74696F6E 
 3520              	.LASF11:
 3521 035f 666C6F61 		.ascii	"float\000"
 3521      7400
 3522              	.LASF23:
 3523 0365 70726573 		.ascii	"prescaler\000"
 3523      63616C65 
 3523      7200
 3524              	.LASF56:
 3525 036f 50574D5F 		.ascii	"PWM_ReadCapture\000"
 3525      52656164 
 3525      43617074 
 3525      75726500 
 3526              	.LASF49:
 3527 037f 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 3527      53657450 
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 91


 3527      6572696F 
 3527      64537761 
 3527      7000
 3528              	.LASF1:
 3529 0391 756E7369 		.ascii	"unsigned char\000"
 3529      676E6564 
 3529      20636861 
 3529      7200
 3530              	.LASF70:
 3531 039f 50574D5F 		.ascii	"PWM_Init\000"
 3531      496E6974 
 3531      00
 3532              	.LASF31:
 3533 03a8 73746F70 		.ascii	"stopOnKillEnable\000"
 3533      4F6E4B69 
 3533      6C6C456E 
 3533      61626C65 
 3533      00
 3534              	.LASF26:
 3535 03b9 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 3535      53657450 
 3535      574D4D6F 
 3535      646500
 3536              	.LASF2:
 3537 03c8 73686F72 		.ascii	"short int\000"
 3537      7420696E 
 3537      7400
 3538              	.LASF72:
 3539 03d2 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 3539      47657449 
 3539      6E746572 
 3539      72757074 
 3539      536F7572 
 3540              	.LASF69:
 3541 03ef 696E7465 		.ascii	"interruptMask\000"
 3541      72727570 
 3541      744D6173 
 3541      6B00
 3542              	.LASF71:
 3543 03fd 50574D5F 		.ascii	"PWM_Start\000"
 3543      53746172 
 3543      7400
 3544              	.LASF46:
 3545 0407 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 3545      57726974 
 3545      65506572 
 3545      696F6442 
 3545      756600
 3546              	.LASF19:
 3547 041a 50574D5F 		.ascii	"PWM_SetQDMode\000"
 3547      53657451 
 3547      444D6F64 
 3547      6500
 3548              	.LASF13:
 3549 0428 63686172 		.ascii	"char\000"
 3549      00
 3550              	.LASF20:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 92


 3551 042d 6D6F6465 		.ascii	"mode\000"
 3551      00
 3552              	.LASF75:
 3553 0432 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 3553      53657449 
 3553      6E746572 
 3553      72757074 
 3553      00
 3554              	.LASF78:
 3555 0443 433A5C55 		.ascii	"C:\\Users\\cdc75\\Desktop\\Labs\\Lesson10_Challenge"
 3555      73657273 
 3555      5C636463 
 3555      37355C44 
 3555      65736B74 
 3556 0471 2E637964 		.ascii	".cydsn\000"
 3556      736E00
 3557              	.LASF60:
 3558 0478 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 3558      53657452 
 3558      656C6F61 
 3558      644D6F64 
 3558      6500
 3559              	.LASF39:
 3560 048a 636F756E 		.ascii	"counterMode\000"
 3560      7465724D 
 3560      6F646500 
 3561              	.LASF54:
 3562 0496 636F6D70 		.ascii	"compareBuf\000"
 3562      61726542 
 3562      756600
 3563              	.LASF47:
 3564 04a1 70657269 		.ascii	"periodBuf\000"
 3564      6F644275 
 3564      6600
 3565              	.LASF57:
 3566 04ab 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 3566      52656164 
 3566      43617074 
 3566      75726542 
 3566      756600
 3567              	.LASF18:
 3568 04be 656E6162 		.ascii	"enableInterrupts\000"
 3568      6C65496E 
 3568      74657272 
 3568      75707473 
 3568      00
 3569              	.LASF63:
 3570 04cf 50574D5F 		.ascii	"PWM_SetCountMode\000"
 3570      53657443 
 3570      6F756E74 
 3570      4D6F6465 
 3570      00
 3571              	.LASF17:
 3572 04e0 50574D5F 		.ascii	"PWM_SetMode\000"
 3572      5365744D 
 3572      6F646500 
 3573              	.LASF30:
ARM GAS  C:\Users\cdc75\AppData\Local\Temp\ccAA0Ty0.s 			page 93


 3574 04ec 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 3574      53657450 
 3574      574D5374 
 3574      6F704F6E 
 3574      4B696C6C 
 3575              	.LASF45:
 3576 0501 73776170 		.ascii	"swapEnable\000"
 3576      456E6162 
 3576      6C6500
 3577              	.LASF73:
 3578 050c 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 3578      47657449 
 3578      6E746572 
 3578      72757074 
 3578      536F7572 
 3579              	.LASF38:
 3580 0523 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 3580      53657443 
 3580      6F756E74 
 3580      65724D6F 
 3580      646500
 3581              	.LASF52:
 3582 0536 50574D5F 		.ascii	"PWM_ReadCompare\000"
 3582      52656164 
 3582      436F6D70 
 3582      61726500 
 3583              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
